lines(temperatureData$CIE, lty = 3, col = "grey80") #Case Inlet eelgrass
mtext(side = 3, line = -1, adj = 0, text = "Case Inlet", cex = 0.75) #Add site name. Use adj = 0 to left-justify the text
mtext(side = 3, line = -1, adj = 1, text = "Unvegetated", cex = 0.5, col = "#00A9BD") #Add habitat specificiation name. Use adj = 1 to right-justify the text
mtext(side = 3, line = -1.75, adj = 1, text = "Eelgrass", cex = 0.5, col = "grey80") #Add habitat specificiation name. Use adj = 1 to right-justify the text
box(col = "grey80")
axis(side = 2, las = 1, at = c(15, 35), col = "grey80") #Put the axis labels at the values specified
mtext(side = 2, line = 3, "Temperature (ÂºC)") #Add environmental variable indication
plot(temperatureData$FBB, xaxs = "i", yaxs = "i", axes = F, ann = F, ylim = temperatureRange, pch = 16, cex = 0.2, col = "#38001C") #Fidalgo Bay bare
lines(temperatureData$FBE, lty = 3, col = "grey80") #Eelgrass
mtext(side = 3, line = -1, adj = 0, text = "Fidalgo Bay", cex = 0.75) #Add site name. Use adj = 0 to left-justify the text
mtext(side = 3, line = -1, adj = 1, text = "Unvegetated", cex = 0.5, col = "#38001C") #Add habitat specificiation name. Use adj = 1 to right-justify the text
mtext(side = 3, line = -1.75, adj = 1, text = "Eelgrass", cex = 0.5, col = "grey80") #Add habitat specificiation name. Use adj = 1 to right-justify the text
box(col = "grey80")
plot(temperatureData$PGB, xaxs = "i", yaxs = "i", axes = F, ann = F, ylim = temperatureRange, pch = 16, cex = 0.2, col = "#440D82") #Port Gamble bare
lines(temperatureData$PGE, lty = 3, col = "grey80") #Eelgrass
mtext(side = 3, line = -1, adj = 0, text = "Port Gamble Bay", cex = 0.75) #Add site name. Use adj = 0 to left-justify the text
mtext(side = 3, line = -1, adj = 1, text = "Unvegetated", cex = 0.5, col = "#440D82") #Add habitat specificiation name. Use adj = 1 to right-justify the text
mtext(side = 3, line = -1.75, adj = 1, text = "Eelgrass", cex = 0.5, col = "grey80") #Add habitat specificiation name. Use adj = 1 to right-justify the text
box(col = "grey80")
plot(temperatureData$SKB, xaxs = "i", yaxs = "i", axes = F, ann = F, ylim = temperatureRange, pch = 16, cex = 0.2, col = "#017A74") #Skokomish River bare
lines(temperatureData$SKE, lty = 3, col = "grey80") #Eelgrass
mtext(side = 3, line = -1, adj = 0, text = "Skokomish River Delta", cex = 0.75) #Add site name. Use adj = 0 to left-justify the text
mtext(side = 3, line = -1, adj = 1, text = "Unvegetated", cex = 0.5, col = "#017A74") #Add habitat specificiation name. Use adj = 1 to right-justify the text
mtext(side = 3, line = -1.75, adj = 1, text = "Eelgrass", cex = 0.5, col = "grey80") #Add habitat specificiation name. Use adj = 1 to right-justify the text
box(col = "grey80")
plot(temperatureData$WBB, xaxs = "i", yaxs = "i", axes = F, ann = F, ylim = temperatureRange, pch = 16, cex = 0.2, col = "#EB8B0C") #Willapa Bay bare
lines(temperatureData$WBE, lty = 3, col = "grey80") #Eelgrass
mtext(side = 3, line = -1, adj = 0, text = "Willapa Bay", cex = 0.75) #Add site name. Use adj = 0 to left-justify the text
mtext(side = 3, line = -1, adj = 1, text = "Unvegetated", cex = 0.5, col = "#EB8B0C") #Add habitat specificiation name. Use adj = 1 to right-justify the text
mtext(side = 3, line = -1.75, adj = 1, text = "Eelgrass", cex = 0.5, col = "grey80") #Add habitat specificiation name. Use adj = 1 to right-justify the text
box(col = "grey80")
#pH data
plot(pHData$CIB.pH, xaxs = "i", yaxs = "i", axes = F, ann = F, ylim = pHRange, pch = 16, cex = 0.2, col = "#00A9BD") #Case Inlet bare
lines(pHData$CIE.pH, lty = 3, col = "grey80") #Eelgrass
box(col = "grey80")
axis(side = 2, las = 1, at = c(7.5, 8.5), col = "grey80") #Put the axis labels at the values specified
mtext(side = 2, line = 3, "pH") #Add environmental variable indication
plot(pHData$FBB.pH, xaxs = "i", yaxs = "i", axes = F, ann = F, ylim = pHRange, pch = 16, cex = 0.2, col = "#38001C") #Fidalgo Bay bare
lines(pHData$FBE.pH, lty = 3, col = "grey80") #Eelgrass
box(col = "grey80")
plot(pHData$PGB.pH, xaxs = "i", yaxs = "i", axes = F, ann = F, ylim = pHRange, pch = 16, cex = 0.2, col = "#440D82") #Port Gamble bare
box(col = "grey80")
plot(pHData$SKB.pH, xaxs = "i", yaxs = "i", axes = F, ann = F, ylim = pHRange, pch = 16, cex = 0.2, col = "#017A74") #Skokomish River bare
lines(pHData$SKE.pH, lty = 3, col = "grey80") #Eelgrass
box(col = "grey80")
plot(pHData$WBB.pH, xaxs = "i", yaxs = "i", axes = F, ann = F, ylim = pHRange, pch = 16, cex = 0.2, col = "#EB8B0C") #Willapa Bay bare
lines(pHData$WBE.pH, lty = 3, col = "grey80") #Eelgrass
box(col = "grey80")
#Salinity
plot(salinityData$CIB.Salinity, xaxs = "i", yaxs = "i", axes = F, ann = F, ylim = salinityRange, pch = 16, cex = 0.2, col = "#00A9BD") #Case Inlet bare
lines(salinityData$CIE.Salinity, lty = 3, col = "grey80") #Eelgrass
box(col = "grey80")
axis(side = 2, las = 1, at = c(15, 25), col = "grey80") #Put the axis labels at the values specified
mtext(side = 2, line = 3, "Salinity (PSU)") #Add environmental variable indication
plot(salinityData$FBB.Salinity, xaxs = "i", yaxs = "i", axes = F, ann = F, ylim = salinityRange, pch = 16, cex = 0.2, col = "#38001C") #Fidalgo Bay bare
lines(salinityData$FBE.Salinity, lty = 3, col = "grey80") #Eelgrass
box(col = "grey80")
plot(salinityData$PGE.Salinity, type = "l", lty = 3, xaxs = "i", yaxs = "i", axes = F, ann = F, ylim = salinityRange, col = "grey80") #Port Gamble Bay bare
lines(salinityData$PGE.Salinity, lty = 3, col = "grey80") #Eelgrass
box(col = "grey80")
plot(salinityData$SKB.Salinity, xaxs = "i", yaxs = "i", axes = F, ann = F, ylim = salinityRange, pch = 16, cex = 0.2, col = "#017A74") #Skokomish River bare
lines(salinityData$SKE.Salinity, lty = 3, col = "grey80") #Eelgrass
box(col = "grey80")
plot(salinityData$WBB.Salinity, xaxs = "i", yaxs = "i", axes = F, ann = F, ylim = salinityRange, pch = 16, cex = 0.2, col = "#EB8B0C") #Willapa Bay bare
box(col = "grey80")
#Dissolved oxygen
plot(DOData$CIB.DO, xaxs = "i", yaxs = "i", axes = F, ann = F, ylim = DORange, pch = 16, cex = 0.2, col = "#00A9BD") #Case Inlet bare
lines(DOData$CIE.DO, lty = 3, col = "grey80") #Eelgrass
box(col = "grey80")
axis(side = 2, las = 1, at = c(25, 45), col = "grey80") #Put the axis labels at the values specified
mtext(side = 2, line = 3, "DO (mg/L)") #Add environmental variable indication
axis(side = 1, at = seq(from = 1, to = length(temperatureData$Date), by = 144*5), lab = temperatureData$Date[seq(from = 1, to = length(temperatureData$Date), by = 144*5)], las = 3, col = "grey80") #Make x-axis
plot(DOData$FBB.DO, xaxs = "i", yaxs = "i", axes = F, ann = F, ylim = DORange, pch = 16, cex = 0.2, col = "#38001C") #Fidalgo Bay bare
lines(DOData$FBE.DO, lty = 3, col = "grey80") #Eelgrass
box(col = "grey80")
axis(side = 1, at = seq(from = 1, to = length(temperatureData$Date), by = 144*5), lab = temperatureData$Date[seq(from = 1, to = length(temperatureData$Date), by = 144*5)], las = 3, col = "grey80") #Make x-axis
plot(DOData$PGB.DO, xaxs = "i", yaxs = "i", axes = F, ann = F, ylim = DORange, pch = 16, cex = 0.2, col = "#440D82") #Port Gamble bare
lines(DOData$PGE.DO, lty = 3, col = "grey80") #Eelgrass
box(col = "grey80")
axis(side = 1, at = seq(from = 1, to = length(temperatureData$Date), by = 144*5), lab = temperatureData$Date[seq(from = 1, to = length(temperatureData$Date), by = 144*5)], las = 3, col = "grey80") #Make x-axis
plot(DOData$SKB.DO, type = "l", xaxs = "i", yaxs = "i", axes = F, ann = F, ylim = DORange, pch = 16, cex = 0.2, col = "#017A74") #Skokomish River bare
lines(DOData$SKE.DO, lty = 3, col = "grey80") #Eelgrass
box(col = "grey80")
axis(side = 1, at = seq(from = 1, to = length(temperatureData$Date), by = 144*5), lab = temperatureData$Date[seq(from = 1, to = length(temperatureData$Date), by = 144*5)], las = 3, col = "grey80") #Make x-axis
plot(DOData$WBB.DO, type = "l", xaxs = "i", yaxs = "i", axes = F, ann = F, ylim = DORange, pch = 16, cex = 0.2, col = "#EB8B0C") #Willapa Bay bare
lines(DOData$WBE.DO, lty = 3, col = "grey80") #Eelgrass
box(col = "grey80")
axis(side = 1, at = seq(from = 1, to = length(temperatureData$Date), by = 144*5), lab = temperatureData$Date[seq(from = 1, to = length(temperatureData$Date), by = 144*5)], las = 3, col = "grey80") #Make x-axis
mtext(side = 1, outer = TRUE, line = 7, "Date")
knitr::opts_chunk$set(echo = TRUE) #Set up R Markdown File
require(vegan)
source("biostats.R") #Biostats analysis wrapper
source("../../biostats.R") #Biostats analysis wrapper
sessionInfo() #Obtain session information
SRMDataNMDSPivotedCorrected <- read.csv("analyses/DNR_SRM_20170902/2017-10-10-Troubleshooting/2017-11-05-Integrated-Dataset/2017-11-05-Technical-Replicates-Pivoted.csv")
rownames(SRMDataNMDSPivotedCorrected) <- SRMDataNMDSPivotedCorrected$X #Set row names
SRMDataNMDSPivotedCorrected <- SRMDataNMDSPivotedCorrected[,-1] #Remove column of row names
head(SRMDataNMDSPivotedCorrected) #Confirm there are no NAs
sampleColumnNames <- c("O01", "O04", "O08", "O10", "O100", "O101", "O102", "O106", "O118", "O121", "O124", "O131", "O137", "O140", "O147", "O17", "O21", "O22", "O24", "O26", "O30", "O31", "O32", "O35", "O40", "O43", "O46", "O51", "O56", "O60", "O64", "O66", "O78", "O90", "O91", "O96", "O99") #Create a sample ID vector
biologicalReplicates <- read.csv("analyses/DNR_SRM_20170902/2017-10-10-Troubleshooting/2017-10-24-Coefficient-of-Variation/2017-10-25-Biological-Replicate-Information-SampleID-Only.csv", header = TRUE) #Import biological replicate information
colnames(biologicalReplicates) <- c("Sample.Number", "Site", "Eelgrass.Condition") #Rename columns
head(biologicalReplicates) #Confirm import
SRMDataNMDSAveraged <- data.frame(x = rep(x = 0, times = length(SRMDataNMDSPivotedCorrected$O01.1)),
y = rep(x = 0, times = length(SRMDataNMDSPivotedCorrected$O01.1))) #Create an empty dataframe to store averaged values
row.names(SRMDataNMDSAveraged) <- row.names(SRMDataNMDSPivotedCorrected) #Add row names
head(SRMDataNMDSAveraged) #Confirm changes
tail(SRMDataNMDSAveraged) #Confirm changes
for(i in 1:(length(SRMDataNMDSPivotedCorrected))) { #Average normalized area values for consecutive columns
SRMDataNMDSAveraged[,i] <- (SRMDataNMDSPivotedCorrected[,i]+SRMDataNMDSPivotedCorrected[,i+1])/2
}
head(SRMDataNMDSAveraged) #Confirm averaging
SRMDataNMDSAveraged <- SRMDataNMDSAveraged[seq(from = 1, to = (length(SRMDataNMDSPivotedCorrected)-1), by = 2)] #Remove even-numbered columns, since those consecutive columns are not technical replicates
head(SRMDataNMDSAveraged) #Confirm column removal
colnames(SRMDataNMDSAveraged) <- sampleColumnNames #Add column names
colnames(SRMDataNMDSAveraged) #Confirm column naming
head(SRMDataNMDSAveraged) #Confirm column naming
SRMDataNMDSAveragedCorrected <- SRMDataNMDSAveraged #Duplicate dataframe
head(SRMDataNMDSAveragedCorrected) #Confirm there are no NAs
#write.csv(SRMDataNMDSAveragedCorrected, "2017-10-10-Troubleshooting/2017-11-05-Integrated-Dataset/2017-11-05-Averaged-Areas-Pivoted-Corrected.csv") #Wrote out dataframe
write.csv(SRMDataNMDSAveragedCorrected, "analyses/DNR_SRM_20170902/2017-10-10-Troubleshooting/2017-11-05-Integrated-Dataset/2018-11-27-Averaged-Areas-Pivoted-NAs.csv") #Wrote out dataframe with NAs
proteinAbundance <- read.csv("2018-11-27-Averaged-Areas-Pivoted-NAs.csv", header = TRUE, row.names = TRUE) #Import protein abundance data
proteinAbundance <- read.csv("2018-11-27-Averaged-Areas-Pivoted-NAs.csv", header = TRUE) #Import protein abundance data
head(proteinAbundance)
row.names(proteinAbundance) <- proteinAbundance[,1] #Assign first column as rownames
proteinAbundance <- proteinAbundance[,-1] #Remove first column
head(proteinAbundance)
proteinAbundance <- t(proteinAbundance) #Transpose dataframe
head(proteinAbundance) #Confirm changes
proteinAbundanceHT <- data.trans(proteinAbundance, method = 'hellingers', plot = FALSE) #Hellinger (asymmetric) transformation
head(proteinAbundanceHT) #Confirm transformation
pHData <- read.csv("../../2017-11-15-Environmental-Data-and-Biomarker-Analyses/2017-12-13-Environmental-Data-Quality-Control/2018-11-18-pH-Tide-Data-Corrected.csv", header = TRUE) #Import pH data
head(pHData)
colnames(pHData)
colnames(pHData)[5:13]
mean(pHData)[5:13]
mean(pHData[,5:13], na.rm = TRUE)
mean(pHData[,5], na.rm = TRUE)
pHData <- pHData[,-1] #Remove extra first column
head(pHData) #Confirm import
colnames(pHData)
pHMeanVariance <- data.frame("Site-Habitat" = colnames(pHData[4:12]),
"Mean" = rep(0, times = 9),
"Variance" = rep(0, times = 9)) #Create an empty dataframe to store outplant-wide means and variances
head(pHMeanVariance) #Confirm dataframe creation
nSiteHabitat <- 12 #pH data is column 4-12
for(i in 4:nSiteHabitat) { #For each column with pH data
pHMeanVariance$Mean[i-3] <- mean(pHData[,i], na.rm = TRUE) #Calculate the mean and put it in the designated row in pHMeanVariance$Mean
}
head(pHMeanVariance) #Confirm mean calculations
pHMeanVariance <- data.frame("Site-Habitat" = colnames(pHData[4:12]),
"pHMean" = rep(0, times = 9),
"pHVariance" = rep(0, times = 9)) #Create an empty dataframe to store outplant-wide means and variances
head(pHMeanVariance) #Confirm dataframe creation
for(i in 4:nSiteHabitat) { #For each column with pH data
pHMeanVariance$pHVariance[i-3] <- var(pHData[,i], na.rm = TRUE) #Calculate the variance and put it in the designated row in pHMeanVariance$Variance
}
head(pHMeanVariance) #Confirm calculations
pHMeanVariance$pHMean[i-3] <- mean(pHData[,i], na.rm = TRUE) #Calculate the mean and put it in the designated row in pHMeanVariance$Mean
head(pHMeanVariance) #Confirm calculations
for(i in 4:nSiteHabitat) { #For each column with pH data
pHMeanVariance$pHMean[i-3] <- mean(pHData[,i], na.rm = TRUE) #Calculate the mean and put it in the designated row in pHMeanVariance$Mean
}
head(pHMeanVariance) #Confirm calculations
View(pHMeanVariance)
View(proteinAbundanceHT)
DOData <- read.csv("../../2017-11-15-Environmental-Data-and-Biomarker-Analyses/2017-12-13-Environmental-Data-Quality-Control/2018-11-18-DO-Tide-Data-Corrected.csv", header = TRUE) #Import DO data
DOData <- DOData[,-1] #Remove extra first column
head(DOData) #Confirm import
colnames(DOData) #Look at columns to identify where the DO data is
DOMeanVariance <- data.frame("Site-Habitat" = colnames(DOData[4:13]),
"DOMean" = rep(0, times = 10),
"DOVariance" = rep(0, times = 10)) #Create an empty dataframe to store outplant-wide means and variances
head(DOMeanVariance) #Confirm dataframe creation
nSiteHabitat <- 13 #DO data is column 4-13
for(i in 4:nSiteHabitat) { #For each column with DO data
DOMeanVariance$DOMean[i-3] <- mean(DOData[,i], na.rm = TRUE) #Calculate the mean and put it in the designated row in DOMeanVariance$DOMean
}
for(i in 4:nSiteHabitat) { #For each column with pH data
DOMeanVariance$DOVariance[i-3] <- var(DOData[,i], na.rm = TRUE) #Calculate the variance and put it in the designated row in DOMeanVariance$DOVariance
}
head(DOMeanVariance) #Confirm calculations
salinityData <- read.csv("../../2017-11-15-Environmental-Data-and-Biomarker-Analyses/2017-12-13-Environmental-Data-Quality-Control/2018-11-18-Salinity-Tide-Data-Corrected.csv", header = TRUE) #Import pH data
salinityData <- salinityData[,-1] #Remove extra first column
salinityData(pHData) #Confirm import
head(salinityData) #Confirm import
colnames(salinityData)
salinityMeanVariance <- data.frame("Site-Habitat" = colnames(salinityData[4:11]),
"salinityMean" = rep(0, times = 8),
"salinityVariance" = rep(0, times = 8)) #Create an empty dataframe to store outplant-wide means and variances
head(salinityMeanVariance) #Confirm dataframe creation
nSiteHabitat <- 11 #pH data is column 4-11
for(i in 4:nSiteHabitat) { #For each column with pH data
salinityMeanVariance$salinityMean[i-3] <- mean(salinityData[,i], na.rm = TRUE) #Calculate the mean and put it in the designated row
}
for(i in 4:nSiteHabitat) { #For each column with pH data
salinityMeanVariance$salinityVariance[i-3] <- var(salinityData[,i], na.rm = TRUE) #Calculate the variance and put it in the designated row
}
head(salinityMeanVariance) #Confirm calculations
temperatureData <- read.csv("../../2017-11-15-Environmental-Data-and-Biomarker-Analyses/2017-12-13-Environmental-Data-Quality-Control/2018-11-18-Temperature-Corrected.csv", header = TRUE) #Import pH data
temperatureData <- temperatureData[,-1] #Remove extra first column
head(temperatureData) #Confirm import
colnames(temperatureData) #Figure out where data is
temperatureMeanVariance <- data.frame("Site-Habitat" = colnames(temperatureData[3:12]),
"pHMean" = rep(0, times = 10),
"pHVariance" = rep(0, times = 10)) #Create an empty dataframe to store outplant-wide means and variances
head(temperatureMeanVariance) #Confirm dataframe creation
temperatureMeanVariance <- data.frame("Site-Habitat" = colnames(temperatureData[3:12]),
"temperatureMean" = rep(0, times = 10),
"temperatureVariance" = rep(0, times = 10)) #Create an empty dataframe to store outplant-wide means and variances
head(temperatureMeanVariance) #Confirm dataframe creation
nSiteHabitat <- 12 #pH data is column 3-12
for(i in 3:nSiteHabitat) { #For each column with pH data
temperatureMeanVariance$temperatureMean[i-2] <- mean(temperatureData[,i], na.rm = TRUE) #Calculate the mean and put it in the designated row
}
for(i in 3:nSiteHabitat) { #For each column with pH data
temperatureMeanVariance$temperatureVariance[i-2] <- var(temperatureData[,i], na.rm = TRUE) #Calculate the variance and put it in the designated row
}
head(pHMeanVariance) #Confirm calculations
head(temperatureMeanVariance) #Confirm calculations
colnames(pHMeanVariance)
pHMeanVariance$Site.Habitat
pHMeanVariance <- data.frame("Site-Habitat" = colnames(pHData[4:12]),
"Site" = c("Willapa Bay", "Willapa Bay", "Skokomish River Delta", "Skokomish River Delta", "Port Gamble Bay", "Case Inlet", "Case Inlet", "Fidalgo Bay", "Fidalgo Bay"),
"Habitat" = c("Eelgrass", "Bare", "Eelgrass", "Bare", "Bare", "Eelgrass", "Bare", "Eelgrass", "Bare"),
"pHMean" = rep(0, times = 9),
"pHVariance" = rep(0, times = 9)) #Create an empty dataframe to store outplant-wide means and variances
head(pHMeanVariance) #Confirm dataframe creation
nSiteHabitat <- 12 #pH data is column 4-12
for(i in 4:nSiteHabitat) { #For each column with pH data
pHMeanVariance$pHMean[i-3] <- mean(pHData[,i], na.rm = TRUE) #Calculate the mean and put it in the designated row in pHMeanVariance$Mean
}
for(i in 4:nSiteHabitat) { #For each column with pH data
pHMeanVariance$pHVariance[i-3] <- var(pHData[,i], na.rm = TRUE) #Calculate the variance and put it in the designated row in pHMeanVariance$Variance
}
head(pHMeanVariance) #Confirm calculations
DOMeanVariance <- data.frame("Site-Habitat" = colnames(DOData[4:13]),
"Site" = c("Willapa Bay", "Willapa Bay", "Skokomish River Delta", "Skokomish River Delta", "Port Gamble Bay", "Port Gamble Bay", "Case Inlet", "Case Inlet", "Fidalgo Bay", "Fidalgo Bay"),
"Habitat" = c("Eelgrass", "Bare", "Eelgrass", "Bare", "Eelgrass", "Bare", "Eelgrass", "Bare", "Eelgrass", "Bare"),
"DOMean" = rep(0, times = 10),
"DOVariance" = rep(0, times = 10)) #Create an empty dataframe to store outplant-wide means and variances
head(DOMeanVariance) #Confirm dataframe creation
nSiteHabitat <- 13 #DO data is column 4-13
for(i in 4:nSiteHabitat) { #For each column with DO data
DOMeanVariance$DOMean[i-3] <- mean(DOData[,i], na.rm = TRUE) #Calculate the mean and put it in the designated row in DOMeanVariance$DOMean
}
for(i in 4:nSiteHabitat) { #For each column with pH data
DOMeanVariance$DOVariance[i-3] <- var(DOData[,i], na.rm = TRUE) #Calculate the variance and put it in the designated row in DOMeanVariance$DOVariance
}
head(DOMeanVariance) #Confirm calculations
salinityMeanVariance <- data.frame("Site-Habitat" = colnames(salinityData[4:11]),
"Site" = c("Case Inlet", "Case Inlet", "Fidalgo Bay", "Fidalgo Bay", "Port Gamble Bay", "Skokomish River Delta", "Port Gamble Bay", "Willapa Bay"),
"Habitat" = c("Bare", "Eelgrass", "Bare", "Eelgrass", "Eelgrass", "Bare", "Eelgrass", "Bare"),
"salinityMean" = rep(0, times = 8),
"salinityVariance" = rep(0, times = 8)) #Create an empty dataframe to store outplant-wide means and variances
head(salinityMeanVariance) #Confirm dataframe creation
nSiteHabitat <- 11 #pH data is column 4-11
for(i in 4:nSiteHabitat) { #For each column with pH data
salinityMeanVariance$salinityMean[i-3] <- mean(salinityData[,i], na.rm = TRUE) #Calculate the mean and put it in the designated row
}
for(i in 4:nSiteHabitat) { #For each column with pH data
salinityMeanVariance$salinityVariance[i-3] <- var(salinityData[,i], na.rm = TRUE) #Calculate the variance and put it in the designated row
}
head(salinityMeanVariance) #Confirm calculations
temperatureMeanVariance <- data.frame("Site-Habitat" = colnames(temperatureData[3:12]),
"Site" = c("Willapa Bay", "Willapa Bay", "Skokomish River Delta", "Skokomish River Delta", "Port Gamble Bay", "Port Gamble Bay", "Case Inlet", "Case Inlet", "Fidalgo Bay", "Fidalgo Bay"),
"Habitat" = c("Eelgrass", "Bare", "Eelgrass", "Bare", "Eelgrass", "Bare", "Eelgrass", "Bare", "Eelgrass", "Bare"),
"temperatureMean" = rep(0, times = 10),
"temperatureVariance" = rep(0, times = 10)) #Create an empty dataframe to store outplant-wide means and variances
head(temperatureMeanVariance) #Confirm dataframe creation
nSiteHabitat <- 12 #pH data is column 3-12
for(i in 3:nSiteHabitat) { #For each column with pH data
temperatureMeanVariance$temperatureMean[i-2] <- mean(temperatureData[,i], na.rm = TRUE) #Calculate the mean and put it in the designated row
}
for(i in 3:nSiteHabitat) { #For each column with pH data
temperatureMeanVariance$temperatureVariance[i-2] <- var(temperatureData[,i], na.rm = TRUE) #Calculate the variance and put it in the designated row
}
head(temperatureMeanVariance) #Confirm calculations
?left_join
??left_join
pHMeanVariance <- pHMeanVariance[,-1] #Remove Site.Habitat column
head(pHMeanVariance) #Confirm calculations
DOMeanVariance <- DOMeanVariance[,-1] #Remove Site.Habitat column
DOMeanVariance <- DOMeanVariance[,-1] #Remove Site.Habitat column
head(DOMeanVariance) #Confirm calculations
DOMeanVariance <- data.frame("Site-Habitat" = colnames(DOData[4:13]),
"Site" = c("Willapa Bay", "Willapa Bay", "Skokomish River Delta", "Skokomish River Delta", "Port Gamble Bay", "Port Gamble Bay", "Case Inlet", "Case Inlet", "Fidalgo Bay", "Fidalgo Bay"),
"Habitat" = c("Eelgrass", "Bare", "Eelgrass", "Bare", "Eelgrass", "Bare", "Eelgrass", "Bare", "Eelgrass", "Bare"),
"DOMean" = rep(0, times = 10),
"DOVariance" = rep(0, times = 10)) #Create an empty dataframe to store outplant-wide means and variances
head(DOMeanVariance) #Confirm dataframe creation
nSiteHabitat <- 13 #DO data is column 4-13
for(i in 4:nSiteHabitat) { #For each column with DO data
DOMeanVariance$DOMean[i-3] <- mean(DOData[,i], na.rm = TRUE) #Calculate the mean and put it in the designated row in DOMeanVariance$DOMean
}
for(i in 4:nSiteHabitat) { #For each column with pH data
DOMeanVariance$DOVariance[i-3] <- var(DOData[,i], na.rm = TRUE) #Calculate the variance and put it in the designated row in DOMeanVariance$DOVariance
}
DOMeanVariance <- DOMeanVariance[,-1] #Remove Site.Habitat column
head(DOMeanVariance) #Confirm calculations
salinityMeanVariance <- salinityMeanVariance[,-1] #Remove Site.Habitat column
head(salinityMeanVariance) #Confirm calculations
temperatureMeanVariance <- temperatureMeanVariance[,-1] #Remove Site.Habitat column
head(temperatureMeanVariance) #Confirm calculations
install.packages("dplyr")
require(dplyr)
sessionInfo() #Obtain session information
enviromentalData <- left_join(pHMeanVariance, DOMeanVariance) #Use left_join to merge dataframes and add NAs where the two dataframes do not match
environmentalData <- left_join(pHMeanVariance, DOMeanVariance) #Use left_join to merge dataframes and add NAs where the two dataframes do not match
head(environmentalData)
View(environmentalData)
environmentalData <- left_join(enviromentalData, salinityData) #Add salinity data
environmentalData <- left_join(enviromentalData, temperatureData) #Add salinity data
environmentalData <- left_join(pHMeanVariance, DOMeanVariance) #Use left_join to merge dataframes and add NAs where the two dataframes do not match
environmentalData <- left_join(pHMeanVariance, DOMeanVariance, by = c("Site", "Habitat")) #Use left_join to merge dataframes and add NAs where the two dataframes do not match
environmentalData <- left_join(environmentalData, salinityMeanVariance, by = c("Site", "Habitat")) #Add salinity data
environmentalData <- left_join(environmentalData, temperatureMeanVariance, by = c("Site", "Habitat")) #Add temperature data
head(environmentalData)
View(environmentalData)
environmentalData <- left_join(temperatureData, pHMeanVariance, by = c("Site", "Habitat")) #Use left_join to merge dataframes and add NAs where the two dataframes do not match. temperatureData is used as the base because it has observations for all 10 Site and Habitat combinations
environmentalData <- left_join(temperatureMeanVariance, pHMeanVariance, by = c("Site", "Habitat")) #Use left_join to merge dataframes and add NAs where the two dataframes do not match. temperatureData is used as the base because it has observations for all 10 Site and Habitat combinations
environmentalData <- left_join(environmentalData, DOMeanVariance, by = c("Site", "Habitat")) #Add salinity data
environmentalData <- left_join(environmentalData, salinityMeanVariance, by = c("Site", "Habitat")) #Add temperature data
head(environmentalData)
View(environmentalData)
environmentalData <- left_join(temperatureMeanVariance, pHMeanVariance, by = c("Site", "Habitat")) #Use left_join to merge dataframes and add NAs where the two dataframes do not match. temperatureData is used as the base because it has observations for all 10 Site and Habitat combinations
head(environmentalData)
View(environmentalData)
environmentalData <- left_join(environmentalData, DOMeanVariance, by = c("Site", "Habitat")) #Add salinity data
head(environmentalData)
View(environmentalData)
View(salinityMeanVariance)
salinityMeanVariance <- data.frame("Site-Habitat" = colnames(salinityData[4:11]),
"Site" = c("Case Inlet", "Case Inlet", "Fidalgo Bay", "Fidalgo Bay", "Port Gamble Bay", "Skokomish River Delta", "Skokomish River Delta", "Willapa Bay"),
"Habitat" = c("Bare", "Eelgrass", "Bare", "Eelgrass", "Eelgrass", "Bare", "Eelgrass", "Bare"),
"salinityMean" = rep(0, times = 8),
"salinityVariance" = rep(0, times = 8)) #Create an empty dataframe to store outplant-wide means and variances
head(salinityMeanVariance) #Confirm dataframe creation
nSiteHabitat <- 11 #pH data is column 4-11
for(i in 4:nSiteHabitat) { #For each column with pH data
salinityMeanVariance$salinityMean[i-3] <- mean(salinityData[,i], na.rm = TRUE) #Calculate the mean and put it in the designated row
}
for(i in 4:nSiteHabitat) { #For each column with pH data
salinityMeanVariance$salinityVariance[i-3] <- var(salinityData[,i], na.rm = TRUE) #Calculate the variance and put it in the designated row
}
salinityMeanVariance <- salinityMeanVariance[,-1] #Remove Site.Habitat column
head(salinityMeanVariance) #Confirm calculations
environmentalData <- left_join(environmentalData, salinityMeanVariance, by = c("Site", "Habitat")) #Add temperature data
head(environmentalData)
View(environmentalData)
environmentalData <- left_join(temperatureMeanVariance, pHMeanVariance, by = c("Site", "Habitat")) #Use left_join to merge dataframes and add NAs where the two dataframes do not match. temperatureData is used as the base because it has observations for all 10 Site and Habitat combinations
environmentalData <- left_join(environmentalData, DOMeanVariance, by = c("Site", "Habitat")) #Add salinity data
environmentalData <- left_join(environmentalData, salinityMeanVariance, by = c("Site", "Habitat")) #Add temperature data
head(environmentalData)
biologicalReplicates <- read.csv("../../2017-09-06-Biological-Replicate-Information.csv", header = TRUE) #Import biological replciate information
head(biologicalReplicates) #Confirm import
pHMeanVariance <- data.frame("Site-Habitat" = colnames(pHData[4:12]),
"Site" = c("WB", "WB", "SK", "SK", "PG", "CI", "CI", "FB", "FB"),
"Habitat" = c("Eelgrass", "Bare", "Eelgrass", "Bare", "Bare", "Eelgrass", "Bare", "Eelgrass", "Bare"),
"pHMean" = rep(0, times = 9),
"pHVariance" = rep(0, times = 9)) #Create an empty dataframe to store outplant-wide means and variances
head(pHMeanVariance) #Confirm dataframe creation
nSiteHabitat <- 12 #pH data is column 4-12
for(i in 4:nSiteHabitat) { #For each column with pH data
pHMeanVariance$pHMean[i-3] <- mean(pHData[,i], na.rm = TRUE) #Calculate the mean and put it in the designated row in pHMeanVariance$Mean
}
for(i in 4:nSiteHabitat) { #For each column with pH data
pHMeanVariance$pHVariance[i-3] <- var(pHData[,i], na.rm = TRUE) #Calculate the variance and put it in the designated row in pHMeanVariance$Variance
}
pHMeanVariance <- pHMeanVariance[,-1] #Remove Site.Habitat column
head(pHMeanVariance) #Confirm calculations
DOMeanVariance <- data.frame("Site-Habitat" = colnames(DOData[4:13]),
"Site" = c("WB", "WB", "SK", "SK", "PG", "PG", "CI", "CI", "FB", "FB"),
"Habitat" = c("Eelgrass", "Bare", "Eelgrass", "Bare", "Eelgrass", "Bare", "Eelgrass", "Bare", "Eelgrass", "Bare"),
"DOMean" = rep(0, times = 10),
"DOVariance" = rep(0, times = 10)) #Create an empty dataframe to store outplant-wide means and variances
head(DOMeanVariance) #Confirm dataframe creation
```{r}
nSiteHabitat <- 13 #DO data is column 4-13
for(i in 4:nSiteHabitat) { #For each column with DO data
DOMeanVariance$DOMean[i-3] <- mean(DOData[,i], na.rm = TRUE) #Calculate the mean and put it in the designated row in DOMeanVariance$DOMean
}
for(i in 4:nSiteHabitat) { #For each column with pH data
DOMeanVariance$DOVariance[i-3] <- var(DOData[,i], na.rm = TRUE) #Calculate the variance and put it in the designated row in DOMeanVariance$DOVariance
}
DOMeanVariance <- DOMeanVariance[,-1] #Remove Site.Habitat column
head(DOMeanVariance) #Confirm calculations
salinityMeanVariance <- data.frame("Site-Habitat" = colnames(salinityData[4:11]),
"Site" = c("CI", "CI", "FB", "FB", "PG", "SK", "SK", "WB"),
"Habitat" = c("Bare", "Eelgrass", "Bare", "Eelgrass", "Eelgrass", "Bare", "Eelgrass", "Bare"),
"salinityMean" = rep(0, times = 8),
"salinityVariance" = rep(0, times = 8)) #Create an empty dataframe to store outplant-wide means and variances
head(salinityMeanVariance) #Confirm dataframe creation
nSiteHabitat <- 11 #pH data is column 4-11
for(i in 4:nSiteHabitat) { #For each column with pH data
salinityMeanVariance$salinityMean[i-3] <- mean(salinityData[,i], na.rm = TRUE) #Calculate the mean and put it in the designated row
}
for(i in 4:nSiteHabitat) { #For each column with pH data
salinityMeanVariance$salinityVariance[i-3] <- var(salinityData[,i], na.rm = TRUE) #Calculate the variance and put it in the designated row
}
salinityMeanVariance <- salinityMeanVariance[,-1] #Remove Site.Habitat column
head(salinityMeanVariance) #Confirm calculations
temperatureMeanVariance <- data.frame("Site-Habitat" = colnames(temperatureData[3:12]),
"Site" = c("WB", "WB", "SK", "SK", "PG", "PG", "CI", "CI", "FB", "FB"),
"Habitat" = c("Eelgrass", "Bare", "Eelgrass", "Bare", "Eelgrass", "Bare", "Eelgrass", "Bare", "Eelgrass", "Bare"),
"temperatureMean" = rep(0, times = 10),
"temperatureVariance" = rep(0, times = 10)) #Create an empty dataframe to store outplant-wide means and variances
head(temperatureMeanVariance) #Confirm dataframe creation
nSiteHabitat <- 12 #pH data is column 3-12
for(i in 3:nSiteHabitat) { #For each column with pH data
temperatureMeanVariance$temperatureMean[i-2] <- mean(temperatureData[,i], na.rm = TRUE) #Calculate the mean and put it in the designated row
}
for(i in 3:nSiteHabitat) { #For each column with pH data
temperatureMeanVariance$temperatureVariance[i-2] <- var(temperatureData[,i], na.rm = TRUE) #Calculate the variance and put it in the designated row
}
temperatureMeanVariance <- temperatureMeanVariance[,-1] #Remove Site.Habitat column
head(temperatureMeanVariance) #Confirm calculations
environmentalData <- left_join(temperatureMeanVariance, pHMeanVariance, by = c("Site", "Habitat")) #Use left_join to merge dataframes and add NAs where the two dataframes do not match. temperatureData is used as the base because it has observations for all 10 Site and Habitat combinations
environmentalData <- left_join(environmentalData, DOMeanVariance, by = c("Site", "Habitat")) #Add salinity data
environmentalData <- left_join(environmentalData, salinityMeanVariance, by = c("Site", "Habitat")) #Add temperature data
head(environmentalData)
biologicalReplicates$Sample.Number <- as.character(biologicalReplicates$Sample.Number) #Convert sample number to character string
biologicalReplicates$Sample.Number <- substr(biologicalReplicates$Sample.Number, 1, nchar(biologicalReplicates$Sample.Number)-2) #Remove -1 or -2 from end of sample number
biologicalReplicates <- biologicalReplicates[1:50,] #Keep only the first 50 rows, since everything repeats
head(biologicalReplicates) #Confirm changes
tail(biologicalReplicates) #Confirm changes
View(biologicalReplicates)
biologicalReplicates <- read.csv("../../2017-09-06-Biological-Replicate-Information.csv", header = TRUE) #Import biological replciate information
head(biologicalReplicates) #Confirm import
biologicalReplicates$Sample.Number <- as.character(biologicalReplicates$Sample.Number) #Convert sample number to character string
biologicalReplicates$Sample.Number <- substr(biologicalReplicates$Sample.Number, 1, nchar(biologicalReplicates$Sample.Number)-2) #Remove -1 or -2 from end of sample number
biologicalReplicates <- biologicalReplicates[1:49,] #Keep only the first 50 rows, since everything repeats. Also eliminate OBLNK2
tail(biologicalReplicates) #Confirm changes
colnames(biologicalReplicates)[3] <- "Habitat" #Change Eelgrass.Condition to Habitat
tail(biologicalReplicates) #Confirm changes
left_join(biologicalReplicates, enviromentalData, by = c("Site", "Habitat"))
biologicalReplicates[biologicalReplicates$Site == "CI", biologicalReplicates$Habitat = "Eelgrass"]
biologicalReplicates[biologicalReplicates$Site == "CI" | biologicalReplicates$Habitat = "Eelgrass"]
biologicalReplicates[biologicalReplicates$Site == "CI" | biologicalReplicates$Habitat == "Eelgrass"]
biologicalReplicates[,(biologicalReplicates$Site == "CI" | biologicalReplicates$Habitat == "Eelgrass")]
biologicalReplicates$Site == "CI"
biologicalReplicates$Site == "CI" | biologicalReplicates$Habitat == "Eelgrass"
biologicalReplicates$Site == "CI" & biologicalReplicates$Habitat == "Eelgrass"
biologicalReplicates[biologicalReplicates$Site == "CI" & biologicalReplicates$Habitat == "Eelgrass", ]
biologicalReplicates[biologicalReplicates$Site == "CI" & biologicalReplicates$Habitat == "Bare", ]
environmentalSampleData <- biologicalReplicates #Duplicate dataframe
environmentalSampleData <- data.frame("Sample.Number" = biologicalReplicates$Sample.Number,
"Site" = biologicalReplicates$Site,
"Habitat" = biologicalReplicates$Habitat,
"pHMean" = rep(0, times = length(biologicalReplicates$Sample.Number)),
"pHVariance" = rep(0, times = length(biologicalReplicates$Sample.Number)),
"DOMean" = rep(0, times = length(biologicalReplicates$Sample.Number)),
"DOVariance" = rep(0, times = length(biologicalReplicates$Sample.Number)),
"salinityMean" = rep(0, times = length(biologicalReplicates$Sample.Number)),
"salinityVariance" = rep(0, times = length(biologicalReplicates$Sample.Number)),
"temperatureMean" = rep(0, times = length(biologicalReplicates$Sample.Number)),
"temperatureVariance" = rep(0, times = length(biologicalReplicates$Sample.Number))) #Create a new dataframe for sample and environmental data
head(environmentalSampleData) #Confirm dataframe creation
environmentalSampleData[environmentalSampleData$Site == "CI" & environmentalSampleData$Habitat == "Bare", ]
environmentalSampleData[environmentalSampleData$Site == "CI" & environmentalSampleData$Habitat == "Bare", environmentalSampleData$pHMean]
colnames(environmentalSampleData)
environmentalSampleData[environmentalSampleData$Site == "CI" & environmentalSampleData$Habitat == "Bare", 4:11]
View(environmentalData)
colnames(environmentalData)
environmentalSampleData <- data.frame("Sample.Number" = biologicalReplicates$Sample.Number,
"Site" = biologicalReplicates$Site,
"Habitat" = biologicalReplicates$Habitat,
"temperatureMean" = rep(0, times = length(biologicalReplicates$Sample.Number)),
"temperatureVariance" = rep(0, times = length(biologicalReplicates$Sample.Number)),
"pHMean" = rep(0, times = length(biologicalReplicates$Sample.Number)),
"pHVariance" = rep(0, times = length(biologicalReplicates$Sample.Number)),
"DOMean" = rep(0, times = length(biologicalReplicates$Sample.Number)),
"DOVariance" = rep(0, times = length(biologicalReplicates$Sample.Number)),
"salinityMean" = rep(0, times = length(biologicalReplicates$Sample.Number)),
"salinityVariance" = rep(0, times = length(biologicalReplicates$Sample.Number))) #Create a new dataframe for sample and environmental data. Column names follow the same ordering as environmentalData
head(environmentalSampleData) #Confirm dataframe creation
colnames(environmentalSampleData)
environmentalSampleData[environmentalSampleData$Site == "CI" & environmentalSampleData$Habitat == "Bare", 4:11]
enviromentalData[environmentalData$Site == "CI" & environmentalData$Habitat == "Bare",]
View(environmentalData)
enviromentalData[environmentalData$Site == "CI",]
environmentalData[environmentalData$Site == "CI" & environmentalData$Habitat == "Bare",]
environmentalData[environmentalData$Site == "CI" & environmentalData$Habitat == "Bare",3:10]
environmentalSampleData[environmentalSampleData$Site == "CI" & environmentalSampleData$Habitat == "Bare", 4:11] <- environmentalData[environmentalData$Site == "CI" & environmentalData$Habitat == "Bare",3:10]
environmentalSampleData[environmentalSampleData$Site == "CI" & environmentalSampleData$Habitat == "Bare", 4:11]
environmentalSampleData[environmentalSampleData$Site == "CI" & environmentalSampleData$Habitat == "Eelgrass", 4:11] <- environmentalData[environmentalData$Site == "CI" & environmentalData$Habitat == "Eelgrass", 3:10]
#Fidalgo Bay
environmentalSampleData[environmentalSampleData$Site == "FB" & environmentalSampleData$Habitat == "Bare", 4:11] <- environmentalData[environmentalData$Site == "FB" & environmentalData$Habitat == "Bare", 3:10]
environmentalSampleData[environmentalSampleData$Site == "FB" & environmentalSampleData$Habitat == "Eelgrass", 4:11] <- environmentalData[environmentalData$Site == "FB" & environmentalData$Habitat == "Eelgrass", 3:10]
#Port Gamble Bay
environmentalSampleData[environmentalSampleData$Site == "PG" & environmentalSampleData$Habitat == "Bare", 4:11] <- environmentalData[environmentalData$Site == "PG" & environmentalData$Habitat == "Bare", 3:10]
environmentalSampleData[environmentalSampleData$Site == "PG" & environmentalSampleData$Habitat == "Eelgrass", 4:11] <- environmentalData[environmentalData$Site == "PG" & environmentalData$Habitat == "Eelgrass", 3:10]
#Willapa Bay
environmentalSampleData[environmentalSampleData$Site == "WB" & environmentalSampleData$Habitat == "Bare", 4:11] <- environmentalData[environmentalData$Site == "WB" & environmentalData$Habitat == "Bare", 3:10]
environmentalSampleData[environmentalSampleData$Site == "WB" & environmentalSampleData$Habitat == "Eelgrass", 4:11] <- environmentalData[environmentalData$Site == "WB" & environmentalData$Habitat == "Eelgrass", 3:10]
View(environmentalSampleData)
#Skokomish River Delta
environmentalSampleData[environmentalSampleData$Site == "SK" & environmentalSampleData$Habitat == "Bare", 4:11] <- environmentalData[environmentalData$Site == "SK" & environmentalData$Habitat == "Bare", 3:10]
environmentalSampleData[environmentalSampleData$Site == "SK" & environmentalSampleData$Habitat == "Eelgrass", 4:11] <- environmentalData[environmentalData$Site == "SK" & environmentalData$Habitat == "Eelgrass", 3:10]
View(environmentalSampleData)
head(environmentalSampleData) #Confirm replacements happened
environmentalSampleData.log <- log(environmentalSampleData + 1)
head(environmentalSampleData.log)
row.names(environmentalSampleData) <- environmentalSampleData$Sample.Number #Assign Sample.Number as row names
environmentalSampleData <- environmentalSampleData[,-1] #Remove Sample.Number column
head(environmentalSampleData) #Confirm changes
environmentalSampleData.log <- log(environmentalSampleData[,-c(1:2)] + 1) #Log transform all columns that aren't Site and Habitat
head(environmentalSampleData.log)
decorana(proteinAbundanceHT, ira = 0) #Determine gradient length. Gradient length <2 is best represented by a linear model, 2-4 could be unimodal, and >4 is greater than unimodal. The length of DCA1 is 5.54, so the underlying model is unimodal. We will use a CCA.
decorana(proteinAbundanceHT, ira = 0, na.rm = TRUE) #Determine gradient length. Gradient length <2 is best represented by a linear model, 2-4 could be unimodal, and >4 is greater than unimodal. The length of DCA1 is 5.54, so the underlying model is unimodal. We will use a CCA.
decorana(proteinAbundanceHT, ira = 0, na.omit = TRUE) #Determine gradient length. Gradient length <2 is best represented by a linear model, 2-4 could be unimodal, and >4 is greater than unimodal. The length of DCA1 is 5.54, so the underlying model is unimodal. We will use a CCA.
decorana(proteinAbundanceHT, ira = 0, na.action = na.exclude) #Determine gradient length. Gradient length <2 is best represented by a linear model (RDA), 2-4 could be unimodal (RDA or CCA appropriate), and >4 is greater than unimodal (CCA). The length of DCA1 is , so the underlying model is.
decorana(proteinAbundanceHT, ira = 0, na.action(na.rm)) #Determine gradient length. Gradient length <2 is best represented by a linear model (RDA), 2-4 could be unimodal (RDA or CCA appropriate), and >4 is greater than unimodal (CCA). The length of DCA1 is , so the underlying model is.
