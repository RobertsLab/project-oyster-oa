getwd()
setwd("Documents/project-oyster-oa/") #Set working directory as repository
setwd("../../") #Set working directory as repository
getwd()
eggProduction <- read.csv("data/Manchester/2017-07-30-Pacific-Oyster-Larvae/2018-02-14-Egg-Production-Data.csv", header = TRUE) #Import egg production data
head(eggProduction) #Confirm import
colnames(eggProduction) #Get column names. I don't need anything after Female.Egg.Count
eggProduction <- eggProduction[,c(1:9)] #Retain necessary columns.
colnames(eggProduction) #Confirm change
correctedEggProduction <- data.frame("FemalePool" = c("Low", "Ambient", "HeatShock"),
"EggCount1" = c(((eggProduction$Sample.Egg.Count.1[1])/22), ((eggProduction$Sample.Egg.Count.1[25])/26), ((eggProduction$Sample.Egg.Count.1[49])/6)),
"EggCount2" = c(((eggProduction$Sample.Egg.Count.2[1])/22), ((eggProduction$Sample.Egg.Count.2[25])/26), ((eggProduction$Sample.Egg.Count.2[49])/6)),
"EggCount3" = c(((eggProduction$Sample.Egg.Count.3[1])/22), ((eggProduction$Sample.Egg.Count.3[25])/26), ((eggProduction$Sample.Egg.Count.3[49])/6))) #Create a new dataframe with corrected data
head(correctedEggProduction) #Confirm creation
rownames(correctedEggProduction) <- correctedEggProduction$FemalePool #Set pool as row names
correctedEggProduction <- correctedEggProduction[, -1] #Remove Female Pool column
head(correctedEggProduction) #Confirm change
correctedEggProduction <- data.frame(t(correctedEggProduction)) #Transpose dataframe and maintain dataframe structure
head(correctedEggProduction) #Confirm change
lowSD <- sqrt(var(correctedEggProduction$Low)) #SD = 278276.9
ambSD <- sqrt(var(correctedEggProduction$Ambient)) #SD = 114210.1
hsSD <- sqrt(var(correctedEggProduction$HeatShock)) #SD = 210323.8
lowAverage <- mean(correctedEggProduction$Low) #1190909
ambAverage <- mean(correctedEggProduction$Ambient) #1256410
hsAverage <- mean(correctedEggProduction$HeatShock) #2300000
correctedEggProduction <- data.frame(t(correctedEggProduction)) #Transpose dataframe and maintain dataframe structure
head(correctedEggProduction) #Confirm change
correctedEggProduction$AverageEggCount <- c(lowAverage, ambAverage, hsAverage) #Add average counts
correctedEggProduction$StandardDeviation <- c(lowSD, ambSD, hsSD) #Add standard deviations
head(correctedEggProduction) #Confirm changes
correctedEggProduction <- data.frame(t(correctedEggProduction)) #Transpose dataframe and maintain dataframe structure
head(correctedEggProduction) #Confirm change
eggProductionANOVAData <- data.frame("Treatment" = c(rep("Low", times = 3), rep("Ambient", times = 3), rep("HeatShock", times =3)),
"EggCount" = c(correctedEggProduction$Low[1:3], correctedEggProduction$Ambient[1:3], correctedEggProduction$HeatShock[1:3])) #Create new dataframe with only treatment and egg count columns
head(eggProductionANOVAData) #Confirm dataframe creation
plot(x = eggProductionANOVAData$Treatment, y = eggProductionANOVAData$EggCount, xlab = "Treatment", ylab = "Egg Count", main = "Egg Production by Treatment", cex.main = 4, cex.axis = 1, cex.lab = 1.4) #Preliminary plot
tail(eggProductionANOVAData)
eggProductionpHOnly <- eggProductionANOVAData[-c(7:9),] #Remove rows 7-9
tail(eggProductionpHOnly) #Confirm removal
plot(x = eggProductionpHOnly$Treatment, y = eggProductionpHOnly$EggCount, xlab = "Treatment", ylab = "Egg Count", main = "Egg Production by Treatment", cex.main = 4, cex.axis = 1, cex.lab = 1.4) #Preliminary plot
levels(eggProductionpHOnly)
levels(eggProductionpHOnly$Treatment)
factors(eggProductionpHOnly$Treatment)
factor(eggProductionpHOnly$Treatment)
eggProductionpHOnly$Treatment <- factor(eggProductionpHOnly$Treatment) #Make sure residual factors are no longer present
plot(x = eggProductionpHOnly$Treatment, y = eggProductionpHOnly$EggCount, xlab = "Treatment", ylab = "Egg Count", main = "Egg Production by Treatment", cex.main = 4, cex.axis = 1, cex.lab = 1.4) #Preliminary plot
pHTreatmentANOVA <- aov(EggCount ~ Treatment, data = eggProductionpHOnly) #One-way ANOVA by female treatment
summary(pHTreatmentANOVA)[[1]][["F value"]][[1]] #F = 25.87017
summary(pHTreatmentANOVA)[[1]][["Pr(>F)"]][[1]] #p = 0.00112206
sqrt(summary(pHTreatmentANOVA)[[1]][["F value"]][[1]]) #t = 0.1422516
plot(x = eggProductionpHOnly$Treatment, y = eggProductionpHOnly$EggCount, xlab = "Treatment", ylab = "Egg Count", main = "Egg Production by Treatment", cex.main = 4, cex.axis = 1, cex.lab = 1.4) #Preliminary plot
legend("topleft", bty = "n", legend = paste("t =", format(sqrt(summary(pHTreatmentANOVA)[[1]][["F value"]][[1]]), digits = 4), "p =", format(summary(pHTreatmentANOVA)[[1]][["Pr(>F)"]][[1]], digits = 4))) #Add t and p-value
jpeg(filename = "analyses/Manchester_ReproductiveOutput_20180214/2018-03-07-Egg-Production-by-pH-Treatment.jpeg", width = 1500, height = 1000)
plot(x = eggProductionpHOnly$Treatment, y = eggProductionpHOnly$EggCount, xlab = "Treatment", ylab = "Egg Count", main = "Egg Production by Treatment", cex.main = 4, cex.axis = 1, cex.lab = 1.4) #Preliminary plot
legend("topleft", bty = "n", legend = paste("t =", format(sqrt(summary(pHTreatmentANOVA)[[1]][["F value"]][[1]]), digits = 4), "p =", format(summary(pHTreatmentANOVA)[[1]][["Pr(>F)"]][[1]], digits = 4))) #Add t and p-value
dev.off()
hatchRate <- read.csv("data/Manchester/2017-07-30-Pacific-Oyster-Larvae/2018-02-14-Hatch-Rate-Data.csv", header = TRUE) #Import hatch rate data
head(hatchRate) #Confirm import
plot(x = hatchRate$Parental.Treatment, y = hatchRate$Average.Hatch.Rate, xlab = "Treatment", ylab = "Hatch Rate", main = "Hatch Rate by Treatment", cex.main = 4, cex.axis = 1, cex.lab = 1.4) #Preliminary plot
hatchRatepHOnly$Treatment <- factor(hatchRatepHOnly$Treatment) #Make sure residual factors are no longer present
hatchRatepHOnly <- hatchRate[-c(25:26),] #Remove heat shock data
tail(hatchRatepHOnly) #Confirm removal
hatchRatepHOnly$Parental.Treatment <- factor(hatchRatepHOnly$Parental.Treatment) #Make sure residual factors are no longer present
hatchRatepHOnly$Female.Treatment <- factor(hatchRatepHOnly$Female.Treatment) #Make sure residual factors are no longer present
hatchRatepHOnly$Male.Treatment <- factor(hatchRatepHOnly$Male.Treatment) #Make sure residual factors are no longer present
tail(hatchRatepHOnly) #Confirm removal
hatchRatepHTreatmentANOVA <- aov(Average.Hatch.Rate ~ Parental.Treatment, data = hatchRatepHOnly) #One-way ANOVA by female treatment
sqrt(summary(hatchRatepHTreatmentANOVA)[[1]][["F value"]][[1]]) #t = 0.3771626
summary(hatchRatepHTreatmentANOVA)[[1]][["Pr(>F)"]][[1]] #p = 0.7252096
hatchRatepHTreatmentFemaleANOVA <- aov(Average.Hatch.Rate ~ Female.Treatment, data = hatchRatepHOnly) #One-way ANOVA by female treatment
sqrt(summary(hatchRatepHTreatmentFemaleANOVA)[[1]][["F value"]][[1]]) #t = 1.740458
summary(hatchRatepHTreatmentFemaleANOVA)[[1]][["Pr(>F)"]][[1]] #p = 0.0533657
plot(x = hatchRatepHOnly$Parental.Treatment, y = hatchRatepHOnly$Average.Hatch.Rate, xlab = "Treatment", ylab = "Hatch Rate", main = "Hatch Rate by Treatment", cex.main = 4, cex.axis = 1, cex.lab = 1.4) #Preliminary plot
legend("topleft", bty = "n", legend = paste("t =", format(sqrt(summary(hatchRatepHTreatmentANOVA)[[1]][["F value"]][[1]])), digits = 4), "p =", format(summary(hatchRatepHTreatmentANOVA)[[1]][["Pr(>F)"]][[1]]) #Add t and p-value
#dev.off()
hatchRatepHTreatmentFemaleANOVA <- aov(Average.Hatch.Rate ~ Female.Treatment, data = hatchRatepHOnly) #One-way ANOVA by female treatment
sqrt(summary(hatchRatepHTreatmentFemaleANOVA)[[1]][["F value"]][[1]]) #t = 3.161651
summary(hatchRatepHTreatmentFemaleANOVA)[[1]][["Pr(>F)"]][[1]] #p = 0.004522199
#jpeg(filename = "analyses/Manchester_ReproductiveOutput_20180214/2018-02-14-Hatch-Rate-by-Treatment.jpeg", width = 1500, height = 1000)
plot(x = hatchRate$Parental.Treatment, y = hatchRate$Average.Hatch.Rate, xlab = "Treatment", ylab = "Hatch Rate", main = "Hatch Rate by Treatment", cex.main = 4, cex.axis = 1, cex.lab = 1.4) #Preliminary plot
legend("topleft", bty = "n", legend = paste("t =", format(sqrt(summary(pHTreatmentANOVA)[[1]][["F value"]][[1]]), digits = 4), "p =", format(summary(pHTreatmentANOVA)[[1]][["Pr(>F)"]][[1]], digits = 4))) #Add t and p-value
#dev.off()
#### ANOVA ####
hatchRateANOVA <- aov(Average.Hatch.Rate ~ Parental.Treatment, data = hatchRate) #One-way ANOVA by parental treatment
summary(hatchRateANOVA)[[1]][["F value"]][[1]] #F = 2.559579
summary(hatchRateANOVA)[[1]][["Pr(>F)"]][[1]] #p = 0.06864339
hatchRateFemaleANOVA <- aov(Average.Hatch.Rate ~ Female.Treatment, data = hatchRate) #One-way ANOVA by female treatment
summary(hatchRateFemaleANOVA)[[1]][["F value"]][[1]] #F = 5.606537
summary(hatchRateFemaleANOVA)[[1]][["Pr(>F)"]][[1]] #p = 0.01039109
TukeyHSD(hatchRateFemaleANOVA, method = "BH") #Significant difference between low and ambient pH hatch rates, with low pH hatch rates less than ambient pH hatch rates (L-A = 0.0111872)
hatchRateMaleANOVA <- aov(Average.Hatch.Rate ~ Male.Treatment, data = hatchRate) #One-way ANOVA by male treatment
summary(hatchRateMaleANOVA)[[1]][["F value"]][[1]] #F = 0.3819449
summary(hatchRateMaleANOVA)[[1]][["Pr(>F)"]][[1]] #p = 0.6867814
plot(x = hatchRate$Parental.Treatment, y = hatchRate$Average.Hatch.Rate, xlab = "Treatment", ylab = "Hatch Rate", main = "Hatch Rate by Treatment", cex.main = 4, cex.axis = 1, cex.lab = 1.4) #Preliminary plot
plot(x = hatchRatepHOnly$Parental.Treatment, y = hatchRatepHOnly$Average.Hatch.Rate, xlab = "Treatment", ylab = "Hatch Rate", main = "Hatch Rate by Treatment", cex.main = 4, cex.axis = 1, cex.lab = 1.4) #Preliminary plot
legend("topleft", bty = "n", legend = paste("t =", format(sqrt(summary(hatchRatepHTreatmentANOVA)[[1]][["F value"]][[1]])), digits = 4), "p =", format(summary(hatchRatepHTreatmentANOVA)[[1]][["Pr(>F)"]][[1]]) #Add t and p-value
#dev.off()
hatchRatepHTreatmentFemaleANOVA <- aov(Average.Hatch.Rate ~ Female.Treatment, data = hatchRatepHOnly) #One-way ANOVA by female treatment
sqrt(summary(hatchRatepHTreatmentFemaleANOVA)[[1]][["F value"]][[1]]) #t = 3.161651
summary(hatchRatepHTreatmentFemaleANOVA)[[1]][["Pr(>F)"]][[1]] #p = 0.004522199
#jpeg(filename = "analyses/Manchester_ReproductiveOutput_20180214/2018-02-14-Hatch-Rate-by-Treatment.jpeg", width = 1500, height = 1000)
plot(x = hatchRate$Parental.Treatment, y = hatchRate$Average.Hatch.Rate, xlab = "Treatment", ylab = "Hatch Rate", main = "Hatch Rate by Treatment", cex.main = 4, cex.axis = 1, cex.lab = 1.4) #Preliminary plot
legend("topleft", bty = "n", legend = paste("t =", format(sqrt(summary(pHTreatmentANOVA)[[1]][["F value"]][[1]]), digits = 4), "p =", format(summary(pHTreatmentANOVA)[[1]][["Pr(>F)"]][[1]], digits = 4))) #Add t and p-value
#dev.off()
#### ANOVA ####
hatchRateANOVA <- aov(Average.Hatch.Rate ~ Parental.Treatment, data = hatchRate) #One-way ANOVA by parental treatment
summary(hatchRateANOVA)[[1]][["F value"]][[1]] #F = 2.559579
summary(hatchRateANOVA)[[1]][["Pr(>F)"]][[1]] #p = 0.06864339
hatchRateFemaleANOVA <- aov(Average.Hatch.Rate ~ Female.Treatment, data = hatchRate) #One-way ANOVA by female treatment
summary(hatchRateFemaleANOVA)[[1]][["F value"]][[1]] #F = 5.606537
summary(hatchRateFemaleANOVA)[[1]][["Pr(>F)"]][[1]] #p = 0.01039109
TukeyHSD(hatchRateFemaleANOVA, method = "BH") #Significant difference between low and ambient pH hatch rates, with low pH hatch rates less than ambient pH hatch rates (L-A = 0.0111872)
hatchRateMaleANOVA <- aov(Average.Hatch.Rate ~ Male.Treatment, data = hatchRate) #One-way ANOVA by male treatment
summary(hatchRateMaleANOVA)[[1]][["F value"]][[1]] #F = 0.3819449
summary(hatchRateMaleANOVA)[[1]][["Pr(>F)"]][[1]] #p = 0.6867814
hatchRatepHTreatmentANOVA <- aov(Average.Hatch.Rate ~ Parental.Treatment, data = hatchRatepHOnly) #One-way ANOVA by parental treatment
sqrt(summary(hatchRatepHTreatmentANOVA)[[1]][["F value"]][[1]]) #t = 1.740458
summary(hatchRatepHTreatmentANOVA)[[1]][["Pr(>F)"]][[1]] #p = 0.0533657
plot(x = hatchRatepHOnly$Parental.Treatment, y = hatchRatepHOnly$Average.Hatch.Rate, xlab = "Treatment", ylab = "Hatch Rate", main = "Hatch Rate by Treatment", cex.main = 4, cex.axis = 1, cex.lab = 1.4) #Preliminary plot
legend("topleft", bty = "n", legend = paste("t =", format(sqrt(summary(hatchRatepHTreatmentANOVA)[[1]][["F value"]][[1]])), digits = 4), "p =", format(summary(hatchRatepHTreatmentANOVA)[[1]][["Pr(>F)"]][[1]]) #Add t and p-value
#dev.off()
hatchRatepHTreatmentFemaleANOVA <- aov(Average.Hatch.Rate ~ Female.Treatment, data = hatchRatepHOnly) #One-way ANOVA by female treatment
sqrt(summary(hatchRatepHTreatmentFemaleANOVA)[[1]][["F value"]][[1]]) #t = 3.161651
summary(hatchRatepHTreatmentFemaleANOVA)[[1]][["Pr(>F)"]][[1]] #p = 0.004522199
#jpeg(filename = "analyses/Manchester_ReproductiveOutput_20180214/2018-02-14-Hatch-Rate-by-Treatment.jpeg", width = 1500, height = 1000)
plot(x = hatchRate$Parental.Treatment, y = hatchRate$Average.Hatch.Rate, xlab = "Treatment", ylab = "Hatch Rate", main = "Hatch Rate by Treatment", cex.main = 4, cex.axis = 1, cex.lab = 1.4) #Preliminary plot
legend("topleft", bty = "n", legend = paste("t =", format(sqrt(summary(pHTreatmentANOVA)[[1]][["F value"]][[1]]), digits = 4), "p =", format(summary(pHTreatmentANOVA)[[1]][["Pr(>F)"]][[1]], digits = 4))) #Add t and p-value
#dev.off()
#### ANOVA ####
hatchRateANOVA <- aov(Average.Hatch.Rate ~ Parental.Treatment, data = hatchRate) #One-way ANOVA by parental treatment
summary(hatchRateANOVA)[[1]][["F value"]][[1]] #F = 2.559579
summary(hatchRateANOVA)[[1]][["Pr(>F)"]][[1]] #p = 0.06864339
hatchRateFemaleANOVA <- aov(Average.Hatch.Rate ~ Female.Treatment, data = hatchRate) #One-way ANOVA by female treatment
summary(hatchRateFemaleANOVA)[[1]][["F value"]][[1]] #F = 5.606537
summary(hatchRateFemaleANOVA)[[1]][["Pr(>F)"]][[1]] #p = 0.01039109
TukeyHSD(hatchRateFemaleANOVA, method = "BH") #Significant difference between low and ambient pH hatch rates, with low pH hatch rates less than ambient pH hatch rates (L-A = 0.0111872)
hatchRateMaleANOVA <- aov(Average.Hatch.Rate ~ Male.Treatment, data = hatchRate) #One-way ANOVA by male treatment
summary(hatchRateMaleANOVA)[[1]][["F value"]][[1]] #F = 0.3819449
summary(hatchRateMaleANOVA)[[1]][["Pr(>F)"]][[1]] #p = 0.6867814
legend("topleft", bty = "n", legend = paste("t =", format(sqrt(summary(hatchRatepHTreatmentANOVA)[[1]][["F value"]][[1]])), digits = 4), "p =", format(summary(hatchRatepHTreatmentANOVA)[[1]][["Pr(>F)"]][[1]]) #Add t and p-value
#dev.off()
hatchRatepHTreatmentFemaleANOVA <- aov(Average.Hatch.Rate ~ Female.Treatment, data = hatchRatepHOnly) #One-way ANOVA by female treatment
sqrt(summary(hatchRatepHTreatmentFemaleANOVA)[[1]][["F value"]][[1]]) #t = 3.161651
summary(hatchRatepHTreatmentFemaleANOVA)[[1]][["Pr(>F)"]][[1]] #p = 0.004522199
#jpeg(filename = "analyses/Manchester_ReproductiveOutput_20180214/2018-02-14-Hatch-Rate-by-Treatment.jpeg", width = 1500, height = 1000)
plot(x = hatchRate$Parental.Treatment, y = hatchRate$Average.Hatch.Rate, xlab = "Treatment", ylab = "Hatch Rate", main = "Hatch Rate by Treatment", cex.main = 4, cex.axis = 1, cex.lab = 1.4) #Preliminary plot
legend("topleft", bty = "n", legend = paste("t =", format(sqrt(summary(pHTreatmentANOVA)[[1]][["F value"]][[1]]), digits = 4), "p =", format(summary(pHTreatmentANOVA)[[1]][["Pr(>F)"]][[1]], digits = 4))) #Add t and p-value
#dev.off()
#### ANOVA ####
hatchRateANOVA <- aov(Average.Hatch.Rate ~ Parental.Treatment, data = hatchRate) #One-way ANOVA by parental treatment
summary(hatchRateANOVA)[[1]][["F value"]][[1]] #F = 2.559579
summary(hatchRateANOVA)[[1]][["Pr(>F)"]][[1]] #p = 0.06864339
hatchRateFemaleANOVA <- aov(Average.Hatch.Rate ~ Female.Treatment, data = hatchRate) #One-way ANOVA by female treatment
summary(hatchRateFemaleANOVA)[[1]][["F value"]][[1]] #F = 5.606537
summary(hatchRateFemaleANOVA)[[1]][["Pr(>F)"]][[1]] #p = 0.01039109
TukeyHSD(hatchRateFemaleANOVA, method = "BH") #Significant difference between low and ambient pH hatch rates, with low pH hatch rates less than ambient pH hatch rates (L-A = 0.0111872)
hatchRateMaleANOVA <- aov(Average.Hatch.Rate ~ Male.Treatment, data = hatchRate) #One-way ANOVA by male treatment
summary(hatchRateMaleANOVA)[[1]][["F value"]][[1]] #F = 0.3819449
summary(hatchRateMaleANOVA)[[1]][["Pr(>F)"]][[1]] #p = 0.6867814
legend("topleft", bty = "n", legend = paste("t =", format(sqrt(summary(hatchRatepHTreatmentANOVA)[[1]][["F value"]][[1]])), digits = 4), "p =", format(summary(hatchRatepHTreatmentANOVA)[[1]][["Pr(>F)"]][[1]])) #Add t and p-value
plot(x = hatchRatepHOnly$Parental.Treatment, y = hatchRatepHOnly$Average.Hatch.Rate, xlab = "Treatment", ylab = "Hatch Rate", main = "Hatch Rate by Treatment", cex.main = 4, cex.axis = 1, cex.lab = 1.4) #Preliminary plot
legend("topleft", bty = "n", legend = paste("t =", format(sqrt(summary(hatchRatepHTreatmentANOVA)[[1]][["F value"]][[1]])), digits = 4), "p =", format(summary(hatchRatepHTreatmentANOVA)[[1]][["Pr(>F)"]][[1]])) #Add t and p-value
legend("topleft", bty = "n", legend = paste("t =", format(sqrt(summary(pHTreatmentANOVA)[[1]][["F value"]][[1]]), digits = 4), "p =", format(summary(pHTreatmentANOVA)[[1]][["Pr(>F)"]][[1]], digits = 4))) #Add t and p-value
plot(x = hatchRatepHOnly$Parental.Treatment, y = hatchRatepHOnly$Average.Hatch.Rate, xlab = "Treatment", ylab = "Hatch Rate", main = "Hatch Rate by Treatment", cex.main = 4, cex.axis = 1, cex.lab = 1.4) #Preliminary plot
legend("topleft", bty = "n", legend = paste("t =", format(sqrt(summary(hatchRatepHTreatmentANOVA)[[1]][["F value"]][[1]]), digits = 4), "p =", format(summary(pHTreatmentANOVA)[[1]][["Pr(>F)"]][[1]], digits = 4))) #Add t and p-value
legend("topleft", bty = "n", legend = paste("t =", format(sqrt(summary(hatchRatepHTreatmentANOVA)[[1]][["F value"]][[1]]), digits = 4), "p =", format(summary(hatchRatepHTreatmentANOVA)[[1]][["Pr(>F)"]][[1]], digits = 4))) #Add t and p-value
plot(x = hatchRatepHOnly$Parental.Treatment, y = hatchRatepHOnly$Average.Hatch.Rate, xlab = "Treatment", ylab = "Hatch Rate", main = "Hatch Rate by Treatment", cex.main = 4, cex.axis = 1, cex.lab = 1.4) #Preliminary plot
legend("topleft", bty = "n", legend = paste("t =", format(sqrt(summary(hatchRatepHTreatmentANOVA)[[1]][["F value"]][[1]]), digits = 4), "p =", format(summary(hatchRatepHTreatmentANOVA)[[1]][["Pr(>F)"]][[1]], digits = 4))) #Add t and p-value
jpeg(filename = "analyses/Manchester_ReproductiveOutput_20180214/2018-03-07-Hatch-Rate-by-pH-Treatment-All-Groups.jpeg", width = 1500, height = 1000)
plot(x = hatchRatepHOnly$Parental.Treatment, y = hatchRatepHOnly$Average.Hatch.Rate, xlab = "Treatment", ylab = "Hatch Rate", main = "Hatch Rate by Treatment", cex.main = 4, cex.axis = 1, cex.lab = 1.4) #Preliminary plot
legend("topleft", bty = "n", legend = paste("t =", format(sqrt(summary(hatchRatepHTreatmentANOVA)[[1]][["F value"]][[1]]), digits = 4), "p =", format(summary(hatchRatepHTreatmentANOVA)[[1]][["Pr(>F)"]][[1]], digits = 4))) #Add t and p-value
dev.off()
plot(x = hatchRatepHOnly$Female.Treatment, y = hatchRatepHOnly$Average.Hatch.Rate, xlab = "Treatment", ylab = "Hatch Rate", main = "Hatch Rate by Female Treatment", cex.main = 4, cex.axis = 1, cex.lab = 1.4) #Preliminary plot
legend("topleft", bty = "n", legend = paste("t =", format(sqrt(summary(hatchRatepHTreatmentFemaleANOVA)[[1]][["F value"]][[1]]), digits = 4), "p =", format(summary(hatchRatepHTreatmentFemaleANOVA)[[1]][["Pr(>F)"]][[1]], digits = 4))) #Add t and p-value
jpeg(filename = "analyses/Manchester_ReproductiveOutput_20180214/2018-03-07-Hatch-Rate-by-pH-Treatment-All-Groups.jpeg", width = 1500, height = 1000)
plot(x = hatchRatepHOnly$Parental.Treatment, y = hatchRatepHOnly$Average.Hatch.Rate, xlab = "Treatment", ylab = "Hatch Rate", main = "Hatch Rate by Treatment", cex.main = 4, cex.axis = 1, cex.lab = 1.4) #Preliminary plot
legend("topright", bty = "n", legend = paste("t =", format(sqrt(summary(hatchRatepHTreatmentANOVA)[[1]][["F value"]][[1]]), digits = 4), "p =", format(summary(hatchRatepHTreatmentANOVA)[[1]][["Pr(>F)"]][[1]], digits = 4))) #Add t and p-value
dev.off()
legend("topright", bty = "n", legend = paste("t =", format(sqrt(summary(hatchRatepHTreatmentFemaleANOVA)[[1]][["F value"]][[1]]), digits = 4), "p =", format(summary(hatchRatepHTreatmentFemaleANOVA)[[1]][["Pr(>F)"]][[1]], digits = 4))) #Add t and p-value
plot(x = hatchRatepHOnly$Female.Treatment, y = hatchRatepHOnly$Average.Hatch.Rate, xlab = "Treatment", ylab = "Hatch Rate", main = "Hatch Rate by Female Treatment", cex.main = 4, cex.axis = 1, cex.lab = 1.4) #Preliminary plot
legend("topright", bty = "n", legend = paste("t =", format(sqrt(summary(hatchRatepHTreatmentFemaleANOVA)[[1]][["F value"]][[1]]), digits = 4), "p =", format(summary(hatchRatepHTreatmentFemaleANOVA)[[1]][["Pr(>F)"]][[1]], digits = 4))) #Add t and p-value
jpeg(filename = "analyses/Manchester_ReproductiveOutput_20180214/2018-03-07-Hatch-Rate-by-pH-Treatment-Female-Groups.jpeg", width = 1500, height = 1000)
plot(x = hatchRatepHOnly$Female.Treatment, y = hatchRatepHOnly$Average.Hatch.Rate, xlab = "Treatment", ylab = "Hatch Rate", main = "Hatch Rate by Female Treatment", cex.main = 4, cex.axis = 1, cex.lab = 1.4) #Preliminary plot
legend("topright", bty = "n", legend = paste("t =", format(sqrt(summary(hatchRatepHTreatmentFemaleANOVA)[[1]][["F value"]][[1]]), digits = 4), "p =", format(summary(hatchRatepHTreatmentFemaleANOVA)[[1]][["Pr(>F)"]][[1]], digits = 4))) #Add t and p-value
dev.off()
getwd() #Working directory is set to the Manchester_Gonad_Histology folder
setwd("analyses/Manchester_Gonad_Histology/")
getwd() #Working directory is set to the Manchester_Gonad_Histology folder
histologyData <- read.csv("../../data/Manchester/2018-02-27-Gigas-Histology-Classification.csv") #Import histology data
head(histologyData) #Confirm import
histologyData <- histologyData[, -6] #Remove Notes column
mature.stage <- 3 #Set the maturation stage to be anything that is ripe and spawning
histologyData$Mature <- rep(0, nrow(histologyData)) #Create a new column for Yes/No information on maturity. 0 is immature, 1 is mature
histologyData$Mature[which(histologyData$Stage >= mature.stage)] <- rep(1, length(which(histologyData$Stage >= mature.stage))) #For anything where the stage is greater than or equal to the mature.stage, replace it with a 1
head(histologyData) #Confirm changes
histologyData$Treatment <- c(rep("Ambient", times = 20), rep("Low", times = 10), rep("Ambient", times = 10)) #Create a treatment column
head(histologyData) #Confirm changes
histologyData$modifiedSex <- rep(0, nrow(histologyData)) #Create a new column to modify sex classifications
histologyData$modifiedSex[which(histologyData$Sex == "N/A")] <- rep("unripe", length(which(histologyData$Sex == "N/A"))) #For anything where sex is N/A, replace 0 with "unripe"
histologyData$modifiedSex[which(histologyData$Sex == "female")] <- rep("female", length(which(histologyData$Sex == "female"))) #For anything where sex is female, replace 0 with "female"
histologyData$modifiedSex[which(histologyData$Sex == "male")] <- rep("male", length(which(histologyData$Sex == "male"))) #For anything where sex is male, replace 0 with "male"
head(histologyData) #Confirm changes
immatureLow <- length(which(histologyData$Treatment == "Low" & histologyData$Mature == 0)) #Count the number of oysters that are immature and were exposed to low pH
matureLow <- length(which(histologyData$Treatment == "Low" & histologyData$Mature == 1)) #Count the number of oysters that are mature and were exposed to low pH
immatureAmb <- length(which(histologyData$Treatment == "Ambient" & histologyData$Mature == 0 & histologyData$Pre.or.Post.OA == "Post")) #Count the number of oysters post-sampling that are immature and were exposed to ambient pH
matureAmb <- length(which(histologyData$Treatment == "Ambient" & histologyData$Mature == 1 & histologyData$Pre.or.Post.OA == "Post")) #Count the number of oysters post-sampling that are immature and were exposed to ambient pH
data.frame("treatment" = c("Low", "Low", "Ambient", "Ambient"),
"maturity" = c("Immature", "Mature", "Immature", "Mature"),
"count" = c(immatureLow, matureLow, immatureAmb, matureAmb)) #Create a new dataframe
maturityFrequency <- data.frame("treatment" = c("Low", "Low", "Ambient", "Ambient"),
"maturity" = c("Immature", "Mature", "Immature", "Mature"),
"count" = c(immatureLow, matureLow, immatureAmb, matureAmb)) #Create a new dataframe
plot(maturityFrequency)
plot(x = maturityFrequency$treatment, y = maturityFrequency$count)
barplot(x = maturityFrequency$treatment, y = maturityFrequency$count)
barplot(maturityFrequency)
hist(maturityFrequency)
is.numeric(maturityFrequency$count)
barplot(maturityFrequency)
?barplot
barplot(maturityFrequency$count)
barplot(height = maturityFrequency$count, ylab = "Number of Individuals")
barplot(height = maturityFrequency$count, ylab = "Number of Individuals", main = "Maturity by Treatment")
barplot(height = maturityFrequency$count, xlab = "Treatment", ylab = "Number of Individuals", main = "Maturity by Treatment")
jpeg("2018-03-07-Maturity-by-Treatment-Barchart.jpeg", height = 1000, width = 1000)
barplot(height = maturityFrequency$count, xlab = "Treatment", ylab = "Number of Individuals", main = "Maturity by Treatment") #Preliminary bar chart
dev.off()
barplot(height = maturityFrequency$count, xlab = "Treatment", ylab = "Number of Individuals", main = "Maturity by Treatment", col = "white") #Preliminary bar chart
jpeg("2018-03-07-Maturity-by-Treatment-Barchart.jpeg", height = 1000, width = 1000)
barplot(height = maturityFrequency$count, xlab = "Treatment", ylab = "Number of Individuals", main = "Maturity by Treatment", col = "white") #Preliminary bar chart
dev.off()
getwd() #Working directory is set to the Manchester_Gonad_Histology folder
histologyData <- read.csv("../../data/Manchester/2018-02-27-Gigas-Histology-Classification.csv") #Import histology data
head(histologyData) #Confirm import
histologyData <- histologyData[, -6] #Remove Notes column
mature.stage <- 3 #Set the maturation stage to be anything that is ripe and spawning
histologyData$Mature <- rep(0, nrow(histologyData)) #Create a new column for Yes/No information on maturity. 0 is immature, 1 is mature
histologyData$Mature[which(histologyData$Stage >= mature.stage)] <- rep(1, length(which(histologyData$Stage >= mature.stage))) #For anything where the stage is greater than or equal to the mature.stage, replace it with a 1
head(histologyData) #Confirm changes
histologyData$Treatment <- c(rep("Ambient", times = 20), rep("Low", times = 10), rep("Ambient", times = 10)) #Create a treatment column
head(histologyData) #Confirm changes
histologyData$modifiedSex <- rep(0, nrow(histologyData)) #Create a new column to modify sex classifications
histologyData$modifiedSex[which(histologyData$Sex == "N/A")] <- rep("unripe", length(which(histologyData$Sex == "N/A"))) #For anything where sex is N/A, replace 0 with "unripe"
histologyData$modifiedSex[which(histologyData$Sex == "female")] <- rep("female", length(which(histologyData$Sex == "female"))) #For anything where sex is female, replace 0 with "female"
histologyData$modifiedSex[which(histologyData$Sex == "male")] <- rep("male", length(which(histologyData$Sex == "male"))) #For anything where sex is male, replace 0 with "male"
head(histologyData) #Confirm changes
mature.glm1 <- glm(Mature ~ factor(Treatment), family = binomial(link = "logit"), data = histologyData) #Ambient vs. low pH
anova(mature.glm1)
1-pf(3.7926/(30.024/38), 1, 38) #0.244599 (Use Deviance/(ResDev/ResDF) to find F-value)
1-pf(3.7926/(30.024/38), 1, 38) #0.03466119 (Use Deviance/(ResDev/ResDF) to find F-value)
mature.glm2 <- glm(Mature ~ factor(modifiedSex), family = binomial(link = "logit"), data = histologyData) #Female vs. male vs. unripe
anova(mature.glm2)
1-pf(13.175/(20.641/37), 2, 37) #2.85091e-05. modifiedSex is the most significant, so this is the base model
1-pf(13.175/(20.641/37), 2, 37) #2.456105e-07. modifiedSex is the most significant, so this is the base model
mature.glm3 <- glm(Mature ~ Ferrous.inclusion.presence, family = binomial(link = "logit"), data = histologyData) #Ferrous inclusion vs. no ferrous inclusions
anova(mature.glm3)
1-pf(0.24821/(33.569/38), 1, 38) #0.3164832
add1(mature.glm2, ~. + factor(Treatment) + Ferrous.inclusion.presence, test = "F", data = histologyData) #Neither variable is significant, so none will be included. modifiedSex is the only significant predictor
summary(mature.glm2) #Males are more mature than females
immatureLow <- length(which(histologyData$Treatment == "Low" & histologyData$Mature == 0)) #Count the number of oysters that are immature and were exposed to low pH
matureLow <- length(which(histologyData$Treatment == "Low" & histologyData$Mature == 1)) #Count the number of oysters that are mature and were exposed to low pH
immatureAmb <- length(which(histologyData$Treatment == "Ambient" & histologyData$Mature == 0 & histologyData$Pre.or.Post.OA == "Post")) #Count the number of oysters post-sampling that are immature and were exposed to ambient pH
matureAmb <- length(which(histologyData$Treatment == "Ambient" & histologyData$Mature == 1 & histologyData$Pre.or.Post.OA == "Post")) #Count the number of oysters post-sampling that are immature and were exposed to ambient pH
maturityFrequency <- data.frame("treatment" = c("Low", "Low", "Ambient", "Ambient"),
"maturity" = c("Immature", "Mature", "Immature", "Mature"),
"count" = c(immatureLow, matureLow, immatureAmb, matureAmb)) #Create a new dataframe
is.numeric(maturityFrequency$count)
barplot(height = maturityFrequency$count, xlab = "Treatment", ylab = "Number of Individuals", main = "Maturity by Treatment", col = "white") #Preliminary bar chart
maturityFrequency
add1(mature.glm2, ~. + factor(Treatment) + Ferrous.inclusion.presence, test = "F", data = histologyData) #Neither variable is significant, so none will be included. modifiedSex is the only significant predictor
maleLow <- length(which(histologyData$Treatment == "Low" & histologyData$modifiedSex == "male")) #Count the number of oysters that are male and were exposed to low pH
femaleLow <- length(which(histologyData$Treatment == "Low" & histologyData$modifiedSex == "female"))
unripeLow <- length(which(histologyData$Treatment == "Low" & histologyData$modifiedSex == "unripe"))
maleAmb <- length(which(histologyData$Treatment == "Ambient" & histologyData$modifiedSex == "male" & histologyData$Pre.or.Post.OA == "Post")) #Include specification for post-treamtent samples only
femaleAmb <- length(which(histologyData$Treatment == "Ambient" & histologyData$modifiedSex == "female" & histologyData$Pre.or.Post.OA == "Post")) #Include specification for post-treamtent samples only
unripeAmb <- length(which(histologyData$Treatment == "Ambient" & histologyData$modifiedSex == "unripe" & histologyData$Pre.or.Post.OA == "Post")) #Include specification for post-treamtent samples only
sexRatioContingencyTable <- data.frame("count" = c(maleLow, femaleLow, unripeLow, maleAmb, femaleAmb, unripeAmb),
"row" = c(rep(1, times = 3), rep(2, times = 3)),
"column" = c(1, 2, 3, 1, 2, 3)) #Make contingency table where rows specify pH treatment and columns specify sex classification
head(sexRatioContingencyTable) #Confirm table creation
r <- as.factor(sexRatioContingencyTable$row) #Recognize as factor
c <- as.factor(sexRatioContingencyTable$column) #Recognize as factor
ratio.glm1 <- glm(count ~ r + c, family = poisson(link = "log"), data = sexRatioContingencyTable) #Create a poisson GLM with a log link
anova(ratio.glm1)
maturityFrequency <- data.frame("treatment" = c("Low", "Low", "Ambient", "Ambient"),
"maturity" = c("Immature", "Mature", "Immature", "Mature"),
"count" = c(immatureLow, matureLow, immatureAmb, matureAmb)) #Create a new dataframe
maturityFrequency
sexRatioContingencyTable
add1(mature.glm2, ~. + factor(Treatment) + Ferrous.inclusion.presence, test = "F", data = histologyData) #Neither variable is significant, so none will be included. modifiedSex is the only significant predictor
getwd() #Working directory is set to the Manchester_Gonad_Histology folder
histologyData <- read.csv("../../data/Manchester/2018-02-27-Gigas-Histology-Classification.csv") #Import histology data
head(histologyData) #Confirm import
histologyData <- histologyData[, -6] #Remove Notes column
mature.stage <- 3 #Set the maturation stage to be anything that is ripe and spawning
histologyData$Mature <- rep(0, nrow(histologyData)) #Create a new column for Yes/No information on maturity. 0 is immature, 1 is mature
histologyData$Mature[which(histologyData$Stage >= mature.stage)] <- rep(1, length(which(histologyData$Stage >= mature.stage))) #For anything where the stage is greater than or equal to the mature.stage, replace it with a 1
head(histologyData) #Confirm changes
histologyData$Treatment <- c(rep("Ambient", times = 20), rep("Low", times = 10), rep("Ambient", times = 10)) #Create a treatment column
head(histologyData) #Confirm changes
histologyData$modifiedSex <- rep(0, nrow(histologyData)) #Create a new column to modify sex classifications
histologyData$modifiedSex[which(histologyData$Sex == "N/A")] <- rep("unripe", length(which(histologyData$Sex == "N/A"))) #For anything where sex is N/A, replace 0 with "unripe"
histologyData$modifiedSex[which(histologyData$Sex == "female")] <- rep("female", length(which(histologyData$Sex == "female"))) #For anything where sex is female, replace 0 with "female"
histologyData$modifiedSex[which(histologyData$Sex == "male")] <- rep("male", length(which(histologyData$Sex == "male"))) #For anything where sex is male, replace 0 with "male"
head(histologyData) #Confirm changes
mature.glm4 <- glm(Mature ~ Pre.or.Post.OA, family = binomial(link = "logit"), data = histologyData) #Pre vs. post sampling
anova(mature.glm4)
1-pf(0.79731/(33.019/38), 1, 38) #0.03466119 (Use Deviance/(ResDev/ResDF) to find F-value)
