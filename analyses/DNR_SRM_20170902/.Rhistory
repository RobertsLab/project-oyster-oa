getwd()
setwd("../../..") #Set working directory to the master SRM folder
getwd()
SRMDataNMDSAveragedCorrected <- read.csv("2017-10-10-Troubleshooting/2017-11-05-Integrated-Dataset/2017-11-05-Averaged-Areas-Pivoted-Corrected.csv", header = TRUE) #Import modified dataset. This dataset has rownames as the first column, column names as sample IDs. Area data is averaged and corrected (no NAs)
rownames(SRMDataNMDSAveragedCorrected) <- SRMDataNMDSAveragedCorrected[,1]
SRMDataNMDSAveragedCorrected <- SRMDataNMDSAveragedCorrected[,-1] #Remove first column of rownames
head(SRMDataNMDSAveragedCorrected) #Confirm import.
SRMDataNMDSAveragedCorrectedTransposed <- data.frame(t(SRMDataNMDSAveragedCorrected)) #Transpose the data
SRMDataNMDSAveragedCorrectedTransposed$Sample.Number <- rownames(SRMDataNMDSAveragedCorrectedTransposed) #Save rownames as a new column
head(SRMDataNMDSAveragedCorrectedTransposed) #Confirm changes
biologicalReplicates <- read.csv("2017-10-10-Troubleshooting/2017-10-24-Coefficient-of-Variation/2017-10-25-Biological-Replicate-Information-SampleID-Only.csv", na.strings = "N/A") #Import site and eelgrass condition information (i.e. biological replicate information)
head(biologicalReplicates) #Confirm import
colnames(biologicalReplicates) <- c("Sample.Number", "Site", "Eelgrass.Condition")
rownames(biologicalReplicates) <- biologicalReplicates$Sample.Number #Set sample number as row names
head(biologicalReplicates) #Confirm changes
biologicalReplicates$Site <- factor(biologicalReplicates$Site) #Remove 0 as a factor
biologicalReplicates$Eelgrass.Condition <- factor(biologicalReplicates$Eelgrass.Condition) #Remove 0 as a factor
str(biologicalReplicates) #Confirm factor reset
boxplotData <- merge(x = biologicalReplicates, y = SRMDataNMDSAveragedCorrectedTransposed, by = "Sample.Number") #Merge together
head(boxplotData) #Confirm merge
rownames(boxplotData) <- boxplotData$Sample.Number #Set sample number as row names
boxplotData <- boxplotData[-1] #Remove Sample.Number column
head(boxplotData) #Confirm changes
attach(boxplotData)
boxplotData <- boxplotData[order(Site),] #Reorder so sites are sorted alphabetically
detach(boxplotData)
boxplotData <- boxplotData[-2] #Remove habitat information
head(boxplotData) #Confirm changes
caseInletData <- subset(x = boxplotData, subset = boxplotData$Site == "CI") #Subset Case Inlet data
fidalgoBayData <- subset(x = boxplotData, subset = boxplotData$Site == "FB") #Subset Fidalgo Bay data
portGambleData <- subset(x = boxplotData, subset = boxplotData$Site == "PG") #Subset Port Gamble Bay data
skokomishRiverData <- subset(x = boxplotData, subset = boxplotData$Site == "SK") #Subset Skokomish River Delta data
willapaBayData <- subset(x = boxplotData, subset = boxplotData$Site == "WB") #Subset Willapa Bay data
caseInletData <- caseInletData[-1] #Remove site classification
fidalgoBayData <- fidalgoBayData[-1] #Remove site classification
portGambleData <- portGambleData[-1] #Remove site classification
skokomishRiverData <- skokomishRiverData[-1] #Remove site classification
willapaBayData <- willapaBayData[-1] #Remove site classification
peptideNames <- colnames(caseInletData) #Isolate peptide names
caseInletAverages <- rep(0, times = length(peptideNames)) #Create an empty vector to store data
for(i in 1:length(peptideNames)) {
caseInletAverages[i] <- mean(caseInletData[,i])
} #Average each column and save it in the caseInletAverages vector
caseInletAverages <- data.frame("peptide" = peptideNames,
"site" = rep("CI", times = length(peptideNames)),
"averageNormalizedAbundance" = caseInletAverages) #Create a new dataframe with peptide names, site, and average normalized protein abundances
head(caseInletAverages) #Confirm dataframe creation
fidalgoBayAverages <- rep(0, times = length(peptideNames)) #Create an empty vector to store data
for(i in 1:length(peptideNames)) {
fidalgoBayAverages[i] <- mean(fidalgoBayData[,i])
} #Average each column and save it in the fidalgoBayAverages vector
fidalgoBayAverages <- data.frame("peptide" = peptideNames,
"site" = rep("FB", times = length(peptideNames)),
"averageNormalizedAbundance" = fidalgoBayAverages) #Create a new dataframe with peptide names, site, and average normalized protein abundances
head(fidalgoBayAverages) #Confirm dataframe creation
portGambleAverages <- rep(0, times = length(peptideNames)) #Create an empty vector to store data
for(i in 1:length(peptideNames)) {
portGambleAverages[i] <- mean(portGambleData[,i])
} #Average each column and save it in the portGambleAverages vector
portGambleAverages <- data.frame("peptide" = peptideNames,
"site" = rep("PG", times = length(peptideNames)),
"averageNormalizedAbundance" = portGambleAverages) #Create a new dataframe with peptide names, site, and average normalized protein abundances
head(portGambleAverages) #Confirm dataframe creation
skokomishRiverAverages <- rep(0, times = length(peptideNames)) #Create an empty vector to store data
for(i in 1:length(peptideNames)) {
skokomishRiverAverages[i] <- mean(skokomishRiverData[,i])
} #Average each column and save it in the skokomishRiverAverages vector
skokomishRiverAverages <- data.frame("peptide" = peptideNames,
"site" = rep("SK", times = length(peptideNames)),
"averageNormalizedAbundance" = skokomishRiverAverages) #Create a new dataframe with peptide names, site, and average normalized protein abundances
head(skokomishRiverAverages) #Confirm dataframe creation
willapaBayAverages <- rep(0, times = length(peptideNames)) #Create an empty vector to store data
for(i in 1:length(peptideNames)) {
willapaBayAverages[i] <- mean(willapaBayData[,i])
} #Average each column and save it in the willapaBayAverages vector
willapaBayAverages <- data.frame("peptide" = peptideNames,
"site" = rep("WB", times = length(peptideNames)),
"averageNormalizedAbundance" = willapaBayAverages) #Create a new dataframe with peptide names, site, and average normalized protein abundances
head(willapaBayAverages) #Confirm dataframe creation
averagePeptideData <- rbind(caseInletAverages, fidalgoBayAverages, portGambleAverages, skokomishRiverAverages, willapaBayAverages) #Merge all averaged peptide data into a single dataframe
averagePeptideData <- read.csv("2017-10-10-Troubleshooting/2017-11-05-Integrated-Dataset/2018-02-15-DNR-Paper-Figure/2018-02-16-Average-Peptide-Data-by-Site.csv", header = TRUE)
head(averagePeptideData) #Confirm import
averagePeptideData <- averagePeptideData[,-1] #Remove first column
head(averagePeptideData) #Confirm column deletion
averagePeptideData$shapes <- c(16, 17, 15, 16, 17, 16, 17, 15, 16, 17, 16, 17, 15, 16, 17, 15, 16, 16, 17, 16, 17, 16, 17, 16, 17, 15, 16, 17, 16, 17, 15, 16, 17, 15, 16, 17, 15) #Specify shapes. 16 = circle, 17 = triangle, 15 = square
head(averagePeptideData) #Confirm addition
averagePeptideData$colors <- c(rep("goldenrod1", times = 3), rep("turquoise1", times = 2), rep("deepskyblue1", times = 3), rep("seagreen1", times = 2), rep("purple1", times = 3), rep("dodgerblue1", times = 3), rep("dodgerblue3", times = 1), rep("sandybrown", times = 2), rep("orangered", times = 2), rep("palegreen3", times = 2), rep("chocolate4", times = 3), rep("violet", times = 2), rep("olivedrab2", times = 3), rep("lawngreen", times = 3), rep("springgreen4", times = 3))
dotchart(x = averagePeptideData$averageNormalizedAbundance, groups = averagePeptideData$site, pch = averagePeptideData$shapes, color = averagePeptideData$colors, main = "Peptide Abundances Across Sites", xlab = "Normalized Peptide Abundance", ylab = "Sites", cex.main = 3, cex.lab = 1.5) #Create plot with all peptide abundance data
?dotchart
dotchart(x = averagePeptideData$averageNormalizedAbundance, groups = averagePeptideData$site, pch = averagePeptideData$shapes, color = averagePeptideData$colors, cex = 3, main = "Peptide Abundances Across Sites", xlab = "Normalized Peptide Abundance", ylab = "Sites", cex.main = 3, cex.lab = 1.5) #Create plot with all peptide abundance data
dotchart(x = averagePeptideData$averageNormalizedAbundance, groups = averagePeptideData$site, pch = averagePeptideData$shapes, color = averagePeptideData$colors, cex = 2, main = "Peptide Abundances Across Sites", xlab = "Normalized Peptide Abundance", ylab = "Sites", cex.main = 3, cex.lab = 1.5) #Create plot with all peptide abundance data
dotchart(x = averagePeptideData$averageNormalizedAbundance, groups = averagePeptideData$site, pch = averagePeptideData$shapes, color = averagePeptideData$colors, main = "Peptide Abundances Across Sites", xlab = "Normalized Peptide Abundance", ylab = "Sites", cex.main = 3, cex.lab = 1.5) #Create plot with all peptide abundance data
dotchart(x = averagePeptideData$averageNormalizedAbundance, groups = averagePeptideData$site, pch = averagePeptideData$shapes, color = averagePeptideData$colors, pt.cex = 3, main = "Peptide Abundances Across Sites", xlab = "Normalized Peptide Abundance", ylab = "Sites", cex.main = 3, cex.lab = 1.5) #Create plot with all peptide abundance data
dotchart(x = averagePeptideData$averageNormalizedAbundance, groups = averagePeptideData$site, pch = averagePeptideData$shapes, color = averagePeptideData$colors, pt.cex = 2, main = "Peptide Abundances Across Sites", xlab = "Normalized Peptide Abundance", ylab = "Sites", cex.main = 3, cex.lab = 1.5) #Create plot with all peptide abundance data
jpeg("2017-10-10-Troubleshooting/2017-11-05-Integrated-Dataset/2018-02-15-DNR-Paper-Figure/2018-02-16-All-Peptide-Abundances-Across-Sites.jpeg", height = 1000, width = 1000) #Save file
dotchart(x = averagePeptideData$averageNormalizedAbundance, groups = averagePeptideData$site, pch = averagePeptideData$shapes, color = averagePeptideData$colors, pt.cex = 2, main = "Peptide Abundances Across Sites", xlab = "Normalized Peptide Abundance", ylab = "Sites", cex.main = 3, cex.lab = 1.5) #Create plot with all peptide abundance data
dev.off() #Turn off plotting device
jpeg("2017-10-10-Troubleshooting/2017-11-05-Integrated-Dataset/2018-02-15-DNR-Paper-Figure/2018-02-16-All-Peptide-Abundances-Across-Sites.jpeg", height = 1000, width = 1000) #Save file
dotchart(x = averagePeptideData$averageNormalizedAbundance, groups = averagePeptideData$site, pch = averagePeptideData$shapes, color = averagePeptideData$colors, pt.cex = 2.5, main = "Peptide Abundances Across Sites", xlab = "Normalized Peptide Abundance", ylab = "Sites", cex.main = 3, cex.lab = 1.5) #Create plot with all peptide abundance data
dev.off() #Turn off plotting device
diffExpPeptides <- peptideNames[c(4, 6:10, 14:15, 18:19, 22, 24, 26)] #Copy differentially expressed peptides into a new vector
SRMDataNMDSAveragedCorrected <- read.csv("2017-10-10-Troubleshooting/2017-11-05-Integrated-Dataset/2017-11-05-Averaged-Areas-Pivoted-Corrected.csv", header = TRUE) #Import modified dataset. This dataset has rownames as the first column, column names as sample IDs. Area data is averaged and corrected (no NAs)
rownames(SRMDataNMDSAveragedCorrected) <- SRMDataNMDSAveragedCorrected[,1]
SRMDataNMDSAveragedCorrected <- SRMDataNMDSAveragedCorrected[,-1] #Remove first column of rownames
head(SRMDataNMDSAveragedCorrected) #Confirm import.
SRMDataNMDSAveragedCorrectedTransposed <- data.frame(t(SRMDataNMDSAveragedCorrected)) #Transpose the data
SRMDataNMDSAveragedCorrectedTransposed$Sample.Number <- rownames(SRMDataNMDSAveragedCorrectedTransposed) #Save rownames as a new column
head(SRMDataNMDSAveragedCorrectedTransposed) #Confirm changes
biologicalReplicates <- read.csv("2017-10-10-Troubleshooting/2017-10-24-Coefficient-of-Variation/2017-10-25-Biological-Replicate-Information-SampleID-Only.csv", na.strings = "N/A") #Import site and eelgrass condition information (i.e. biological replicate information)
head(biologicalReplicates) #Confirm import
colnames(biologicalReplicates) <- c("Sample.Number", "Site", "Eelgrass.Condition")
rownames(biologicalReplicates) <- biologicalReplicates$Sample.Number #Set sample number as row names
head(biologicalReplicates) #Confirm changes
biologicalReplicates$Site <- factor(biologicalReplicates$Site) #Remove 0 as a factor
biologicalReplicates$Eelgrass.Condition <- factor(biologicalReplicates$Eelgrass.Condition) #Remove 0 as a factor
str(biologicalReplicates) #Confirm factor reset
boxplotData <- merge(x = biologicalReplicates, y = SRMDataNMDSAveragedCorrectedTransposed, by = "Sample.Number") #Merge together
head(boxplotData) #Confirm merge
rownames(boxplotData) <- boxplotData$Sample.Number #Set sample number as row names
boxplotData <- boxplotData[-1] #Remove Sample.Number column
head(boxplotData) #Confirm changes
attach(boxplotData)
boxplotData <- boxplotData[order(Site),] #Reorder so sites are sorted alphabetically
detach(boxplotData)
boxplotData <- boxplotData[-2] #Remove habitat information
head(boxplotData) #Confirm changes
caseInletData <- subset(x = boxplotData, subset = boxplotData$Site == "CI") #Subset Case Inlet data
caseInletData <- caseInletData[-1] #Remove site classification
peptideNames <- colnames(caseInletData) #Isolate peptide names
diffExpPeptides <- peptideNames[c(4, 6:10, 14:15, 18:19, 22, 24, 26)] #Copy differentially expressed peptides into a new vector
diffExpPeptides <- data.frame("peptide" = diffExpPeptides,
"temp" = rep(0, times = length(diffExpPeptides))) #Add a temporary column and make diffExpPepties a dataframe
head(diffExpPeptides) #Confirm column addition
diffExpPeptides <- merge(x = diffExpPeptides, y = averagePeptideData, by = "peptide") #Merge by peptide name
diffExpPeptides <- diffExpPeptides[,-2] #Remove "temp" column
head(diffExpPeptides) #Confirm merge and column removal
attach(diffExpPeptides)
diffExpPeptides <- diffExpPeptides[order(site),] #Reorder so sites are sorted alphabetically
detach(diffExpPeptides)
head(diffExpPeptides) #Confirm sort
dotchart(x = diffExpPeptides$averageNormalizedAbundance, groups = diffExpPeptides$site, pch = diffExpPeptides$shapes, color = diffExpPeptides$colors, main = "Differentially Expressed Peptides Across Sites", xlab = "Normalized Peptide Abundance", ylab = "Sites", cex.main = 3, cex.lab = 1.5) #Create plot with differentially expressed peptide abundance data
dotchart(x = diffExpPeptides$averageNormalizedAbundance, groups = diffExpPeptides$site, pch = diffExpPeptides$shapes, color = diffExpPeptides$colors, pt.cex = 3, main = "Differentially Expressed Peptides Across Sites", xlab = "Normalized Peptide Abundance", ylab = "Sites", cex.main = 3, cex.lab = 1.5) #Create plot with differentially expressed peptide abundance data
dotchart(x = diffExpPeptides$averageNormalizedAbundance, groups = diffExpPeptides$site, pch = diffExpPeptides$shapes, color = diffExpPeptides$colors, pt.cex = 2.5, main = "Differentially Expressed Peptides Across Sites", xlab = "Normalized Peptide Abundance", ylab = "Sites", cex.main = 3, cex.lab = 1.5) #Create plot with differentially expressed peptide abundance data
jpeg("2017-10-10-Troubleshooting/2017-11-05-Integrated-Dataset/2018-02-15-DNR-Paper-Figure/2018-02-18-Differentially-Expressed-Peptides-Across-Sites.jpeg", height = 1000, width = 1000) #Save file
dotchart(x = diffExpPeptides$averageNormalizedAbundance, groups = diffExpPeptides$site, pch = diffExpPeptides$shapes, color = diffExpPeptides$colors, pt.cex = 2.5, main = "Differentially Expressed Peptides Across Sites", xlab = "Normalized Peptide Abundance", ylab = "Sites", cex.main = 3, cex.lab = 1.5) #Create plot with differentially expressed peptide abundance data
dev.off() #Turn off plotting device
install.packages("pheatmap") #Install package
library(pheatmap) #Load package
log(diffExpPeptides$averageNormalizedAbundance)
diffExpPeptides$logTransformedAbundance <- (log(diffExpPeptides$averageNormalizedAbundance) + 1) #Log(x+1) transform dataset
pheatmap(diffExpPeptides$logTransformedAbundance, cluster_rows = T, cluster_cols = T, clustering_distance_rows = "euclidean", clustering_distance_cols = "euclidean", clustering_method = "average", show_rownames = T, show_colnames = T)
head(diffExpPeptides)
heatmapData <- data.frame("peptide" = diffExpPeptides$peptide,
"log(x+1)Abundance" = diffExpPeptides$logTransformedAbundance,
"site" = diffExpPeptides$site) #Subset data needed for heatmap
head(heatmapData) #Confirm subset
rownames(heatmapData) <- heatmapData$peptide #Recognize peptide column as rownames
head(heatmapData) #Confirm subset
library(reshape2) #Load package
?dcast
heatmapData <- dcast(heatmapData, peptide ~ site, value.var = log.x.1.Abundancce)
heatmapData <- dcast(heatmapData, peptide ~ site, value.var = log.x.1.Abundance)
heatmapData <- dcast(heatmapData, peptide ~ site, value.var = log.x.1.Abundance)
heatmapData <- dcast(data = heatmapData, peptide ~ site, value.var = log.x.1.Abundance)
heatmapData <- dcast(data = heatmapData, peptide ~ site)
heatmapData
heatmapData <- data.frame("peptide" = diffExpPeptides$peptide,
"log(x+1)Abundance" = diffExpPeptides$logTransformedAbundance,
"site" = diffExpPeptides$site) #Subset data needed for heatmap
head(heatmapData) #Confirm subset
heatmapDataPivoted <- dcast(data = heatmapData, peptide ~ site, value.var = log.x.1.Abundance)
heatmapDataPivoted <- dcast(data = heatmapData, peptide ~ site, value.var = heatmapData$log.x.1.Abundance)
heatmapDataPivoted <- dcast(data = heatmapData, peptide ~ site, value.var = heatmapData$log.x.1.Abundance)
heatmapDataPivoted
heatmapData <- data.frame("peptide" = diffExpPeptides$peptide,
"logTransformedAbundance" = diffExpPeptides$logTransformedAbundance,
"site" = diffExpPeptides$site) #Subset data needed for heatmap
head(heatmapData) #Confirm subset
heatmapDataPivoted <- dcast(data = heatmapData, peptide ~ site, value.var = logTransformedAbundance)
head(heatmapData) #Confirm subset
heatmapDataPivoted <- dcast(data = heatmapData, peptide ~ site, value.var = logTransformedAbundance)
is.numeric(heatmapData$logTransformedAbundance)
heatmapDataPivoted <- acast(data = heatmapData, peptide ~ site, value.var = logTransformedAbundance)
heatmapDataPivoted <- dcast(data = heatmapData, peptide ~ site)
heatmapDataPivoted <- dcast(data = heatmapData, peptide ~ site, value.var = logTransformedAbundance)
names(heatmapData)
heatmapDataPivoted <- dcast(data = heatmapData, peptide ~ site, value.var = "logTransformedAbundance")
head(heatmapDataPivoted)
pheatmap(heatmapDataPivoted, cluster_rows = T, cluster_cols = T, clustering_distance_rows = "euclidean", clustering_distance_cols = "euclidean", clustering_method = "average", show_rownames = T, show_colnames = T)
heatmapDataPivoted
pheatmap(heatmapDataPivoted, cluster_rows = T, cluster_cols = T, clustering_distance_rows = "euclidean", clustering_distance_cols = "euclidean", clustering_method = "average", show_rownames = T, show_colnames = T)
?pheatmap
pheatmap(heatmapDataPivoted, cluster_rows = T, clustering_distance_rows = "euclidean", clustering_distance_cols = "euclidean", clustering_method = "average", show_rownames = T, show_colnames = T)
pheatmap(heatmapDataPivoted, cluster_rows = TRUE, cluster_cols = TRUE, clustering_distance_rows = "bray", clustering_distance_cols = "bray", clustering_method = "average", show_rownames = T, show_colnames = T)
pheatmap(heatmapDataPivoted, cluster_rows = TRUE, cluster_cols = TRUE, clustering_distance_rows = "binary", clustering_distance_cols = "binary", clustering_method = "average", show_rownames = T, show_colnames = T)
pheatmap(heatmapDataPivoted, cluster_rows = TRUE, cluster_cols = TRUE, clustering_distance_rows = "euclidean", clustering_distance_cols = "euclidean", clustering_method = "average", show_rownames = T, show_colnames = T)
?heatmap
heatmap(heatmapDataPivoted)
is.numeric(heatmapDataPivoted)
as.numeric(heatmapDataPivoted)
View(heatmapDataPivoted)
rownames(heatmapDataPivoted) <- heatmapDataPivoted$peptide #Assign peptide as rowname
heatmapDataPivoted <- heatmapDataPivoted[,-1] #Remove peptide column
heat(heatmapDataPivoted) #Confirm changes
head(heatmapDataPivoted) #Confirm changes
pheatmap(heatmapDataPivoted, cluster_rows = TRUE, cluster_cols = TRUE, clustering_distance_rows = "euclidean", clustering_distance_cols = "euclidean", clustering_method = "average", show_rownames = TRUE, show_colnames = TRUE)
pheatmap(heatmapDataPivoted, cluster_rows = TRUE, cluster_cols = TRUE, clustering_distance_rows = "euclidean", clustering_distance_cols = "euclidean", clustering_method = "average", show_rownames = TRUE, show_colnames = TRUE, legend = TRUE)
?pheatmap
pheatmap(heatmapDataPivoted, cluster_rows = TRUE, cluster_cols = FALSE, clustering_distance_rows = "euclidean", clustering_distance_cols = "euclidean", clustering_method = "average", show_rownames = TRUE, show_colnames = TRUE, legend = TRUE)
pheatmap(heatmapDataPivoted, cluster_rows = TRUE, cluster_cols = TRUE, clustering_distance_rows = "euclidean", clustering_distance_cols = "euclidean", clustering_method = "average", show_rownames = TRUE, show_colnames = TRUE, legend = TRUE)
jpeg("2017-10-10-Troubleshooting/2017-11-05-Integrated-Dataset/2018-02-15-DNR-Paper-Figure/2018-02-26-Average-Differentially-Expressed-Peptides-Heatmap.jpeg") #Create file
pheatmap(heatmapDataPivoted, cluster_rows = TRUE, cluster_cols = TRUE, clustering_distance_rows = "euclidean", clustering_distance_cols = "euclidean", clustering_method = "average", show_rownames = TRUE, show_colnames = TRUE, legend = TRUE)
dev.off()
averagePeptideData$logTransformedAbundance <- (log(averagePeptideData$averageNormalizedAbundance) + 1) #Log(x+1) transform dataset
allheatmapData <- data.frame("peptide" = averagePeptideData$peptide,
"logTransformedAbundance" = averagePeptideData$logTransformedAbundance,
"site" = averagePeptideData$site) #Subset data needed for heatmap of all peptides
head(allheatmapData) #Confirm subset
allheatmapDataPivoted <- dcast(data = allheatmapData, peptide ~ site, value.var = "logTransformedAbundance") #Cast table (transform from long to wide)
head(allheatmapDataPivoted) #Confirm cast
rownames(allheatmapDataPivoted) <- allheatmapDataPivoted$peptide #Assign peptide as rowname
allheatmapDataPivoted <- allheatmapDataPivoted[,-1] #Remove peptide column
head(allheatmapDataPivoted) #Confirm changes
pheatmap(allheatmapDataPivoted, cluster_rows = TRUE, cluster_cols = TRUE, clustering_distance_rows = "euclidean", clustering_distance_cols = "euclidean", clustering_method = "average", show_rownames = TRUE, show_colnames = TRUE, legend = TRUE)
pheatmap(allheatmapDataPivoted, cluster_rows = FALSE, cluster_cols = TRUE, clustering_distance_rows = "euclidean", clustering_distance_cols = "euclidean", clustering_method = "average", show_rownames = TRUE, show_colnames = TRUE, legend = TRUE)
pheatmap(heatmapDataPivoted, cluster_rows = FALSE, cluster_cols = TRUE, clustering_distance_rows = "euclidean", clustering_distance_cols = "euclidean", clustering_method = "average", show_rownames = TRUE, show_colnames = TRUE, legend = TRUE)
jpeg("2017-10-10-Troubleshooting/2017-11-05-Integrated-Dataset/2018-02-15-DNR-Paper-Figure/2018-02-26-Average-Differentially-Expressed-Peptides-Heatmap.jpeg") #Create file
pheatmap(heatmapDataPivoted, cluster_rows = FALSE, cluster_cols = TRUE, clustering_distance_rows = "euclidean", clustering_distance_cols = "euclidean", clustering_method = "average", show_rownames = TRUE, show_colnames = TRUE, legend = TRUE)
dev.off() #Turn off plotting device
jpeg("2017-10-10-Troubleshooting/2017-11-05-Integrated-Dataset/2018-02-15-DNR-Paper-Figure/2018-02-26-All-Average-Peptide-Abundance-Heatmap.jpeg") #Create file
pheatmap(allheatmapDataPivoted, cluster_rows = FALSE, cluster_cols = TRUE, clustering_distance_rows = "euclidean", clustering_distance_cols = "euclidean", clustering_method = "average", show_rownames = TRUE, show_colnames = TRUE, legend = TRUE)
dev.off() #Turn off plotting device
library(ggplot2)
library(ggthemes)
head(diffExpPeptides)
ggplot(diffExpPeptides) + geom_jitter(aes(x= site, y= averageNormalizedAbundance, colour = colors), alpha=0.5, width=0.2, height=0.2) + labs(y= "Average Normalized Abundance") + geom_hline(yintercept=c(1.5, 2.5, 3.5, 4.5, 5.5, 6.5, 7.5, 8.5, 9.5, 10.5, 11.5, 12.5, 13.5, 14.5, 15.5, 16.5, 17.5, 18.5, 19.5, 20.5, 21.5, 22.5, 23.5), color='grey80') + theme_tufte()
ggplot(diffExpPeptides) + geom_jitter(aes(x= site, y= averageNormalizedAbundance, colour = colors), alpha=0.5, width=0.2, height=0.2) + labs(y= "Average Normalized Abundance") + theme_tufte()
ggplot(diffExpPeptides) + geom_jitter(aes(x= site, y= averageNormalizedAbundance, colour = colors), alpha=0.5, width=0.2, height=0.2) + labs(y= "Average Normalized Abundance")
ggplot(diffExpPeptides) + geom_jitter(aes(x= site, y= averageNormalizedAbundance, colour = colors), alpha=0.5, width=0.2, height=0.2) + labs(x = "Site", y = "Average Normalized Abundance") #Make bubble plot
ggplot(diffExpPeptides) + geom_jitter(aes(x= site, y= averageNormalizedAbundance, colour = colors, size = shape), alpha=0.5, width=0.2, height=0.2) + labs(x = "Site", y = "Average Normalized Abundance") #Make bubble plot
head(diffExpPeptides)
ggplot(diffExpPeptides) + geom_jitter(aes(x= site, y= averageNormalizedAbundance, colour = colors, size = shapes), alpha=0.5, width=0.2, height=0.2) + labs(x = "Site", y = "Average Normalized Abundance") #Make bubble plot
ggplot(diffExpPeptides) + geom_jitter(aes(x= site, y= averageNormalizedAbundance, colour = colors, size = averageNormalizedAbundance), alpha=0.5, width=0.2, height=0.2) + labs(x = "Site", y = "Average Normalized Abundance") #Make bubble plot
ggplot(diffExpPeptides) + geom_point(aes(x= site, y= averageNormalizedAbundance, colour = colors, size = averageNormalizedAbundance), alpha=0.5, width=0.2, height=0.2) + labs(x = "Site", y = "Average Normalized Abundance") #Make bubble plot
jitter
ggplot(diffExpPeptides) + geom_jitter(aes(x= site, y= averageNormalizedAbundance, colour = colors, size = averageNormalizedAbundance), alpha=0.5, width=0.2, height=0.2) + labs(x = "Site", y = "Average Normalized Abundance") #Make bubble plot
ggplot(diffExpPeptides) + geom_jitter(aes(x= site, y= averageNormalizedAbundance, colour = colors, size = averageNormalizedAbundance), alpha=0.5, width=0.2, height=0.2) + labs(x = "Site", y = "Average Normalized Abundance") #Make bubble plot
ggplot(diffExpPeptides) + geom_point(aes(x= site, y= averageNormalizedAbundance, colour = colors, size = averageNormalizedAbundance), alpha=0.5, width=0.2, height=0.2) + labs(x = "Site", y = "Average Normalized Abundance") #Make bubble plot
ggplot(diffExpPeptides) + geom_jitter(aes(x= site, y= averageNormalizedAbundance, colour = colors, size = averageNormalizedAbundance), alpha=0.5, width=0.2, height=0.2) + labs(x = "Site", y = "Average Normalized Abundance") #Make bubble plot
ggplot(diffExpPeptides) + geom_jitter(aes(x= site, y= averageNormalizedAbundance, colour = colors, size = averageNormalizedAbundance), alpha=0.5, width=0.2, height=0.2) + labs(x = "Site", y = "Average Normalized Abundance") #Make bubble plot
ggplot(diffExpPeptides) + geom_jitter(aes(x= site, y= averageNormalizedAbundance, colour = colors, size = averageNormalizedAbundance), alpha=0.5, width=0.2, height=0.2) + labs(x = "Site", y = "Average Normalized Abundance") #Make bubble plot
ggplot(diffExpPeptides) + geom_jitter(aes(x= site, y= averageNormalizedAbundance, colour = colors, size = averageNormalizedAbundance), alpha=0.5, width=0.2, height=0.2) + labs(x = "Site", y = "Average Normalized Abundance") #Make bubble plot
ggplot(diffExpPeptides) + geom_point(aes(x= site, y= averageNormalizedAbundance, colour = colors, size = averageNormalizedAbundance), alpha=0.5, width=0.2, height=0.2) + labs(x = "Site", y = "Average Normalized Abundance") #Make bubble plot
?geom_point
ggplot(diffExpPeptides) + geom_point(aes(x= site, y= averageNormalizedAbundance, colour = colors, size = averageNormalizedAbundance), alpha=0.5, width = 0.2, height = 0.2) + labs(x = "Site", y = "Average Normalized Abundance") #Make bubble plot
ggplot(diffExpPeptides) + geom_point(aes(x= site, y= averageNormalizedAbundance, colour = colors, size = averageNormalizedAbundance, position = "jitter"), alpha=0.5, width = 0.2, height = 0.2) + labs(x = "Site", y = "Average Normalized Abundance") #Make bubble plot
ggplot(diffExpPeptides) + geom_point(aes(x= site, y= averageNormalizedAbundance, colour = colors, size = averageNormalizedAbundance, width = 0.2), alpha=0.5, width = 0.2, height = 0.2) + labs(x = "Site", y = "Average Normalized Abundance") #Make bubble plot
ggplot(diffExpPeptides) + geom_point(aes(x= site, y= averageNormalizedAbundance, colour = colors, size = averageNormalizedAbundance), alpha=0.5, width = 0.2, height = 0.2) + labs(x = "Site", y = "Average Normalized Abundance") #Make bubble plot
ggplot(diffExpPeptides) + geom_point(aes(x= site, y= averageNormalizedAbundance, colour = site, size = averageNormalizedAbundance), alpha=0.5, width = 0.2, height = 0.2) + labs(x = "Site", y = "Average Normalized Abundance") #Make bubble plot
head(diffExpPeptides)
ggplot(diffExpPeptides) + geom_point(aes(x= peptide, y= averageNormalizedAbundance, colour = site, size = averageNormalizedAbundance), alpha=0.5, width = 0.2, height = 0.2) + labs(x = "Site", y = "Average Normalized Abundance") #Make bubble plot
ggplot(diffExpPeptides) + geom_jitter(aes(x = peptide, y = averageNormalizedAbundance, colour = site, size = averageNormalizedAbundance), alpha = 0.5, width = 0.2, height = 0.2) + labs(x = "Site", y = "Average Normalized Abundance") #Make bubble plot
ggplot(diffExpPeptides) + geom_point(aes(x = peptide, y = averageNormalizedAbundance, colour = site, size = averageNormalizedAbundance, shape = shapes), alpha = 0.5, width = 0.2, height = 0.2) + labs(x = "Site", y = "Average Normalized Abundance") #Make bubble plot
ggplot(diffExpPeptides) + geom_point(aes(x = peptide, y = averageNormalizedAbundance, colour = site, size = averageNormalizedAbundance, shape = factor(peptide)), alpha = 0.5, width = 0.2, height = 0.2) + labs(x = "Site", y = "Average Normalized Abundance") #Make bubble plot
ggplot(diffExpPeptides) + geom_point(aes(x = site, y = averageNormalizedAbundance, colour = site, size = averageNormalizedAbundance, shape = factor(peptide)), alpha = 0.5, width = 0.2, height = 0.2) + labs(x = "Site", y = "Average Normalized Abundance") #Make bubble plot
ggplot(diffExpPeptides) + geom_point(aes(x = site, y = averageNormalizedAbundance, colour = factor(peptide), size = averageNormalizedAbundance), alpha = 0.5, width = 0.2, height = 0.2) + labs(x = "Site", y = "Average Normalized Abundance") #Make bubble plot
ggplot(diffExpPeptides) + geom_point(aes(x = site, y = averageNormalizedAbundance, colour = factor(peptide), size = averageNormalizedAbundance), alpha = 0.5, width = 0.2, height = 0.2) + labs(x = "Site", y = "Average Normalized Abundance") #Make bubble plot
ggplot(diffExpPeptides) + geom_point(aes(x = site, y = averageNormalizedAbundance, colour = factor(peptide), alpha = 0.5, width = 0.2, height = 0.2) + labs(x = "Site", y = "Average Normalized Abundance") #Make bubble plot
?geom_point
ggplot(diffExpPeptides) + geom_point(aes(x = site, y = averageNormalizedAbundance, colour = factor(peptide)), alpha = 0.5, width = 0.2, height = 0.2) + labs(x = "Site", y = "Average Normalized Abundance") #Make bubble plot
ggplot(diffExpPeptides) + geom_point(aes(x = site, y = averageNormalizedAbundance, colour = factor(peptide)), alpha = 0.5, width = 0.2, height = 0.2) + labs(x = "Site", y = "Average Normalized Abundance") #Make bubble plot
ggplot(diffExpPeptides) + geom_point(aes(x = site, y = averageNormalizedAbundance, colour = factor(peptide), size = 10*averageNormalizedAbundance), alpha = 0.5, width = 0.2, height = 0.2) + labs(x = "Site", y = "Average Normalized Abundance") #Make bubble plot
ggplot(diffExpPeptides) + geom_point(aes(x = site, y = averageNormalizedAbundance, colour = factor(peptide), size = 100*averageNormalizedAbundance), alpha = 0.5, width = 0.2, height = 0.2) + labs(x = "Site", y = "Average Normalized Abundance") #Make bubble plot
ggplot(diffExpPeptides) + geom_point(aes(x = site, y = peptide, size = averageNormalizedAbundance), alpha = 0.5, width = 0.2, height = 0.2) + labs(x = "Site", y = "Average Normalized Abundance") #Make bubble plot
ggplot(diffExpPeptides) + geom_point(aes(x = peptide, y = averageNormalizedAbundance, colour = factor(site), size = averageNormalizedAbundance), alpha = 0.5, width = 0.2, height = 0.2) + labs(x = "Site", y = "Average Normalized Abundance") #Make bubble plot
ggplot(diffExpPeptides) + geom_jitter(aes(x = peptide, y = averageNormalizedAbundance, colour = factor(site), size = averageNormalizedAbundance), alpha = 0.5, width = 0.2, height = 0.2) + labs(x = "Site", y = "Average Normalized Abundance") #Make bubble plot
point
ggplot(diffExpPeptides) + geom_point(aes(x = peptide, y = averageNormalizedAbundance, colour = factor(site), size = averageNormalizedAbundance), alpha = 0.5, width = 0.2, height = 0.2) + labs(x = "Site", y = "Average Normalized Abundance") #Make bubble plot
ggplot(diffExpPeptides) + geom_point(aes(x = peptide, y = averageNormalizedAbundance, colour = factor(site), size = 5), alpha = 0.5, width = 0.2, height = 0.2) + labs(x = "Site", y = "Average Normalized Abundance") #Make bubble plot
head(diffExpPeptides)
ggplot(diffExpPeptides) + geom_point(aes(x = peptide, y = averageNormalizedAbundance, colour = factor(site), size = 5, shape = shapes), alpha = 0.5, width = 0.2, height = 0.2) + labs(x = "Site", y = "Average Normalized Abundance") #Make bubble plot
ggplot(diffExpPeptides) + geom_point(aes(x = peptide, y = averageNormalizedAbundance, colour = factor(site), size = 5, shape = factor(shapes)), alpha = 0.5, width = 0.2, height = 0.2) + labs(x = "Site", y = "Average Normalized Abundance") #Make bubble plot
ggplot(diffExpPeptides) + geom_point(aes(x = sites, y = averageNormalizedAbundance, colour = factor(site), size = 5, shape = factor(shapes)), alpha = 0.5, width = 0.2, height = 0.2) + labs(x = "Site", y = "Average Normalized Abundance") #Make bubble plot
ggplot(diffExpPeptides) + geom_point(aes(x = site, y = averageNormalizedAbundance, colour = factor(site), size = 5, shape = factor(shapes)), alpha = 0.5, width = 0.2, height = 0.2) + labs(x = "Site", y = "Average Normalized Abundance") #Make bubble plot
ggplot(diffExpPeptides) + geom_point(aes(x = site, y = peptide, colour = factor(site), size = 5, shape = factor(shapes)), alpha = 0.5, width = 0.2, height = 0.2) + labs(x = "Site", y = "Average Normalized Abundance") #Make bubble plot
ggplot(diffExpPeptides) + geom_point(aes(x = site, y = peptide, size = averageNormalizedAbundance, shape = factor(shapes)), alpha = 0.5, width = 0.2, height = 0.2) + labs(x = "Site", y = "Average Normalized Abundance") #Make bubble plot
ggplot(diffExpPeptides) + geom_point(aes(x = site, y = peptide, size = averageNormalizedAbundance), alpha = 0.5, width = 0.2, height = 0.2) + labs(x = "Site", y = "Average Normalized Abundance") #Make bubble plot
ggplot(diffExpPeptides) + geom_point(aes(x = site, y = peptide, size = averageNormalizedAbundance), alpha = 0.5, width = 0.2, height = 0.2) + labs(x = "Site", y = "Peptide") #Make bubble plot
ggplot(diffExpPeptides) + geom_jitter(aes(x = site, y = peptide, size = averageNormalizedAbundance), alpha = 0.5, width = 0.2, height = 0.2) + labs(x = "Site", y = "Peptide") #Make bubble plot
ggplot(diffExpPeptides) + geom_point(aes(x = site, y = peptide, size = averageNormalizedAbundance), alpha = 0.5, width = 0.2, height = 0.2) + labs(x = "Site", y = "Peptide") #Make bubble plot
ggplot(diffExpPeptides) + geom_bin2d(aes(x = site, y = peptide, size = averageNormalizedAbundance), alpha = 0.5, width = 0.2, height = 0.2) + labs(x = "Site", y = "Peptide") #Make bubble plot
ggplot(diffExpPeptides) + geom_point(aes(x = site, y = peptide, size = averageNormalizedAbundance), alpha = 0.5, width = 0.2, height = 0.2) + labs(x = "Site", y = "Peptide") #Make bubble plot
ggplot(diffExpPeptides) + geom_point(aes(x = site, y = peptide, size = averageNormalizedAbundance), alpha = 0.5, width = 0.2, height = 0.2) + labs(x = "Site") #Make bubble plot
diffExpPeptides$bubbleSize <- 100*diffExpPeptides$averageNormalizedAbundance #Multiply average normalized abundance by 100 to get more dramatic bubble sizes
head(diffExpPeptides) #Confirm changes
ggplot(diffExpPeptides) + geom_point(aes(x = site, y = peptide, size = bubbleSize), alpha = 0.5, width = 0.2, height = 0.2) + labs(x = "Site") #Make bubble plot
diffExpPeptides$bubbleSize <- 1000*diffExpPeptides$averageNormalizedAbundance #Multiply average normalized abundance by 100 to get more dramatic bubble sizes
head(diffExpPeptides) #Confirm changes
ggplot(diffExpPeptides) + geom_point(aes(x = site, y = peptide, size = bubbleSize), alpha = 0.5, width = 0.2, height = 0.2) + labs(x = "Site") #Make bubble plot
ggplot(diffExpPeptides) + geom_point(aes(x = site, y = peptide, size = factor(bubbleSize)), alpha = 0.5, width = 0.2, height = 0.2) + labs(x = "Site", y = "Peptide") #Make bubble plot
ggplot(diffExpPeptides) + geom_point(aes(x = site, y = peptide, size = bubbleSize), alpha = 0.5, width = 0.2, height = 0.2) + labs(x = "Site", y = "Peptide") #Make bubble plot
ggplot(diffExpPeptides) + geom_point(aes(x = site, y = peptide, size = bubbleSize), alpha = 0.5) + labs(x = "Site", y = "Peptide") #Make bubble plot
ggplot(diffExpPeptides) + geom_point(aes(x = site, y = peptide, size = averageNormalizedAbundance), alpha = 0.5) + labs(x = "Site", y = "Peptide") #Make bubble plot
ggplot(diffExpPeptides) + geom_point(aes(x = site, y = peptide, size = averageNormalizedAbundance, colour = blue), alpha = 0.5) + labs(x = "Site", y = "Peptide") #Make bubble plot
ggplot(diffExpPeptides) + geom_point(aes(x = site, y = peptide, size = averageNormalizedAbundance, colour = "blue"), alpha = 0.5) + labs(x = "Site", y = "Peptide") #Make bubble plot
ggplot(diffExpPeptides) + geom_point(aes(x = site, y = peptide, size = averageNormalizedAbundance, colour = "blue"), alpha = 0.5) + labs(x = "Site", y = "Peptide") + theme_tufte() #Make bubble plot
ggplot(diffExpPeptides) + geom_point(aes(x = site, y = peptide, size = averageNormalizedAbundance, colour = "blue"), alpha = 0.5, show.legend = FALSE) + labs(x = "Site", y = "Peptide") + theme_tufte() #Make bubble plot
ggplot(diffExpPeptides) + geom_point(aes(x = site, y = peptide, size = averageNormalizedAbundance, colour = "blue"), alpha = 0.5, show.legend = FALSE) + labs(x = "Site", y = "Peptide") #Make bubble plot
ggplot(diffExpPeptides) + geom_point(aes(x = site, y = peptide, size = averageNormalizedAbundance, colour = "dodgerblue"), alpha = 0.5, show.legend = FALSE) + labs(x = "Site", y = "Peptide") #Make bubble plot
ggplot(diffExpPeptides) + geom_point(aes(x = site, y = averageNormalizedAbundance, size = averageNormalizedAbundance, colour = "dodgerblue"), alpha = 0.5, show.legend = FALSE) + labs(x = "Site", y = "Peptide") #Make bubble plot
ggplot(diffExpPeptides) + geom_point(aes(x = site, y = averageNormalizedAbundance, size = averageNormalizedAbundance, colour = factor(peptide)), alpha = 0.5, show.legend = FALSE) + labs(x = "Site", y = "Peptide") #Make bubble plot
ggplot(diffExpPeptides) + geom_point(aes(x = site, y = averageNormalizedAbundance, size = 10, colour = factor(peptide)), alpha = 0.5, show.legend = FALSE) + labs(x = "Site", y = "Peptide") #Make bubble plot option 1
averageNormalizedAbundance
ggplot(diffExpPeptides) + geom_point(aes(x = site, y = averageNormalizedAbundance, size = averageNormalizedAbundance, colour = factor(peptide)), alpha = 0.5, show.legend = FALSE) + labs(x = "Site", y = "Peptide") #Make bubble plot option 1
?ggthemes
ggplot(diffExpPeptides) + geom_point(aes(x = site, y = averageNormalizedAbundance, size = averageNormalizedAbundance, colour = factor(peptide)), alpha = 0.5, show.legend = FALSE) + labs(x = "Site", y = "Peptide", main = ) + theme_minimal() #Make bubble plot option 1
ggplot(diffExpPeptides) + geom_point(aes(x = site, y = averageNormalizedAbundance, size = averageNormalizedAbundance, colour = factor(peptide)), alpha = 0.5, show.legend = FALSE) + labs(x = "Site", y = "Peptide", main = "Peptide Abundance") + theme_minimal() #Make bubble plot option 1
ggplot(diffExpPeptides) + geom_point(aes(x = site, y = averageNormalizedAbundance, size = averageNormalizedAbundance, colour = factor(peptide)), alpha = 0.5, show.legend = FALSE) + labs(x = "Site", y = "Peptide") + ggtitle("Average Normalized Abundance for Differentially Expressed Peptides") + theme_minimal() #Make bubble plot option 1
ggplot(diffExpPeptides) + geom_line(aes(x = site, y = averageNormalizedAbundance, size = averageNormalizedAbundance, colour = factor(peptide)), alpha = 0.5, show.legend = FALSE) + labs(x = "Site", y = "Peptide") + ggtitle("Average Normalized Abundance for Differentially Expressed Peptides") + theme_minimal() #Make bubble plot option 1
ggplot(diffExpPeptides) + geom_point(aes(x = site, y = averageNormalizedAbundance, size = averageNormalizedAbundance, colour = factor(peptide)), alpha = 0.5, show.legend = FALSE) + labs(x = "Site", y = "Peptide") + ggtitle("Average Normalized Abundance for Differentially Expressed Peptides") + theme_minimal() #Make bubble plot option 1
ggplot(diffExpPeptides) + geom_point(aes(x = site, y = averageNormalizedAbundance, size = averageNormalizedAbundance, colour = factor(peptide)), alpha = 0.5, show.legend = FALSE) + labs(x = "Site", y = "Average Normalized Abundance") + ggtitle("Average Normalized Abundance for Differentially Expressed Peptides") + theme_minimal() #Make bubble plot option 1
ggplot(diffExpPeptides) + geom_point(aes(x = site, y = averageNormalizedAbundance, size = averageNormalizedAbundance, colour = factor(peptide)), alpha = 0.5, show.legend = FALSE) + labs(x = "Site", y = "Average Normalized Abundance") + ggtitle("Differentially Expressed Peptides Across Sites") + theme_minimal() #Make bubble plot option 1
ggplot(diffExpPeptides) + geom_point(aes(x = site, y = peptide, size = averageNormalizedAbundance, colour = factor(peptide)), alpha = 0.5, show.legend = FALSE) + labs(x = "Site", y = "Average Normalized Abundance") + ggtitle("Differentially Expressed Peptides Across Sites") + theme_minimal() #Make bubble plot option 1
ggplot(diffExpPeptides) + geom_point(aes(x = site, y = peptide, size = averageNormalizedAbundance, colour = factor(peptide)), alpha = 0.8, show.legend = FALSE) + labs(x = "Site", y = "Average Normalized Abundance") + ggtitle("Differentially Expressed Peptides Across Sites") + theme_minimal() #Make bubble plot option 1
ggplot(diffExpPeptides) + geom_point(aes(x = site, y = averageNormalizedAbundance, size = averageNormalizedAbundance, colour = factor(peptide)), alpha = 0.5, show.legend = FALSE) + labs(x = "Site", y = "Average Normalized Abundance") + ggtitle("Differentially Expressed Peptides Across Sites") + theme_minimal() #Make bubble plot option 1
ggplot(diffExpPeptides) + geom_point(aes(x = site, y = averageNormalizedAbundance, size = averageNormalizedAbundance, colour = factor(peptide)), alpha = 0.8, show.legend = FALSE) + labs(x = "Site", y = "Average Normalized Abundance") + ggtitle("Differentially Expressed Peptides Across Sites") + theme_minimal() #Make bubble plot option 1
ggplot(diffExpPeptides) + geom_point(aes(x = site, y = averageNormalizedAbundance, size = averageNormalizedAbundance, colour = factor(peptide)), alpha = 0.65, show.legend = FALSE) + labs(x = "Site", y = "Average Normalized Abundance") + ggtitle("Differentially Expressed Peptides Across Sites") + theme_minimal() #Make bubble plot option 1
ggplot(diffExpPeptides) + geom_point(aes(x = site, y = peptide, size = averageNormalizedAbundance, colour = factor(peptide)), alpha = 0.65, show.legend = FALSE) + labs(x = "Site", y = "Average Normalized Abundance") + ggtitle("Differentially Expressed Peptides Across Sites") + theme_minimal() #Make bubble plot option 1
ggplot(diffExpPeptides) + geom_point(aes(x = site, y = peptide, size = averageNormalizedAbundance, colour = factor(peptide)), alpha = 0.65, show.legend = FALSE) + labs(x = "Site", y = "Peptide") + ggtitle("Differentially Expressed Peptides Across Sites") + theme_minimal() #Make bubble plot option 2
jpeg("2017-10-10-Troubleshooting/2017-11-05-Integrated-Dataset/2018-02-15-DNR-Paper-Figure/2018-02-26-Bubble-Plot-xSite-yAbundance.jpeg") #Create file
ggplot(diffExpPeptides) + geom_point(aes(x = site, y = averageNormalizedAbundance, size = averageNormalizedAbundance, colour = factor(peptide)), alpha = 0.65, show.legend = FALSE) + labs(x = "Site", y = "Average Normalized Abundance") + ggtitle("Differentially Expressed Peptides Across Sites") + theme_minimal() #Make bubble plot option 1
dev.off() #Turn off plotting device
jpeg("2017-10-10-Troubleshooting/2017-11-05-Integrated-Dataset/2018-02-15-DNR-Paper-Figure/2018-02-26-Bubble-Plot-xSite-yPeptide.jpeg") #Create file
ggplot(diffExpPeptides) + geom_point(aes(x = site, y = peptide, size = averageNormalizedAbundance, colour = factor(peptide)), alpha = 0.65, show.legend = FALSE) + labs(x = "Site", y = "Peptide") + ggtitle("Differentially Expressed Peptides Across Sites") + theme_minimal() #Make bubble plot option 2
dev.off() #Turn off plotting device
jpeg("2017-10-10-Troubleshooting/2017-11-05-Integrated-Dataset/2018-02-15-DNR-Paper-Figure/2018-02-26-Average-Differentially-Expressed-Peptides-Heatmap.jpeg", width = 1000, height = 1000) #Create file
pheatmap(heatmapDataPivoted, cluster_rows = FALSE, cluster_cols = TRUE, clustering_distance_rows = "euclidean", clustering_distance_cols = "euclidean", clustering_method = "average", show_rownames = TRUE, show_colnames = TRUE, legend = TRUE)
dev.off() #Turn off plotting device
jpeg("2017-10-10-Troubleshooting/2017-11-05-Integrated-Dataset/2018-02-15-DNR-Paper-Figure/2018-02-26-All-Average-Peptide-Abundance-Heatmap.jpeg", width = 1000, height = 1000) #Create file
pheatmap(allheatmapDataPivoted, cluster_rows = FALSE, cluster_cols = TRUE, clustering_distance_rows = "euclidean", clustering_distance_cols = "euclidean", clustering_method = "average", show_rownames = TRUE, show_colnames = TRUE, legend = TRUE)
dev.off() #Turn off plotting device
jpeg("2017-10-10-Troubleshooting/2017-11-05-Integrated-Dataset/2018-02-15-DNR-Paper-Figure/2018-02-26-Bubble-Plot-xSite-yAbundance.jpeg", width = 1000, height = 1000) #Create file
ggplot(diffExpPeptides) + geom_point(aes(x = site, y = averageNormalizedAbundance, size = averageNormalizedAbundance, colour = factor(peptide)), alpha = 0.65, show.legend = FALSE) + labs(x = "Site", y = "Average Normalized Abundance") + ggtitle("Differentially Expressed Peptides Across Sites") + theme_minimal() #Make bubble plot option 1
dev.off() #Turn off plotting device
jpeg("2017-10-10-Troubleshooting/2017-11-05-Integrated-Dataset/2018-02-15-DNR-Paper-Figure/2018-02-26-Bubble-Plot-xSite-yPeptide.jpeg", width = 1000, height = 1000) #Create file
ggplot(diffExpPeptides) + geom_point(aes(x = site, y = peptide, size = averageNormalizedAbundance, colour = factor(peptide)), alpha = 0.65, show.legend = FALSE) + labs(x = "Site", y = "Peptide") + ggtitle("Differentially Expressed Peptides Across Sites") + theme_minimal() #Make bubble plot option 2
dev.off() #Turn off plotting device
ggplot(diffExpPeptides) + geom_point(aes(x = site, y = averageNormalizedAbundance, size = averageNormalizedAbundance, colour = factor(peptide)), alpha = 0.65, show.legend = FALSE) + geom_line() + labs(x = "Site", y = "Average Normalized Abundance") + ggtitle("Differentially Expressed Peptides Across Sites") + theme_minimal() #Make bubble plot option 1
ggplot(diffExpPeptides) + geom_point(aes(x = site, y = averageNormalizedAbundance, size = averageNormalizedAbundance, colour = factor(peptide)), alpha = 0.65, show.legend = FALSE) + geom_line(x = site, y = averageNormalizedAbundance) + labs(x = "Site", y = "Average Normalized Abundance") + ggtitle("Differentially Expressed Peptides Across Sites") + theme_minimal() #Make bubble plot option 1
ggplot(diffExpPeptides) + geom_point(aes(x = site, y = averageNormalizedAbundance, size = averageNormalizedAbundance, colour = factor(peptide)), alpha = 0.65, show.legend = FALSE) + geom_line(x = diffExpPeptides$site, y = diffExpPeptides$averageNormalizedAbundance) + labs(x = "Site", y = "Average Normalized Abundance") + ggtitle("Differentially Expressed Peptides Across Sites") + theme_minimal() #Make bubble plot option 1
ggplot(diffExpPeptides) + geom_point(aes(x = site, y = averageNormalizedAbundance, size = averageNormalizedAbundance, colour = factor(peptide)), alpha = 0.65, show.legend = FALSE) + labs(x = "Site", y = "Average Normalized Abundance") + ggtitle("Differentially Expressed Peptides Across Sites") + theme_minimal() #Make bubble plot option 1
ggplot(diffExpPeptides) + geom_point(aes(x = site, y = averageNormalizedAbundance, size = averageNormalizedAbundance, colour = factor(peptide)), alpha = 0.65, show.legend = FALSE) + geom_path()+ labs(x = "Site", y = "Average Normalized Abundance") + ggtitle("Differentially Expressed Peptides Across Sites") + theme_minimal() #Make bubble plot option 1
ggplot(diffExpPeptides) + geom_point(aes(x = site, y = averageNormalizedAbundance, size = averageNormalizedAbundance, colour = factor(peptide)), alpha = 0.65, show.legend = FALSE) + geom_path(x = site, y = averageNormalizedAbundance) + labs(x = "Site", y = "Average Normalized Abundance") + ggtitle("Differentially Expressed Peptides Across Sites") + theme_minimal() #Make bubble plot option 1
ggplot(diffExpPeptides, aes(x = site, y = averageNormalizedAbundance, size = averageNormalizedAbundance, colour = factor(peptide))) + geom_point(alpha = 0.65, show.legend = FALSE) + geom_path(x = site, y = averageNormalizedAbundance) + labs(x = "Site", y = "Average Normalized Abundance") + ggtitle("Differentially Expressed Peptides Across Sites") + theme_minimal() #Make bubble plot option 1
ggplot(diffExpPeptides, aes(x = site, y = averageNormalizedAbundance, size = averageNormalizedAbundance, colour = factor(peptide))) + geom_point(alpha = 0.65, show.legend = FALSE) + geom_line() + labs(x = "Site", y = "Average Normalized Abundance") + ggtitle("Differentially Expressed Peptides Across Sites") + theme_minimal() #Make bubble plot option 1
ggplot(diffExpPeptides, aes(x = site, y = averageNormalizedAbundance, size = averageNormalizedAbundance, colour = factor(peptide))) + geom_point(alpha = 0.65, show.legend = FALSE) + geom_line(data = diffExpPeptides, x = site, y = averageNormalizedAbundance) + labs(x = "Site", y = "Average Normalized Abundance") + ggtitle("Differentially Expressed Peptides Across Sites") + theme_minimal() #Make bubble plot option 1
ggplot(diffExpPeptides, aes(x = site, y = averageNormalizedAbundance, size = averageNormalizedAbundance, colour = factor(peptide))) + geom_point(alpha = 0.65, show.legend = FALSE) + geom_line(data = diffExpPeptides, y = averageNormalizedAbundance) + labs(x = "Site", y = "Average Normalized Abundance") + ggtitle("Differentially Expressed Peptides Across Sites") + theme_minimal() #Make bubble plot option 1
ggplot(diffExpPeptides, aes(x = site, y = averageNormalizedAbundance, size = averageNormalizedAbundance, colour = factor(peptide))) + geom_point(alpha = 0.65, show.legend = FALSE) + labs(x = "Site", y = "Average Normalized Abundance") + ggtitle("Differentially Expressed Peptides Across Sites") + theme_minimal() #Make bubble plot option 1
ggplot(diffExpPeptides, aes(x = site, y = averageNormalizedAbundance, size = averageNormalizedAbundance, colour = factor(peptide)), group = site) + geom_point(alpha = 0.65, show.legend = FALSE) + geom_line()+ labs(x = "Site", y = "Average Normalized Abundance") + ggtitle("Differentially Expressed Peptides Across Sites") + theme_minimal() #Make bubble plot option 1
ggplot(diffExpPeptides, aes(x = site, y = averageNormalizedAbundance, size = averageNormalizedAbundance, colour = factor(peptide)), group = site) + geom_point(alpha = 0.65, show.legend = FALSE) + geom_line(show.legend = FALSE)+ labs(x = "Site", y = "Average Normalized Abundance") + ggtitle("Differentially Expressed Peptides Across Sites") + theme_minimal() #Make bubble plot option 1
ggplot(diffExpPeptides, aes(x = site, y = averageNormalizedAbundance, colour = factor(peptide)), group = site) + geom_point(alpha = 0.65, show.legend = FALSE) + geom_line(show.legend = FALSE)+ labs(x = "Site", y = "Average Normalized Abundance") + ggtitle("Differentially Expressed Peptides Across Sites") + theme_minimal() #Make bubble plot option 1
ggplot(diffExpPeptides, aes(x = site, y = averageNormalizedAbundance, colour = factor(peptide)), group = site) + geom_point(size = averageNormalizedAbundance, alpha = 0.65, show.legend = FALSE) + geom_line(show.legend = FALSE)+ labs(x = "Site", y = "Average Normalized Abundance") + ggtitle("Differentially Expressed Peptides Across Sites") + theme_minimal() #Make bubble plot option 1
+ ggtitle("Differentially Expressed Peptides Across Sites")
+ theme_minimal() #Make bubble plot option 1
ggplot(diffExpPeptides, aes(x = site, y = averageNormalizedAbundance, colour = factor(peptide)), group = site) + geom_point(size = averageNormalizedAbundance, alpha = 0.65, show.legend = FALSE)
ggplot(diffExpPeptides, aes(x = site, y = averageNormalizedAbundance, colour = factor(peptide)), group = site) + geom_point(size = averageNormalizedAbundance, alpha = 0.65, show.legend = FALSE) + geom_line(show.legend = FALSE)+ labs(x = "Site", y = "Average Normalized Abundance") + ggtitle("Differentially Expressed Peptides Across Sites") + theme_minimal() #Make bubble plot option 1
ggplot(diffExpPeptides, aes(x = site, y = averageNormalizedAbundance, colour = factor(peptide)), group = site) + geom_point(size = averageNormalizedAbundance, alpha = 0.65, show.legend = FALSE) + geom_line(show.legend = FALSE)+ labs(x = "Site", y = "Average Normalized Abundance") + ggtitle("Differentially Expressed Peptides Across Sites") + theme_minimal() #Make bubble plot option 1
ggplot(diffExpPeptides)
ggplot(diffExpPeptides) + geom_point(aes(x = site, y = peptide, size = averageNormalizedAbundance, colour = factor(peptide)), alpha = 0.65, show.legend = FALSE)
ggplot(diffExpPeptides) + geom_point(aes(x = site, y = peptide, size = averageNormalizedAbundance, colour = factor(peptide)), alpha = 0.65, show.legend = FALSE) + geom_step()
ggplot(diffExpPeptides) + geom_point(aes(x = site, y = peptide, size = averageNormalizedAbundance, colour = factor(peptide)), alpha = 0.65, show.legend = FALSE) + geom_step(aes(x = site, y = peptide))
ggplot(diffExpPeptides) + geom_point(aes(x = site, y = peptide, size = averageNormalizedAbundance, colour = factor(peptide)), alpha = 0.65, show.legend = FALSE) + geom_line(aes(x = site, y = peptide))
ggplot(diffExpPeptides, aes(x = site, y = peptide, colour = factor(peptide)), show.legend = FALSE) + geom_point(aes(size = averageNormalizedAbundance), alpha = 0.65))
ggplot(diffExpPeptides, aes(x = site, y = peptide, colour = factor(peptide)), show.legend = FALSE) + geom_point(aes(size = averageNormalizedAbundance), alpha = 0.65)
ggplot(diffExpPeptides, aes(x = site, y = peptide, colour = factor(peptide))) + geom_point(aes(size = averageNormalizedAbundance), alpha = 0.65)
ggplot(diffExpPeptides, aes(x = site, y = peptide, colour = factor(peptide))) + geom_point(aes(x = site, y = peptide, size = averageNormalizedAbundance), alpha = 0.65)
ggplot(diffExpPeptides, aes(colour = factor(peptide))) + geom_point(aes(x = site, y = peptide, size = averageNormalizedAbundance), alpha = 0.65)
ggplot(diffExpPeptides, aes(colour = factor(peptide))) + geom_point(aes(x = site, y = peptide, size = averageNormalizedAbundance), alpha = 0.65, width = 0.2)
ggplot(diffExpPeptides) + geom_point(aes(x = site, y = peptide, size = averageNormalizedAbundance), alpha = 0.65)
ggplot(diffExpPeptides) + geom_point(aes(x = site, y = peptide, size = averageNormalizedAbundance, colour = factor(peptide)), alpha = 0.65)
ggplot(diffExpPeptides) + geom_point(aes(x = site, y = peptide, size = averageNormalizedAbundance, colour = factor(peptide)), alpha = 0.65, show.legend = FALSE)
ggplot(diffExpPeptides) + geom_point(aes(x = site, y = averageNormalizedAbundance, size = averageNormalizedAbundance, colour = factor(peptide)), alpha = 0.65, show.legend = FALSE) + geom_path(x = site, y = averageNormalizedAbundance) + labs(x = "Site", y = "Average Normalized Abundance") + ggtitle("Differentially Expressed Peptides Across Sites") + theme_minimal() #Make bubble plot option 1
ggplot(diffExpPeptides) + geom_point(aes(x = site, y = averageNormalizedAbundance, size = averageNormalizedAbundance, colour = factor(peptide)), alpha = 0.65, show.legend = FALSE)
ggplot(diffExpPeptides, aes(x = site, y = averageNormalizedAbundance, colour = factor(peptide))) + geom_point(aes(size = averageNormalizedAbundance), alpha = 0.65, show.legend = FALSE)
ggplot(diffExpPeptides, aes(x = site, y = averageNormalizedAbundance, colour = factor(peptide))) + geom_point(aes(size = averageNormalizedAbundance), alpha = 0.65, show.legend = FALSE) + geom_line()
ggplot(diffExpPeptides, aes(x = site, y = averageNormalizedAbundance, colour = factor(peptide))) + geom_point(aes(size = averageNormalizedAbundance), alpha = 0.65, show.legend = FALSE) + geom_path()
ggplot(diffExpPeptides, aes(x = site, y = averageNormalizedAbundance, colour = factor(peptide)), group = peptide) + geom_point(aes(size = averageNormalizedAbundance), alpha = 0.65, show.legend = FALSE) + geom_line()
ggplot(diffExpPeptides, aes(x = site, y = averageNormalizedAbundance, colour = factor(peptide)), group = peptide) + geom_point(aes(size = averageNormalizedAbundance), alpha = 0.65, show.legend = FALSE) + geom_line(show.legend = FALSE)
ggplot(diffExpPeptides) + geom_line(aes(x = site, y = averageNormalizedAbundance, colour = factor(peptide)))
ggplot(diffExpPeptides) + geom_line(aes(y = averageNormalizedAbundance, colour = factor(peptide)))
ggplot(diffExpPeptides) + geom_line(aes(x = site, y = averageNormalizedAbundance, colour = factor(peptide)))
ggplot(diffExpPeptides) + geom_line(aes(x = peptide, y = averageNormalizedAbundance, colour = factor(peptide)))
ggplot(diffExpPeptides) + geom_path(aes(x = site, y = averageNormalizedAbundance, colour = factor(peptide)))
ggplot(diffExpPeptides, aes(x = site, y = averageNormalizedAbundance, colour = factor(peptide)), group = peptide) + geom_point(aes(size = averageNormalizedAbundance), alpha = 0.65, show.legend = FALSE) + geom_path(show.legend = FALSE)
ggplot(diffExpPeptides, aes(x = site, y = averageNormalizedAbundance, colour = factor(peptide)), group = peptide) + geom_point(aes(size = averageNormalizedAbundance), alpha = 0.65, show.legend = FALSE) + geom_path(show.legend = FALSE)
ggplot(diffExpPeptides, aes(x = site, y = averageNormalizedAbundance, colour = factor(peptide)), group = site) + geom_point(aes(size = averageNormalizedAbundance), alpha = 0.65, show.legend = FALSE) + geom_path(show.legend = FALSE)
ggplot(diffExpPeptides, aes(x = site, y = averageNormalizedAbundance, colour = factor(peptide))) + geom_point(aes(size = averageNormalizedAbundance), alpha = 0.65, show.legend = FALSE) + geom_path(show.legend = FALSE)
ggplot(diffExpPeptides, aes(x = site, y = averageNormalizedAbundance, colour = factor(peptide)), group = site) + geom_point(aes(size = averageNormalizedAbundance), alpha = 0.65, show.legend = FALSE) + geom_step(show.legend = FALSE)
ggplot(diffExpPeptides) + geom_point(aes(x = site, y = peptide, size = averageNormalizedAbundance, colour = factor(peptide)), alpha = 0.65, show.legend = FALSE) + labs(x = "Site", y = "Peptide") + ggtitle("Differentially Expressed Peptides Across Sites") + theme_minimal() #Make bubble plot option 2
ggplot(diffExpPeptides) + geom_point(aes(x = site, y = averageNormalizedAbundance, size = averageNormalizedAbundance, colour = factor(peptide)), alpha = 0.65, show.legend = FALSE) + geom_path(x = site, y = averageNormalizedAbundance) + labs(x = "Site", y = "Average Normalized Abundance") + ggtitle("Differentially Expressed Peptides Across Sites") + theme_minimal() #Make bubble plot option 1
ggplot(diffExpPeptides) + geom_point(aes(x = site, y = averageNormalizedAbundance, size = averageNormalizedAbundance, colour = factor(peptide)), alpha = 0.65, show.legend = FALSE) + geom_path(x = site, y = averageNormalizedAbundance) + labs(x = "Site", y = "Average Normalized Abundance") + ggtitle("Differentially Expressed Peptides Across Sites") + theme_minimal() #Make bubble plot option 1
ggplot(diffExpPeptides) + geom_point(aes(x = site, y = peptide, size = averageNormalizedAbundance, colour = factor(peptide)), alpha = 0.65, show.legend = FALSE) + labs(x = "Site", y = "Peptide") + ggtitle("Differentially Expressed Peptides Across Sites") + theme_minimal() #Make bubble plot option 2. Could try and scale by smallest observation...?
ggplot(diffExpPeptides) + geom_point(aes(x = site, y = averageNormalizedAbundance, size = averageNormalizedAbundance, colour = factor(peptide)), alpha = 0.65, show.legend = FALSE) + labs(x = "Site", y = "Average Normalized Abundance") + ggtitle("Differentially Expressed Peptides Across Sites") + theme_minimal() #Make bubble plot option 1
install.packages("ggbeeswarm") #Install package
library(ggbeeswarm) #Load package
ggplot(diffExpPeptides, aes(x = site, y = averageNormalizedAbundance)) + geom_jitter()
ggplot(diffExpPeptides, aes(x = site, y = averageNormalizedAbundance)) + geom_quasirandom()
ggplot(diffExpPeptides, aes(x = site, y = averageNormalizedAbundance)) + geom_beeswarm()
ggplot(diffExpPeptides, aes(x = site, y = averageNormalizedAbundance)) + geom_quasirandom()
ggplot(averagePeptideData, aes(x = site, y = averageNormalizedAbundance)) + geom_quasirandom()
ggplot(averagePeptideData, aes(x = site, y = averageNormalizedAbundance)) + geom_beeswarm()
diffExpPeptides
ggplot(diffExpPeptides, aes(x = site, y = averageNormalizedAbundance)) + geom_quasirandom()
ggplot(diffExpPeptides, aes(x = site, y = bubbleSize)) + geom_quasirandom()
ggplot(diffExpPeptides, aes(x = site, y = averageNormalizedAbundance)) + geom_quasirandom()
ggplot(diffExpPeptides, aes(x = site, y = averageNormalizedAbundance)) + geom_quasirandom(varwidth = TRUE)
ggplot(diffExpPeptides, aes(x = site, y = averageNormalizedAbundance, colour = factor(peptide))) + geom_quasirandom()
ggplot(diffExpPeptides, aes(x = site, y = averageNormalizedAbundance, colour = factor(peptide), size = 5)) + geom_quasirandom()
ggplot(diffExpPeptides, aes(x = site, y = averageNormalizedAbundance, colour = factor(peptide), size = 3)) + geom_quasirandom()
ggplot(diffExpPeptides, aes(x = site, y = averageNormalizedAbundance, colour = factor(peptide), size = 3, show.legend = FALSE)) + geom_quasirandom()
ggplot(diffExpPeptides, aes(x = site, y = averageNormalizedAbundance, colour = factor(peptide), size = 3, show.legend = FALSE)) + geom_quasirandom(show.legend = FALSE)
ggplot(diffExpPeptides, aes(x = site, y = peptide, colour = factor(peptide), size = 3, show.legend = FALSE)) + geom_quasirandom(show.legend = FALSE)
ggplot(diffExpPeptides, aes(x = site, y = averageNormalizedAbundance, colour = factor(peptide), size = 3, show.legend = FALSE)) + geom_quasirandom(show.legend = FALSE)
ggplot(diffExpPeptides, aes(x = site, y = averageNormalizedAbundance, colour = factor(peptide), size = 3, show.legend = FALSE)) + geom_quasirandom(show.legend = FALSE) + labs(x = "Site", y = "Average Normalized Abundance") + ggtitle("Differentially Expressed Peptides Across Sites") + theme_minimal()
ggplot(diffExpPeptides, aes(x = site, y = averageNormalizedAbundance, colour = factor(peptide), size = 3, show.legend = FALSE)) + geom_beeswarm(show.legend = FALSE) + labs(x = "Site", y = "Average Normalized Abundance") + ggtitle("Differentially Expressed Peptides Across Sites") + theme_minimal()
ggplot(diffExpPeptides, aes(x = site, y = averageNormalizedAbundance, colour = factor(peptide), size = 3, show.legend = FALSE)) + geom_quasirandom(show.legend = FALSE) + labs(x = "Site", y = "Average Normalized Abundance") + ggtitle("Differentially Expressed Peptides Across Sites") + theme_minimal()
jpeg("2017-10-10-Troubleshooting/2017-11-05-Integrated-Dataset/2018-02-15-DNR-Paper-Figure/2018-02-26-Beeswarm-Plot-xSite-yAbundance.jpeg", width = 1000, height = 1000) #Create file
ggplot(diffExpPeptides, aes(x = site, y = averageNormalizedAbundance, colour = factor(peptide), size = 3, show.legend = FALSE)) + geom_quasirandom(show.legend = FALSE) + labs(x = "Site", y = "Average Normalized Abundance") + ggtitle("Differentially Expressed Peptides Across Sites") + theme_minimal()
dev.off() #Turn off plotting device
ggplot(diffExpPeptides, aes(x = site, y = averageNormalizedAbundance, colour = factor(peptide), size = 3, show.legend = FALSE)) + geom_quasirandom(show.legend = FALSE, cex = 2) + labs(x = "Site", y = "Average Normalized Abundance") + ggtitle("Differentially Expressed Peptides Across Sites") + theme_minimal()
ggplot(diffExpPeptides, aes(x = site, y = averageNormalizedAbundance, colour = factor(peptide), size = 2, show.legend = FALSE)) + geom_quasirandom(show.legend = FALSE) + labs(x = "Site", y = "Average Normalized Abundance") + ggtitle("Differentially Expressed Peptides Across Sites") + theme_minimal()
jpeg("2017-10-10-Troubleshooting/2017-11-05-Integrated-Dataset/2018-02-15-DNR-Paper-Figure/2018-02-26-Beeswarm-Plot-xSite-yAbundance.jpeg", width = 1000, height = 1000) #Create file
ggplot(diffExpPeptides, aes(x = site, y = averageNormalizedAbundance, colour = factor(peptide), size = 2, show.legend = FALSE)) + geom_quasirandom(show.legend = FALSE) + labs(x = "Site", y = "Average Normalized Abundance") + ggtitle("Differentially Expressed Peptides Across Sites") + theme_minimal()
dev.off() #Turn off plotting device
pheatmap(heatmapDataPivoted, cluster_rows = FALSE, cluster_cols = TRUE, clustering_distance_rows = "euclidean", clustering_distance_cols = "euclidean", clustering_method = "average", show_rownames = TRUE, show_colnames = TRUE, legend = TRUE)
?volcanoPlot
??volcanoPlot
