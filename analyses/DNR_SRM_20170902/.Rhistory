colnames(salinityData) #Get column names
salinityData <- salinityData[,c(1:2, seq(from = 3, to = 20, by = 2))] #Subset only the salinity information
head(salinityData) #Confirm subset
colnames(salinityData) <- c("Date", "Time", "CIB", "CIE", "FBB", "FBE", "PGE", "SKE", "SKB", "WBB", "WBE") #Rename columns
head(salinityData) #Confirm import
salinityData$Date <- as.Date(salinityData$Date, format = "%d/%m/%Y") #Convert entries to dates
salinityData$DateTime <- paste(salinityData$Date, salinityData$Time) #Create new DateTime column to easily merge tide and environmental data
head(salinityData)
pHDOData <- read.csv("../../data/DNR/2017-11-14-Environmental-Data-from-Micah.csv", header = TRUE, na.strings = "NA") #Import file with pH and DO data
head(pHDOData) #Confirm import
colnames(pHDOData) #View column names
pHData <- pHDOData[,c(2:3, 5, 7, 8, 10, 12)] #Subset only the bare site pH data. Do not include DateTime column, since the formatting is off
head(pHData) #Confirm subset
colnames(pHData) <- c("Date", "Time", "WBB-pH", "SKB-pH", "PGB-pH", "CIB-pH", "FBB-pH") #Rename columns
pHData$Date <- as.Date(pHData$Date, format = "%m/%d/%y") #Convert entries to dates
pHData$DateTime <- paste(pHData$Date, pHData$Time) #Create new DateTime column to easily merge tide and environmental data
head(pHData) #Confirm changes
DOData <- pHDOData[,c(2:3, 23, 25, 27, 29, 31)] #Subset only the bare site DO data
head(DOData) #Confirm subset
colnames(DOData) <- c("Date", "Time", "WBB-DO", "SKB-DO", "PGB-DO", "CIB-DO", "FBB-DO") #Rename columns
DOData$Date <- as.Date(DOData$Date, format = "%m/%d/%y") #Convert entries to dates
DOData$DateTime <- paste(DOData$Date, DOData$Time) #Create new DateTime column to easily merge tide and environmental data
head(DOData) #Confirm changes
head(DOData) #Confirm changes
head(pHData) #Confirm changes
head(salinityData)
colnames(salinityData) #Get column names
salinityData <- read.csv("../../data/DNR/2017-11-25-Calculated-Salinity-Output-from-Micah.csv", header = TRUE, na.strings = "NA") #Import salinity data
head(salinityData) #Confirm import
colnames(salinityData) #Get column names
salinityData <- salinityData[,c(1:2, seq(from = 3, to = 20, by = 4))] #Subset only the salinity information
head(salinityData) #Confirm subset
salinityData <- read.csv("../../data/DNR/2017-11-25-Calculated-Salinity-Output-from-Micah.csv", header = TRUE, na.strings = "NA") #Import salinity data
head(salinityData) #Confirm import
colnames(salinityData) #Get column names
salinityData <- salinityData[,c(1:2, 3, 7, 11, 15, 18)] #Subset only the salinity information from bare outplants. Needed to use PGE instead of PGB since PGB has no salinity data.
head(salinityData) #Confirm subset
colnames(salinityData) <- c("Date", "Time", "CIB-Salinity", "FBB-Salinity", "PGE-Salinity", "SKB-Salinity", "WBB-Salinity") #Rename columns
salinityData$Date <- as.Date(salinityData$Date, format = "%d/%m/%Y") #Convert entries to dates
salinityData$DateTime <- paste(salinityData$Date, salinityData$Time) #Create new DateTime column to easily merge tide and environmental data
head(salinityData)
pHTideData <- merge(x = pHData, y = tideData, by = DateTime)
pHTideData <- merge(x = pHData, y = tideData, by = "DateTime")
View(pHTideData)
View(tideData)
View(salinityData)
View(pHDOData)
View(pHData)
View(DOData)
tideData <- read.csv("../../data/DNR/2017-12-13-Tidal-Data-by-Site.csv", header = TRUE) #Import the tide data
head(tideData) #Confirm import
tideData <- tideData[1:(length(tideData) - 2)] #Remove last two blank columns
tideData$Date <- as.Date(tideData$Date, format = "%m/%d/%y") #Convert entries to dates
tideData$DateTime <- paste(tideData$Date, tideData$Time) #Create new DateTime column to easily merge tide and environmental data
head(tideData) #Confirm changes
pHTideData <- merge(x = pHData, y = tideData, by = "DateTime") #Merge pH and tide data
View(pHData)
head(pHTideData) #Confirm merge
colnames(pHTideData) #Get column names
head(tideData) #Confirm changes
tideData <- read.csv("../../data/DNR/2017-12-13-Tidal-Data-by-Site.csv", header = TRUE) #Import the tide data
head(tideData) #Confirm import
tideData$Date <- as.Date(tideData$Date, format = "%m/%d/%y") #Convert entries to dates
tideData$DateTime <- paste(tideData$Date, tideData$Time) #Create new DateTime column to easily merge tide and environmental data
head(tideData) #Confirm changes
pHTideData <- merge(x = pHData, y = tideData, by = "DateTime") #Merge pH and tide data
head(pHTideData) #Confirm merge
colnames(pHTideData) #Get column names
pHTideData <- pHTideData[, c(-9:10)] #Remove redundant date and time columns
pHTideData <- pHTideData[, -c(9:10)] #Remove redundant date and time columns
colnames(pHTideData) #Get column names
colnames(pHTideData$Date.x) <- "Date" #Get column names
colnames(pHTideData[, 2:3]) <- c("Date", "Time") #Get column names
head(pHTideData) #Confirm changes
head(tideData) #Confirm import
head(tideData) #Confirm changes
head(pHTideData) #Confirm changes
colnames(pHTideData) <- c("DateTime", "Date", "Time", "WBB-pH", "SKB-pH", "PGB-pH", "CIB-pH", "FBB-pH", "CI-Tide", "FB-Tide", "PG-Tide", "SK-Tide", "WB-Tide") #Change column names
head(pHTideData) #Confirm changes
DOTideData <- merge(x = DOData, y = tideData, by = "DateTime") #Merge DO and tide data
head(DOTideData) #Confirm merge
colnames(DOTideData) #Get column names
DOTideData <- DOTideData[, -c(9:10)] #Remove redundant date and time columns
colnames(DOTideData) <- c("DateTime", "Date", "Time", "WBB-DO", "SKB-DO", "PGB-DO", "CIB-DO", "FBB-DO", "CI-Tide", "FB-Tide", "PG-Tide", "SK-Tide", "WB-Tide") #Change column names
head(DOTideData) #Confirm changes
salinityTideData <- merge(x = salinityDataData, y = tideData, by = "DateTime") #Merge DO and tide data
salinityTideData <- merge(x = salinityData, y = tideData, by = "DateTime") #Merge DO and tide data
head(salinityTideData) #Confirm merge
salinityTideData <- merge(x = salinityData, y = tideData, by = "DateTime") #Merge DO and tide data
head(salinityTideData) #Confirm merge
salinityData <- read.csv("../../data/DNR/2017-11-25-Calculated-Salinity-Output-from-Micah.csv", header = TRUE, na.strings = "NA") #Import salinity data
head(salinityData) #Confirm import
colnames(salinityData) #Get column names
salinityData <- salinityData[,c(1:2, 3, 7, 11, 15, 18)] #Subset only the salinity information from bare outplants. Needed to use PGE instead of PGB since PGB has no salinity data.
head(salinityData) #Confirm subset
colnames(salinityData) <- c("Date", "Time", "CIB-Salinity", "FBB-Salinity", "PGE-Salinity", "SKB-Salinity", "WBB-Salinity") #Rename columns
salinityData$Date <- as.Date(salinityData$Date, format = "%d/%m/%Y") #Convert entries to dates
salinityData$DateTime <- paste(salinityData$Date, salinityData$Time) #Create new DateTime column to easily merge tide and environmental data
head(salinityData)
salinityTideData <- merge(x = salinityData, y = tideData, by = "DateTime") #Merge DO and tide data
head(salinityTideData) #Confirm merge
View(salinityTideData)
head(tideData) #Confirm changes
merge(x = salinityData, y = tideData, by = "DateTime")
View(salinityData)
View(tideData)
tideData <- read.csv("../../data/DNR/2017-12-13-Tidal-Data-by-Site.csv", header = TRUE) #Import the tide data
head(tideData) #Confirm import
tideData$Date <- as.Date(tideData$Date, format = "%m/%d/%y") #Convert entries to dates
tideData$DateTime <- paste(tideData$Date, tideData$Time) #Create new DateTime column to easily merge tide and environmental data
colnames(tideData) <- c("Date", "Time", "CI-Tide", "FB-Tide", "PG-Tide", "SK-Tide", "WB-Tide", "DateTime")
head(tideData) #Confirm changes
tideData$DateTime <- paste(tideData$Date, " ", tideData$Time) #Create new DateTime column to easily merge tide and environmental data
colnames(tideData) <- c("Date", "Time", "CI-Tide", "FB-Tide", "PG-Tide", "SK-Tide", "WB-Tide", "DateTime")
head(tideData) #Confirm changes
tideData$DateTime <- paste(tideData$Date, "", tideData$Time) #Create new DateTime column to easily merge tide and environmental data
colnames(tideData) <- c("Date", "Time", "CI-Tide", "FB-Tide", "PG-Tide", "SK-Tide", "WB-Tide", "DateTime")
head(tideData) #Confirm changes
merge(x = salinityData, y = tideData, by = "DateTime")
salinityTideData <- merge(x = salinityData, y = tideData, by = "DateTime")
head(salinityData)
salinityTideData <- merge(x = salinityData, y = tideData, by = "Time")
head(salinityData)
salinityTideData
tideData$DateTime <- paste(tideData$Date, tideData$Time) #Create new DateTime column to easily merge tide and environmental data
colnames(tideData) <- c("Date", "Time", "CI-Tide", "FB-Tide", "PG-Tide", "SK-Tide", "WB-Tide", "DateTime")
head(tideData) #Confirm changes
head(DOData) #Confirm changes
salinityData <- read.csv("../../data/DNR/2017-11-25-Calculated-Salinity-Output-from-Micah.csv", header = TRUE, na.strings = "NA") #Import salinity data
head(salinityData) #Confirm import
colnames(salinityData) #Get column names
salinityData <- salinityData[,c(1:2, 3, 7, 11, 15, 18)] #Subset only the salinity information from bare outplants. Needed to use PGE instead of PGB since PGB has no salinity data.
head(salinityData) #Confirm subset
colnames(salinityData) <- c("Date", "Time", "CIB-Salinity", "FBB-Salinity", "PGE-Salinity", "SKB-Salinity", "WBB-Salinity") #Rename columns
salinityData$Date <- as.Date(salinityData$Date, format = "%d/%m/%Y") #Convert entries to dates
head(salinityData)
salinityData$DateTime <- paste(salinityData$Date, salinityData$Time) #Create new DateTime column to easily merge tide and environmental data
head(salinityData)
salinityData <- read.csv("../../data/DNR/2017-11-25-Calculated-Salinity-Output-from-Micah.csv", header = TRUE, na.strings = "NA") #Import salinity data
head(salinityData) #Confirm import
colnames(salinityData) #Get column names
salinityData <- salinityData[,c(1:2, 3, 7, 11, 15, 18)] #Subset only the salinity information from bare outplants. Needed to use PGE instead of PGB since PGB has no salinity data.
head(salinityData) #Confirm subset
colnames(salinityData) <- c("Date", "Time", "CIB-Salinity", "FBB-Salinity", "PGE-Salinity", "SKB-Salinity", "WBB-Salinity") #Rename columns
salinityData$Date <- as.Date(salinityData$Date, format = "%d/%m/%Y") #Convert entries to dates
salinityData$DateTime <- paste(salinityData$Date, salinityData$Time) #Create new DateTime column to easily merge tide and environmental data
head(salinityData)
salinityTideData <- merge(x = salinityData, y = tideData, by = "DateTime") #Merge salinity and tide data
head(salinityTideData) #Confirm merge
colnames(salinityTideData) #Get column names
salinityTideData <- salinityTideData[, -c(9:10)] #Remove redundant date and time columns
colnames(salinityTideData) <- c("DateTime", "Date", "Time", "CIB-Salinity", "FBB-Salinity", "PGE-Salinity", "SKB-Salinity", "WBB-Salinity", "CI-Tide", "FB-Tide", "PG-Tide", "SK-Tide", "WB-Tide") #Change column names
head(salinityTideData) #Confirm changes
head(pHTideData)
pHTideData$`WBB-pH` <= 1
pHTideData$`WB-Tide` <= 1
pHTideData$`WBB-pH`[pHTideData$`WB-Tide` <= 1]
pHTideData$`WBB-pH`[pHTideData$`WB-Tide` <= 1]
head(pHTideData)
pHTideData[pHTideData$`WB-Tide` <= 1, 4]
length(pHTideData$`WB-Tide` <= 1)
count(pHTideData$`WB-Tide` <= 1)
sum(pHTideData$`WB-Tide` <= 1)
"N/A" <- pHTideData$`WBB-pH`[pHTideData$`WB-Tide` <= 1]
View(pHTideData)
pHTideData$`WBB-pH`[pHTideData$`WB-Tide` <= 1] <- "NA"
View(pHTideData)
pHTideData$`CIB-pH`[pHTideData$`CI-Tide` <= 1] <- "NA" #Replace CIB-pH values with "NA" when tide is less than 1
pHTideData$`FBB-pH`[pHTideData$`FB-Tide` <= 1] <- "NA" #Replace FBB-pH values with "NA" when tide is less than 1
pHTideData$`PGB-pH`[pHTideData$`PG-Tide` <= 1] <- "NA" #Replace PGB-pH values with "NA" when tide is less than 1
pHTideData$`SKB-pH`[pHTideData$`SK-Tide` <= 1] <- "NA" #Replace SKB-pH values with "NA" when tide is less than 1
head(pHTideData) #Confirm changes
View(pHTideData)
pHTideData$`CIB-DO`[pHTideData$`CI-Tide` <= 1] <- "NA" #Replace CIB-DO values with "NA" when tide is less than 1
pHTideData <- merge(x = pHData, y = tideData, by = "DateTime") #Merge pH and tide data
head(pHTideData) #Confirm merge
colnames(pHTideData) #Get column names
pHTideData <- pHTideData[, -c(9:10)] #Remove redundant date and time columns
colnames(pHTideData) <- c("DateTime", "Date", "Time", "WBB-pH", "SKB-pH", "PGB-pH", "CIB-pH", "FBB-pH", "CI-Tide", "FB-Tide", "PG-Tide", "SK-Tide", "WB-Tide") #Change column names
head(pHTideData) #Confirm changes
pHTideData$`CIB-pH`[pHTideData$`CI-Tide` <= 1] <- "NA" #Replace CIB-pH values with "NA" when tide is less than 1
pHTideData$`FBB-pH`[pHTideData$`FB-Tide` <= 1] <- "NA" #Replace FBB-pH values with "NA" when tide is less than 1
pHTideData$`PGB-pH`[pHTideData$`PG-Tide` <= 1] <- "NA" #Replace PGB-pH values with "NA" when tide is less than 1
pHTideData$`SKB-pH`[pHTideData$`SK-Tide` <= 1] <- "NA" #Replace SKB-pH values with "NA" when tide is less than 1
pHTideData$`WBB-pH`[pHTideData$`WB-Tide` <= 1] <- "NA" #Replace WBB-pH values with "NA" when tide is less than
DOTideData$`CIB-DO`[pHTideData$`CI-Tide` <= 1] <- "NA" #Replace CIB-DO values with "NA" when tide is less than 1
DOTideData$`CIB-DO`[DOTideData$`CI-Tide` <= 1] <- "NA" #Replace CIB-DO values with "NA" when tide is less than 1
DOTideData$`FBB-DO`[DOTideData$`FB-Tide` <= 1] <- "NA" #Replace FBB-DO values with "NA" when tide is less than 1
DOTideData$`PGB-DO`[DOTideData$`PG-Tide` <= 1] <- "NA" #Replace PGB-DO values with "NA" when tide is less than 1
DOTideData$`SKB-DO`[DOTideData$`SK-Tide` <= 1] <- "NA" #Replace SKB-DO values with "NA" when tide is less than 1
DOTideData$`WBB-DO`[DOTideData$`WB-Tide` <= 1] <- "NA" #Replace WBB-DO values with "NA" when tide is less than 1
View(DOTideData)
head(DOTideData)
min(DOTideData[,4:8])
as.numeric(pHTideData[, 4:8])
as.numeric(pHTideData[, 4])
as.numeric(pHTideData[, 4:8])
pHTideData$`WBB-pH`<- as.numeric(pHTideData$`WBB-pH`)
is.numeric(pHTideData$`WBB-pH`)
pHTideData$`CIB-pH`<- as.numeric(pHTideData$`CIB-pH`)
pHTideData$`FBB-pH`<- as.numeric(pHTideData$`FBB-pH`)
pHTideData$`PGB-pH`<- as.numeric(pHTideData$`PGB-pH`)
pHTideData$`SKB-pH`<- as.numeric(pHTideData$`SKB-pH`)
pHTideData$`WBB-pH`<- as.numeric(pHTideData$`WBB-pH`)
DOTideData$`CIB-DO` <- as.numeric(DOTideData$`CIB-DO`)
DOTideData$`FBB-DO` <- as.numeric(DOTideData$`FBB-DO`)
DOTideData$`PGB-DO` <- as.numeric(DOTideData$`PGB-DO`)
DOTideData$`SKB-DO` <- as.numeric(DOTideData$`SKB-DO`)
DOTideData$`WBB-DO` <- as.numeric(DOTideData$`WBB-DO`)
min(DOTideData[,4:8])
min(DOTideData[,4:8], na.omit = TRUE)
min(DOTideData[,4:8], na.rm = TRUE)
max(DOTideData[,4:8], na.rm = TRUE)
salinityTideData$`CIB-Salinity`[salinityTideData$`CIB-Salinity` <= 1] <- "NA" #Replace CIB-Salinity values with "NA" when tide is less than 1
salinityTideData$`FBB-Salinity`[salinityTideData$`FB-Salinity` <= 1] <- "NA" #Replace FBB-Salinity values with "NA" when tide is less than 1
salinityTideData$`PGB-Salinity`[salinityTideData$`PG-Salinity` <= 1] <- "NA" #Replace PGB-Salinity values with "NA" when tide is less than 1
salinityTideData$`PGE-Salinity`[salinityTideData$`PG-Salinity` <= 1] <- "NA" #Replace PGB-Salinity values with "NA" when tide is less than 1
salinityTideData$`SKB-Salinity`[salinityTideData$`SK-Salinity` <= 1] <- "NA" #Replace SKB-Salinity values with "NA" when tide is less than 1
salinityTideData$`WBB-Salinity`[salinityTideData$`WB-Salinity` <= 1] <- "NA" #Replace WBB-Salinity values with "NA" when tide is less than 1
salinityTideData$`CIB-Salinity` <- as.numeric(salinityTideData$`CIB-Salinity`)
salinityTideData$`FBB-Salinity` <- as.numeric(salinityTideData$`FBB-Salinity`)
salinityTideData$`PGE-Salinity` <- as.numeric(salinityTideData$`PGE-Salinity`)
salinityTideData$`SKB-Salinity` <- as.numeric(salinityTideData$`SKB-Salinity`)
salinityTideData$`WBB-Salinity` <- as.numeric(salinityTideData$`WBB-Salinity`)
min(pHTideData[, 4:8])
min(pHTideData[, 4:8], na.rm = TRUE)
max(pHTideData[, 4:8], na.rm = TRUE)
var(pHTideData[, 4:8], na.rm = TRUE)
quartiles(pHTideData[, 4:8], na.rm = TRUE)
quartile(pHTideData[, 4:8], na.rm = TRUE)
quantiles(pHTideData[, 4:8], na.rm = TRUE)
quantile(pHTideData[, 4:8], na.rm = TRUE)
quantile(pHTideData[, 4:8], na.rm = TRUE)[2]
pHIQR <- quantile(pHTideData[, 4:8], na.rm = TRUE)[4] - quantile(pHTideData[, 4:8], na.rm = TRUE)[2] #Calculate IQR for pH values
quantile(pHTideData$`WBB-pH`, na.rm = TRUE)[4] - quantile(pHTideData$`WBB-pH`, na.rm = TRUE)[2]
quantile(pHTideData$`WBB-pH`, na.rm = TRUE)[4]
quantile(pHTideData$`WBB-pH`, na.rm = TRUE)[2]
1.5*(quantile(pHTideData$`WBB-pH`, na.rm = TRUE)[4] - quantile(pHTideData$`WBB-pH`, na.rm = TRUE)[2])
(quantile(pHTideData$`WBB-pH`, na.rm = TRUE)[4]) + (1.5*(quantile(pHTideData$`WBB-pH`, na.rm = TRUE)[4] - quantile(pHTideData$`WBB-pH`, na.rm = TRUE)[2]))
(quantile(pHTideData$`WBB-pH`, na.rm = TRUE)[2]) - (1.5*(quantile(pHTideData$`WBB-pH`, na.rm = TRUE)[4] - quantile(pHTideData$`WBB-pH`, na.rm = TRUE)[2]))
maxValue <- (quantile(pHTideData$`WBB-pH`, na.rm = TRUE)[4]) + (1.5*(quantile(pHTideData$`WBB-pH`, na.rm = TRUE)[4] - quantile(pHTideData$`WBB-pH`, na.rm = TRUE)[2]))
minValue <- (quantile(pHTideData$`WBB-pH`, na.rm = TRUE)[2]) - (1.5*(quantile(pHTideData$`WBB-pH`, na.rm = TRUE)[4] - quantile(pHTideData$`WBB-pH`, na.rm = TRUE)[2]))
minValue
pHTideData$`WBB-pH`[pHTideData$`WBB-pH` < minValue] <- "NA"
pHTideData$`WBB-pH`[pHTideData$`WBB-pH` > maxValue] <- "NA"
View(pHTideData)
max(pHTideData$`WBB-pH`, na.rm = TRUE)
max(pHTideData$`WBB-pH`, na.rm = TRUE)
minValue <- as.numeric((quantile(pHTideData$`WBB-pH`, na.rm = TRUE)[2]) - (1.5*(quantile(pHTideData$`WBB-pH`, na.rm = TRUE)[4] - quantile(pHTideData$`WBB-pH`, na.rm = TRUE)[2])))
pHTideData <- merge(x = pHData, y = tideData, by = "DateTime") #Merge pH and tide data
head(pHTideData) #Confirm merge
colnames(pHTideData) #Get column names
pHTideData <- pHTideData[, -c(9:10)] #Remove redundant date and time columns
colnames(pHTideData) <- c("DateTime", "Date", "Time", "WBB-pH", "SKB-pH", "PGB-pH", "CIB-pH", "FBB-pH", "CI-Tide", "FB-Tide", "PG-Tide", "SK-Tide", "WB-Tide") #Change column names
head(pHTideData) #Confirm changes
pHTideData$`CIB-pH`[pHTideData$`CI-Tide` <= 1] <- "NA" #Replace CIB-pH values with "NA" when tide is less than 1
pHTideData$`FBB-pH`[pHTideData$`FB-Tide` <= 1] <- "NA" #Replace FBB-pH values with "NA" when tide is less than 1
pHTideData$`PGB-pH`[pHTideData$`PG-Tide` <= 1] <- "NA" #Replace PGB-pH values with "NA" when tide is less than 1
pHTideData$`SKB-pH`[pHTideData$`SK-Tide` <= 1] <- "NA" #Replace SKB-pH values with "NA" when tide is less than 1
pHTideData$`WBB-pH`[pHTideData$`WB-Tide` <= 1] <- "NA" #Replace WBB-pH values with "NA" when tide is less than 1
#Convert to numeric values
pHTideData$`CIB-pH` <- as.numeric(pHTideData$`CIB-pH`)
pHTideData$`FBB-pH` <- as.numeric(pHTideData$`FBB-pH`)
pHTideData$`PGB-pH` <- as.numeric(pHTideData$`PGB-pH`)
pHTideData$`SKB-pH` <- as.numeric(pHTideData$`SKB-pH`)
pHTideData$`WBB-pH` <- as.numeric(pHTideData$`WBB-pH`)
maxValue <- (quantile(pHTideData$`WBB-pH`, na.rm = TRUE)[4]) + (1.5*(quantile(pHTideData$`WBB-pH`, na.rm = TRUE)[4] - quantile(pHTideData$`WBB-pH`, na.rm = TRUE)[2]))
maxValue <- as.numeric(maxValue)
minValue <- as.numeric(minValue)
pHTideData$`WBB-pH`[pHTideData$`WBB-pH` < minValue] <- "NA"
pHTideData$`WBB-pH`[pHTideData$`WBB-pH` > maxValue] <- "NA"
max(pHTideData$`WBB-pH`, na.rm = TRUE)
max(pHTideData$`WBB-pH`)
max(pHTideData$`WBB-pH`, na.rm = TRUE)
min(pHTideData$`WBB-pH`, na.rm = TRUE)
max(pHTideData$`WBB-pH`, na.rm = TRUE)
View(pHTideData)
pHTideData <- merge(x = pHData, y = tideData, by = "DateTime") #Merge pH and tide data
head(pHTideData) #Confirm merge
colnames(pHTideData) #Get column names
pHTideData <- pHTideData[, -c(9:10)] #Remove redundant date and time columns
colnames(pHTideData) <- c("DateTime", "Date", "Time", "WBB-pH", "SKB-pH", "PGB-pH", "CIB-pH", "FBB-pH", "CI-Tide", "FB-Tide", "PG-Tide", "SK-Tide", "WB-Tide") #Change column names
head(pHTideData) #Confirm changes
pHTideData$`CIB-pH`[pHTideData$`CI-Tide` <= 1] <- "NA" #Replace CIB-pH values with "NA" when tide is less than 1
pHTideData$`FBB-pH`[pHTideData$`FB-Tide` <= 1] <- "NA" #Replace FBB-pH values with "NA" when tide is less than 1
pHTideData$`PGB-pH`[pHTideData$`PG-Tide` <= 1] <- "NA" #Replace PGB-pH values with "NA" when tide is less than 1
pHTideData$`SKB-pH`[pHTideData$`SK-Tide` <= 1] <- "NA" #Replace SKB-pH values with "NA" when tide is less than 1
pHTideData$`WBB-pH`[pHTideData$`WB-Tide` <= 1] <- "NA" #Replace WBB-pH values with "NA" when tide is less than 1
#Convert to numeric values
pHTideData$`CIB-pH` <- as.numeric(pHTideData$`CIB-pH`)
pHTideData$`FBB-pH` <- as.numeric(pHTideData$`FBB-pH`)
pHTideData$`PGB-pH` <- as.numeric(pHTideData$`PGB-pH`)
pHTideData$`SKB-pH` <- as.numeric(pHTideData$`SKB-pH`)
pHTideData$`WBB-pH` <- as.numeric(pHTideData$`WBB-pH`)
max(pHTideData$`WBB-pH`, na.rm = TRUE)
maxValue <- as.numeric((quantile(pHTideData$`WBB-pH`, na.rm = TRUE)[4]) + (1.5*(quantile(pHTideData$`WBB-pH`, na.rm = TRUE)[4] - quantile(pHTideData$`WBB-pH`, na.rm = TRUE)[2])))
minValue <- as.numeric((quantile(pHTideData$`WBB-pH`, na.rm = TRUE)[2]) - (1.5*(quantile(pHTideData$`WBB-pH`, na.rm = TRUE)[4] - quantile(pHTideData$`WBB-pH`, na.rm = TRUE)[2])))
min(pHTideData$`WBB-pH`, na.rm = TRUE)
pHTideData$`WBB-pH`[pHTideData$`WBB-pH` < minValue] <- "NA"
min(pHTideData$`WBB-pH`, na.rm = TRUE)
pHTideData$`WBB-pH`[pHTideData$`WBB-pH` > maxValue]
pHTideData <- merge(x = pHData, y = tideData, by = "DateTime") #Merge pH and tide data
head(pHTideData) #Confirm merge
colnames(pHTideData) #Get column names
pHTideData <- pHTideData[, -c(9:10)] #Remove redundant date and time columns
colnames(pHTideData) <- c("DateTime", "Date", "Time", "WBB-pH", "SKB-pH", "PGB-pH", "CIB-pH", "FBB-pH", "CI-Tide", "FB-Tide", "PG-Tide", "SK-Tide", "WB-Tide") #Change column names
head(pHTideData) #Confirm changes
DOTideData <- merge(x = DOData, y = tideData, by = "DateTime") #Merge DO and tide data
head(DOTideData) #Confirm merge
colnames(DOTideData) #Get column names
DOTideData <- DOTideData[, -c(9:10)] #Remove redundant date and time columns
colnames(DOTideData) <- c("DateTime", "Date", "Time", "WBB-DO", "SKB-DO", "PGB-DO", "CIB-DO", "FBB-DO", "CI-Tide", "FB-Tide", "PG-Tide", "SK-Tide", "WB-Tide") #Change column names
head(DOTideData) #Confirm changes
salinityTideData <- merge(x = salinityData, y = tideData, by = "DateTime") #Merge salinity and tide data
head(salinityTideData) #Confirm merge
colnames(salinityTideData) #Get column names
salinityTideData <- salinityTideData[, -c(9:10)] #Remove redundant date and time columns
colnames(salinityTideData) <- c("DateTime", "Date", "Time", "CIB-Salinity", "FBB-Salinity", "PGE-Salinity", "SKB-Salinity", "WBB-Salinity", "CI-Tide", "FB-Tide", "PG-Tide", "SK-Tide", "WB-Tide") #Change column names
head(salinityTideData) #Confirm changes
pHTideData$`CIB-pH`[pHTideData$`CI-Tide` <= 1] <- NA #Replace CIB-pH values with "NA" when tide is less than 1
pHTideData$`FBB-pH`[pHTideData$`FB-Tide` <= 1] <- NA #Replace FBB-pH values with "NA" when tide is less than 1
pHTideData$`PGB-pH`[pHTideData$`PG-Tide` <= 1] <- NA #Replace PGB-pH values with "NA" when tide is less than 1
pHTideData$`SKB-pH`[pHTideData$`SK-Tide` <= 1] <- NA #Replace SKB-pH values with "NA" when tide is less than 1
pHTideData$`WBB-pH`[pHTideData$`WB-Tide` <= 1] <- NA #Replace WBB-pH values with "NA" when tide is less than 1
pHTideData$`CIB-pH` <- as.numeric(pHTideData$`CIB-pH`)
pHTideData$`FBB-pH` <- as.numeric(pHTideData$`FBB-pH`)
pHTideData$`PGB-pH` <- as.numeric(pHTideData$`PGB-pH`)
pHTideData$`SKB-pH` <- as.numeric(pHTideData$`SKB-pH`)
pHTideData$`WBB-pH` <- as.numeric(pHTideData$`WBB-pH`)
View(pHTideData)
DOTideData$`CIB-DO`[DOTideData$`CI-Tide` <= 1] <- NA #Replace CIB-DO values with "NA" when tide is less than 1
DOTideData$`FBB-DO`[DOTideData$`FB-Tide` <= 1] <- NA #Replace FBB-DO values with "NA" when tide is less than 1
DOTideData$`PGB-DO`[DOTideData$`PG-Tide` <= 1] <- NA #Replace PGB-DO values with "NA" when tide is less than 1
DOTideData$`SKB-DO`[DOTideData$`SK-Tide` <= 1] <- NA #Replace SKB-DO values with "NA" when tide is less than 1
DOTideData$`WBB-DO`[DOTideData$`WB-Tide` <= 1] <- NA #Replace WBB-DO values with "NA" when tide is less than 1
DOTideData$`CIB-DO` <- as.numeric(DOTideData$`CIB-DO`)
DOTideData$`FBB-DO` <- as.numeric(DOTideData$`FBB-DO`)
DOTideData$`PGB-DO` <- as.numeric(DOTideData$`PGB-DO`)
DOTideData$`SKB-DO` <- as.numeric(DOTideData$`SKB-DO`)
DOTideData$`WBB-DO` <- as.numeric(DOTideData$`WBB-DO`)
salinityTideData$`CIB-Salinity`[salinityTideData$`CIB-Salinity` <= 1] <- NA #Replace CIB-Salinity values with "NA" when tide is less than 1
salinityTideData$`FBB-Salinity`[salinityTideData$`FB-Salinity` <= 1] <- NA #Replace FBB-Salinity values with "NA" when tide is less than 1
salinityTideData$`PGE-Salinity`[salinityTideData$`PG-Salinity` <= 1] <- NA #Replace PGE-Salinity values with "NA" when tide is less than 1
salinityTideData$`SKB-Salinity`[salinityTideData$`SK-Salinity` <= 1] <- NA #Replace SKB-Salinity values with "NA" when tide is less than 1
salinityTideData$`WBB-Salinity`[salinityTideData$`WB-Salinity` <= 1] <- NA #Replace WBB-Salinity values with "NA" when tide is less than 1
salinityTideData$`CIB-Salinity` <- as.numeric(salinityTideData$`CIB-Salinity`)
salinityTideData$`FBB-Salinity` <- as.numeric(salinityTideData$`FBB-Salinity`)
salinityTideData$`PGE-Salinity` <- as.numeric(salinityTideData$`PGE-Salinity`)
salinityTideData$`SKB-Salinity` <- as.numeric(salinityTideData$`SKB-Salinity`)
salinityTideData$`WBB-Salinity` <- as.numeric(salinityTideData$`WBB-Salinity`)
upperBound <- as.numeric((quantile(pHTideData$`WBB-pH`, na.rm = TRUE)[4]) + (1.5*(quantile(pHTideData$`WBB-pH`, na.rm = TRUE)[4] - quantile(pHTideData$`WBB-pH`, na.rm = TRUE)[2]))) #Calculate upper bound
lowerBound <- as.numeric((quantile(pHTideData$`WBB-pH`, na.rm = TRUE)[2]) - (1.5*(quantile(pHTideData$`WBB-pH`, na.rm = TRUE)[4] - quantile(pHTideData$`WBB-pH`, na.rm = TRUE)[2]))) #Calculate lower bound
pHTideData$`WBB-pH`[pHTideData$`WBB-pH` > upperBound] <- NA
pHTideData$`WBB-pH`[pHTideData$`WBB-pH` < lowerBound] <- NA
min(pHTideData$`WBB-pH`, na.rm = TRUE)
max(pHTideData$`WBB-pH`, na.rm = TRUE)
nSites <- 8 #Sites are from columns 4 to 8
head(pHTideData)
pHTideData[, 4][pHTideData[, 4] > upperBound] <- NA
for(i in 4:nSites) { #For individual site data
upperBound <- as.numeric((quantile(pHTideData[, i], na.rm = TRUE)[4]) + (1.5*(quantile(pHTideData[, i], na.rm = TRUE)[4] - quantile(pHTideData[, i], na.rm = TRUE)[2]))) #Calculate upper bound
lowerBound <- as.numeric((quantile(pHTideData[, i], na.rm = TRUE)[2]) - (1.5*(quantile(pHTideData[, i], na.rm = TRUE)[4] - quantile(pHTideData[, i], na.rm = TRUE)[2]))) #Calculate lower bound
pHTideData[, i][pHTideData[, i] > upperBound] <- NA #Replace any values higher than upper bound with NA
pHTideData[, i][pHTideData[, i] < lowerBound] <- NA #Replace any values lower than upper bound with NA
} #Replace outliers with NA values
View(pHTideData)
for(i in 4:nSites) { #For individual site data
upperBound <- as.numeric((quantile(DOTideData[, i], na.rm = TRUE)[4]) + (1.5*(quantile(DOTideData[, i], na.rm = TRUE)[4] - quantile(DOTideData[, i], na.rm = TRUE)[2]))) #Calculate upper bound
lowerBound <- as.numeric((quantile(DOTideData[, i], na.rm = TRUE)[2]) - (1.5*(quantile(DOTideData[, i], na.rm = TRUE)[4] - quantile(DOTideData[, i], na.rm = TRUE)[2]))) #Calculate lower bound
DOTideData[, i][DOTideData[, i] > upperBound] <- NA #Replace any values higher than upper bound with NA
DOTideData[, i][DOTideData[, i] < lowerBound] <- NA #Replace any values lower than upper bound with NA
} #Replace outliers with NA values
for(i in 4:nSites) { #For individual site data
upperBound <- as.numeric((quantile(salinityTideData[, i], na.rm = TRUE)[4]) + (1.5*(quantile(salinityTideData[, i], na.rm = TRUE)[4] - quantile(salinityTideData[, i], na.rm = TRUE)[2]))) #Calculate upper bound
lowerBound <- as.numeric((quantile(salinityTideData[, i], na.rm = TRUE)[2]) - (1.5*(quantile(salinityTideData[, i], na.rm = TRUE)[4] - quantile(salinityTideData[, i], na.rm = TRUE)[2]))) #Calculate lower bound
salinityTideData[, i][salinityTideData[, i] > upperBound] <- NA #Replace any values higher than upper bound with NA
salinityTideData[, i][salinityTideData[, i] < lowerBound] <- NA #Replace any values lower than upper bound with NA
} #Replace outliers with NA values
getwd()
tideData <- read.csv("../../data/DNR/2017-12-13-Tidal-Data-by-Site.csv", header = TRUE) #Import the tide data
head(tideData) #Confirm import
tideData$Date <- as.Date(tideData$Date, format = "%m/%d/%y") #Convert entries to dates
tideData$DateTime <- paste(tideData$Date, tideData$Time) #Create new DateTime column to easily merge tide and environmental data
colnames(tideData) <- c("Date", "Time", "CI-Tide", "FB-Tide", "PG-Tide", "SK-Tide", "WB-Tide", "DateTime")
head(tideData) #Confirm changes
pHDOData <- read.csv("../../data/DNR/2017-11-14-Environmental-Data-from-Micah.csv", header = TRUE, na.strings = "NA") #Import file with pH and DO data
head(pHDOData) #Confirm import
colnames(pHDOData) #View column names
pHData <- pHDOData[,c(2:3, 5, 7, 8, 10, 12)] #Subset only the bare outplant pH data. Do not include DateTime column, since the formatting is off
head(pHData) #Confirm subset
colnames(pHData) <- c("Date", "Time", "WBB-pH", "SKB-pH", "PGB-pH", "CIB-pH", "FBB-pH") #Rename columns
pHData$Date <- as.Date(pHData$Date, format = "%m/%d/%y") #Convert entries to dates
pHData$DateTime <- paste(pHData$Date, pHData$Time) #Create new DateTime column to easily merge tide and environmental data
head(pHData) #Confirm changes
DOData <- pHDOData[,c(2:3, 23, 25, 27, 29, 31)] #Subset only the bare outplant DO data
head(DOData) #Confirm subset
colnames(DOData) <- c("Date", "Time", "WBB-DO", "SKB-DO", "PGB-DO", "CIB-DO", "FBB-DO") #Rename columns
DOData$Date <- as.Date(DOData$Date, format = "%m/%d/%y") #Convert entries to dates
DOData$DateTime <- paste(DOData$Date, DOData$Time) #Create new DateTime column to easily merge tide and environmental data
head(DOData) #Confirm changes
salinityData <- read.csv("../../data/DNR/2017-11-25-Calculated-Salinity-Output-from-Micah.csv", header = TRUE, na.strings = "NA") #Import salinity data
head(salinityData) #Confirm import
colnames(salinityData) #Get column names
salinityData <- salinityData[,c(1:2, 3, 7, 11, 15, 18)] #Subset only the salinity information from bare outplants. Needed to use PGE instead of PGB since PGB has no salinity data.
head(salinityData) #Confirm subset
colnames(salinityData) <- c("Date", "Time", "CIB-Salinity", "FBB-Salinity", "PGE-Salinity", "SKB-Salinity", "WBB-Salinity") #Rename columns
salinityData$Date <- as.Date(salinityData$Date, format = "%d/%m/%Y") #Convert entries to dates
salinityData$DateTime <- paste(salinityData$Date, salinityData$Time) #Create new DateTime column to easily merge tide and environmental data
head(salinityData)
pHTideData <- merge(x = pHData, y = tideData, by = "DateTime") #Merge pH and tide data
head(pHTideData) #Confirm merge
colnames(pHTideData) #Get column names
pHTideData <- pHTideData[, -c(9:10)] #Remove redundant date and time columns
colnames(pHTideData) <- c("DateTime", "Date", "Time", "WBB-pH", "SKB-pH", "PGB-pH", "CIB-pH", "FBB-pH", "CI-Tide", "FB-Tide", "PG-Tide", "SK-Tide", "WB-Tide") #Change column names
head(pHTideData) #Confirm changes
DOTideData <- merge(x = DOData, y = tideData, by = "DateTime") #Merge DO and tide data
head(DOTideData) #Confirm merge
colnames(DOTideData) #Get column names
DOTideData <- DOTideData[, -c(9:10)] #Remove redundant date and time columns
colnames(DOTideData) <- c("DateTime", "Date", "Time", "WBB-DO", "SKB-DO", "PGB-DO", "CIB-DO", "FBB-DO", "CI-Tide", "FB-Tide", "PG-Tide", "SK-Tide", "WB-Tide") #Change column names
head(DOTideData) #Confirm changes
salinityTideData <- merge(x = salinityData, y = tideData, by = "DateTime") #Merge salinity and tide data
head(salinityTideData) #Confirm merge
colnames(salinityTideData) #Get column names
salinityTideData <- salinityTideData[, -c(9:10)] #Remove redundant date and time columns
colnames(salinityTideData) <- c("DateTime", "Date", "Time", "CIB-Salinity", "FBB-Salinity", "PGE-Salinity", "SKB-Salinity", "WBB-Salinity", "CI-Tide", "FB-Tide", "PG-Tide", "SK-Tide", "WB-Tide") #Change column names
head(salinityTideData) #Confirm changes
pHTideData$`CIB-pH`[pHTideData$`CI-Tide` <= 1] <- NA #Replace CIB-pH values with "NA" when tide is less than 1
pHTideData$`FBB-pH`[pHTideData$`FB-Tide` <= 1] <- NA #Replace FBB-pH values with "NA" when tide is less than 1
pHTideData$`PGB-pH`[pHTideData$`PG-Tide` <= 1] <- NA #Replace PGB-pH values with "NA" when tide is less than 1
pHTideData$`SKB-pH`[pHTideData$`SK-Tide` <= 1] <- NA #Replace SKB-pH values with "NA" when tide is less than 1
pHTideData$`WBB-pH`[pHTideData$`WB-Tide` <= 1] <- NA #Replace WBB-pH values with "NA" when tide is less than 1
#Convert to numeric values
pHTideData$`CIB-pH` <- as.numeric(pHTideData$`CIB-pH`)
pHTideData$`FBB-pH` <- as.numeric(pHTideData$`FBB-pH`)
pHTideData$`PGB-pH` <- as.numeric(pHTideData$`PGB-pH`)
pHTideData$`SKB-pH` <- as.numeric(pHTideData$`SKB-pH`)
pHTideData$`WBB-pH` <- as.numeric(pHTideData$`WBB-pH`)
DOTideData$`CIB-DO`[DOTideData$`CI-Tide` <= 1] <- NA #Replace CIB-DO values with "NA" when tide is less than 1
DOTideData$`FBB-DO`[DOTideData$`FB-Tide` <= 1] <- NA #Replace FBB-DO values with "NA" when tide is less than 1
DOTideData$`PGB-DO`[DOTideData$`PG-Tide` <= 1] <- NA #Replace PGB-DO values with "NA" when tide is less than 1
DOTideData$`SKB-DO`[DOTideData$`SK-Tide` <= 1] <- NA #Replace SKB-DO values with "NA" when tide is less than 1
DOTideData$`WBB-DO`[DOTideData$`WB-Tide` <= 1] <- NA #Replace WBB-DO values with "NA" when tide is less than 1
#Convert to numeric values
DOTideData$`CIB-DO` <- as.numeric(DOTideData$`CIB-DO`)
DOTideData$`FBB-DO` <- as.numeric(DOTideData$`FBB-DO`)
DOTideData$`PGB-DO` <- as.numeric(DOTideData$`PGB-DO`)
DOTideData$`SKB-DO` <- as.numeric(DOTideData$`SKB-DO`)
DOTideData$`WBB-DO` <- as.numeric(DOTideData$`WBB-DO`)
salinityTideData$`CIB-Salinity`[salinityTideData$`CIB-Salinity` <= 1] <- NA #Replace CIB-Salinity values with "NA" when tide is less than 1
salinityTideData$`FBB-Salinity`[salinityTideData$`FB-Salinity` <= 1] <- NA #Replace FBB-Salinity values with "NA" when tide is less than 1
salinityTideData$`PGE-Salinity`[salinityTideData$`PG-Salinity` <= 1] <- NA #Replace PGE-Salinity values with "NA" when tide is less than 1
salinityTideData$`SKB-Salinity`[salinityTideData$`SK-Salinity` <= 1] <- NA #Replace SKB-Salinity values with "NA" when tide is less than 1
salinityTideData$`WBB-Salinity`[salinityTideData$`WB-Salinity` <= 1] <- NA #Replace WBB-Salinity values with "NA" when tide is less than 1
#Convert to numeric values
salinityTideData$`CIB-Salinity` <- as.numeric(salinityTideData$`CIB-Salinity`)
salinityTideData$`FBB-Salinity` <- as.numeric(salinityTideData$`FBB-Salinity`)
salinityTideData$`PGE-Salinity` <- as.numeric(salinityTideData$`PGE-Salinity`)
salinityTideData$`SKB-Salinity` <- as.numeric(salinityTideData$`SKB-Salinity`)
salinityTideData$`WBB-Salinity` <- as.numeric(salinityTideData$`WBB-Salinity`)
nSites <- 8 #Sites are from columns 4 to 8
for(i in 4:nSites) { #For individual site data
upperBound <- as.numeric((quantile(pHTideData[, i], na.rm = TRUE)[4]) + (1.5*(quantile(pHTideData[, i], na.rm = TRUE)[4] - quantile(pHTideData[, i], na.rm = TRUE)[2]))) #Calculate upper bound
lowerBound <- as.numeric((quantile(pHTideData[, i], na.rm = TRUE)[2]) - (1.5*(quantile(pHTideData[, i], na.rm = TRUE)[4] - quantile(pHTideData[, i], na.rm = TRUE)[2]))) #Calculate lower bound
pHTideData[, i][pHTideData[, i] > upperBound] <- NA #Replace any values higher than upper bound with NA
pHTideData[, i][pHTideData[, i] < lowerBound] <- NA #Replace any values lower than upper bound with NA
} #Replace outliers with NA values
for(i in 4:nSites) { #For individual site data
upperBound <- as.numeric((quantile(DOTideData[, i], na.rm = TRUE)[4]) + (1.5*(quantile(DOTideData[, i], na.rm = TRUE)[4] - quantile(DOTideData[, i], na.rm = TRUE)[2]))) #Calculate upper bound
lowerBound <- as.numeric((quantile(DOTideData[, i], na.rm = TRUE)[2]) - (1.5*(quantile(DOTideData[, i], na.rm = TRUE)[4] - quantile(DOTideData[, i], na.rm = TRUE)[2]))) #Calculate lower bound
DOTideData[, i][DOTideData[, i] > upperBound] <- NA #Replace any values higher than upper bound with NA
DOTideData[, i][DOTideData[, i] < lowerBound] <- NA #Replace any values lower than upper bound with NA
} #Replace outliers with NA values
for(i in 4:nSites) { #For individual site data
upperBound <- as.numeric((quantile(salinityTideData[, i], na.rm = TRUE)[4]) + (1.5*(quantile(salinityTideData[, i], na.rm = TRUE)[4] - quantile(salinityTideData[, i], na.rm = TRUE)[2]))) #Calculate upper bound
lowerBound <- as.numeric((quantile(salinityTideData[, i], na.rm = TRUE)[2]) - (1.5*(quantile(salinityTideData[, i], na.rm = TRUE)[4] - quantile(salinityTideData[, i], na.rm = TRUE)[2]))) #Calculate lower bound
salinityTideData[, i][salinityTideData[, i] > upperBound] <- NA #Replace any values higher than upper bound with NA
salinityTideData[, i][salinityTideData[, i] < lowerBound] <- NA #Replace any values lower than upper bound with NA
} #Replace outliers with NA values
DOTideData <- merge(x = DOData, y = tideData, by = "DateTime") #Merge DO and tide data
head(DOTideData) #Confirm merge
colnames(DOTideData) #Get column names
DOTideData <- DOTideData[, -c(9:10)] #Remove redundant date and time columns
colnames(DOTideData) <- c("DateTime", "Date", "Time", "WBB-DO", "SKB-DO", "PGB-DO", "CIB-DO", "FBB-DO", "CI-Tide", "FB-Tide", "PG-Tide", "SK-Tide", "WB-Tide") #Change column names
head(DOTideData) #Confirm changes
#DO Data
DOTideData$`CIB-DO`[DOTideData$`CI-Tide` <= 1] <- NA #Replace CIB-DO values with "NA" when tide is less than 1
DOTideData$`FBB-DO`[DOTideData$`FB-Tide` <= 1] <- NA #Replace FBB-DO values with "NA" when tide is less than 1
DOTideData$`PGB-DO`[DOTideData$`PG-Tide` <= 1] <- NA #Replace PGB-DO values with "NA" when tide is less than 1
DOTideData$`SKB-DO`[DOTideData$`SK-Tide` <= 1] <- NA #Replace SKB-DO values with "NA" when tide is less than 1
DOTideData$`WBB-DO`[DOTideData$`WB-Tide` <= 1] <- NA #Replace WBB-DO values with "NA" when tide is less than 1
#Convert to numeric values
DOTideData$`CIB-DO` <- as.numeric(DOTideData$`CIB-DO`)
DOTideData$`FBB-DO` <- as.numeric(DOTideData$`FBB-DO`)
DOTideData$`PGB-DO` <- as.numeric(DOTideData$`PGB-DO`)
DOTideData$`SKB-DO` <- as.numeric(DOTideData$`SKB-DO`)
DOTideData$`WBB-DO` <- as.numeric(DOTideData$`WBB-DO`)
for(i in 4:nSites) { #For individual site data
upperBound <- as.numeric((quantile(DOTideData[, i], na.rm = TRUE)[4]) + (1.5*(quantile(DOTideData[, i], na.rm = TRUE)[4] - quantile(DOTideData[, i], na.rm = TRUE)[2]))) #Calculate upper bound
lowerBound <- 0 #Dissolved oxygen cannot be less than zero
DOTideData[, i][DOTideData[, i] > upperBound] <- NA #Replace any values higher than upper bound with NA
DOTideData[, i][DOTideData[, i] < lowerBound] <- NA #Replace any values lower than upper bound with NA
} #Replace outliers with NA values
for(i in 4:nSites) { #For individual site data
upperBound <- as.numeric((quantile(salinityTideData[, i], na.rm = TRUE)[4]) + (1.5*(quantile(salinityTideData[, i], na.rm = TRUE)[4] - quantile(salinityTideData[, i], na.rm = TRUE)[2]))) #Calculate upper bound
lowerBound <- as.numeric((quantile(salinityTideData[, i], na.rm = TRUE)[2]) - (1.5*(quantile(salinityTideData[, i], na.rm = TRUE)[4] - quantile(salinityTideData[, i], na.rm = TRUE)[2]))) #Calculate lower bound
salinityTideData[, i][salinityTideData[, i] > upperBound] <- NA #Replace any values higher than upper bound with NA
salinityTideData[, i][salinityTideData[, i] < lowerBound] <- NA #Replace any values lower than upper bound with NA
} #Replace outliers with NA values
write.csv(pHTideData, "2017-11-15-Environmental-Data-and-Biomarker-Analyses/2017-12-13-Environmental-Data-Quality-Control/2017-12-18-pH-Data-QC-with-Tide-Data.csv")
write.csv(DOTideData, "2017-11-15-Environmental-Data-and-Biomarker-Analyses/2017-12-13-Environmental-Data-Quality-Control/2017-12-18-DO-Data-QC-with-Tide-Data.csv") #DO
write.csv(salinityTideData, "2017-11-15-Environmental-Data-and-Biomarker-Analyses/2017-12-13-Environmental-Data-Quality-Control/2017-12-18-Salinity-Data-QC-with-Tide-Data.csv") #Salinity
