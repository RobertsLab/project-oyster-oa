8+5
1:250
print("hello world!")
x <- 1:5
x
y <- c(6, 7, 8, 9, 10)
y
a  <-  b <- c <- 3
x + y
rm(list = ls())
install.packages("ggplot2")
require("ggplot")
require("ggplot2")
trends.txt  <- read.table("~/Downloads/R/GoogleTrends.txt", header = TRUE, sep = "\t")
View(trends.txt)
trends.csv  <- read.csv("~Downloads/R/GoogleTrends.csv", header = TRUE)
trends.csv  <- read.csv("~/Downloads/R/GoogleTrends.csv", header = TRUE)
View(trends.csv)
View(trends.csv)
str(trends.csv)
log(x = 10, base = 10)
log(10)
library("ggplot2", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
library("RColorBrewer", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
#--Question 2a
#--Question 2a
#--Question 2a
#--Question 2a
seq?
?seq
seq(from -1 to 1, length.out = 100)
seq(from -1, to 1, length.out = 100)
seq(from -1, to 1, length.out=100)
seq(from -1 to 1, length.out=100)
seq(from -1, to 1, length.out=100)
seq(-1, 1, length.out=100)
x <-- seq(-1, 1, length.out=100)
exp(x/2)
y <-- exp(x/2)
y[y > 1]
y > 1
y[y > 1]
rep("Small", "Medium", "Large", each = 5)
size.nonfac <-- c("Small", "Small", "Small", "Small", "Small", "Medium", "Medium", "Medium","Medium", "Medium", "Large", "Large", "Large", "Large", "Large")
x <- seq(-1, 1, length.out=100)
y <- exp(x/2)
y[y > 1]
which(y > 1)
length(y > 1)
y > 1
sum(y > 1)
size.nonfac <- c("Small", "Small", "Small", "Small", "Small", "Medium", "Medium", "Medium","Medium", "Medium", "Large", "Large", "Large", "Large", "Large")
size <- factor(size.nonfac)
unknown.nonfac <- c("Unknown", "Unknown")
unknown <- factor(unknown.nonfac)
rbind(size, unknwon)
rbind(size, unknown)
size.nonfac <-rep(1:3, each = 5)
size <- factor(size.nonfac, labels=c("Small", "Medium", "Large")
size <- factor(size.nonfac, labels=c("Small", "Medium", "Large"))
size <- factor(size, labels = c("Small", "Medium", "Large"))
unknown.nonfac <- rep(1, each = 2)
size <- factor(size.nonfac, labels = c("Small", "Medium", "Large"))
unknown <- factor(unknown.nonfac, labels = c("Unknown"))
rbind(size, unknown)
head(size)
str(size)
c(size, unknown)
unknown.nonfac <- rep(4, each = 2)
unknown <- factor(unknown.nonfac, labels = c("Unknown"))
c(size, unknown)
c(size.nonfac, unknown.nonfac)
size <- factor(size.nonfac, labels = c("Small", "Medium", "Large"))
observedSize.nonfac <- c(size.nonfac, unknown.nonfac)
observedSize <- factor(observedSize.nonfac, labels = c("Small", "Medium", "Large", "Unknwon"))
str(observedSize)
observedSize.nonfac <- c(size.nonfac, unknown.nonfac)
str(observedSize.nonfac)
observedSize.nonfac
observedSize
unknown.nonfac <- rep(4, each = 2)
observedSize.nonfac <- c(size.nonfac, unknown.nonfac)
observedSize <- factor(observedSize.nonfac, labels = c("Small", "Medium", "Large", "Unknwon"))
observedSize
read.table(file = "fishPassage.csv", header = T, sep = ",", skip = 0, na.strings = NA)
x <- seq(-1, 1, length.out=100) #create sequence with length of 100 values
y <- exp(x/2)
sum(y > 1) #add values together that are "TRUE" for y > 1
size.nonfac <-rep(1:3, each = 5) #create vector
size <- factor(size.nonfac, labels = c("Small", "Medium", "Large")) #exchange numbers for small, medium and large
size #view final vector with labelled factors
unknown.nonfac <- rep(4, each = 2) #create vector with new values
observedSize.nonfac <- c(size.nonfac, unknown.nonfac) #combine both vectors with unlabelled factors
observedSize <- factor(observedSize.nonfac, labels = c("Small", "Medium", "Large", "Unknwon")) #label factors
observedSize #view final vector with labelled factors
fishPassage <- read.csv(file = "fishPassage.csv", header = T, sep = ",", na.strings = "NA")
str(bonnevilleDam.data) #confirm dataframe structure
bonnevilleDam.data <- fishPassage[fishPassage$Dam == "BON",] #create new dataframe for just BON data
fishPassage <- read.csv(file = "fishPassage.csv", header = T, sep = ",", na.strings = "NA")
read.csv(file = "ScrapData.csv", header = TRUE)
install.packages("HH")
library(HH)
?HH
case(cholesterolModel)
cholesterolData <- read.csv(file = "homework_2.csv") #Import data
cholesterolModel <- lm(cholesterol ~ calcium, data = cholesterolData)
proteinAreas <- read.csv("2017-06-10-protein-areas-only-error-checked.csv", na.strings = "#N/A") #Specify Skyline's special way of designating N/A values
dir.create("../Downloads/2017-Geoduck-SRM-raw/")
dir.create("../Downloads/2017-Geoduck-SRM-raw/")
?dir.create
dir.create(path = "../Downloads/2017-Geoduck-SRM-raw/")
dir.create("../Guest/Downloads/2017-Geoduck-SRM-raw")
dir.create("./Downloads/2017-Geoduck-SRM-raw")
getwd() #Confirm changes
setwd("../..") #Change working directory to the master SRM folder, and not the folder where this script is hosted.
getwd() #Confirm changes
setwd("Users/yaaminivenkataraman/Documents/project-oyster-oa/analyses/DNR_SRM_20170902/")
getwd() #Confirm changes
SRMModifiedAreas <- read.csv("2017-10-10-Troubleshooting/2017-10-24-Coefficient-of-Variation/2017-10-24-Norm-modSR.csv", header = TRUE) #Import Steven's modified dataset
head(SRMModifiedAreas) #Confirm import. There are six columns. The first column is null, and the last column, coefficient of variation, is not needed.
SRMModifiedAreas <- SRMModifiedAreas[,-c(1, 6)] #Remove unnecessary columns
head(SRMModifiedAreas) #Confirm changes. Now I only have Protein.Name, Sample, Replicate1 and Replicate2 (peak areas from Skyline, which are a proxy for protein abundance)
SRMAveragedAreas <- SRMModifiedAreas #Dupliate dataframe
SRMAveragedAreas$Average.Area <- ((SRMAveragedAreas$Replicate1 + SRMAveragedAreas$Replicate2)/2) #Average peak areas and save as a new column
SRMAveragedAreas <- SRMAveragedAreas[, -c(3:4)] #Remove replicate area columns
head(SRMAveragedAreas) #Confirm changes
library(reshape2) #Install package to pivot table
SRMAveragedAreasPivoted <- dcast(SRMAveragedAreas, Protein.Name ~ Sample) #Cast table!
head(SRMAveragedAreasPivoted) #Confirm table cast!
SRMAveragedAreasPivotedBoxplots <- SRMAveragedAreasPivoted #Duplicate dataframe
rownames(SRMAveragedAreasPivotedBoxplots) <- SRMAveragedAreasPivotedBoxplots$Protein.Name #Save protein name column as rownames
SRMAveragedAreasPivotedCorrected <- SRMAveragedAreasPivotedCorrected[, -1] #Remove Protein.Name column
head(SRMAveragedAreasPivotedCorrected) #Confirm changes
SRMAveragedAreasPivotedBoxplots <- SRMAveragedAreasPivotedBoxplots[, -1] #Remove Protein.Name column
head(SRMAveragedAreasPivotedBoxplots) #Confirm changes
write.csv(SRMAveragedAreasPivotedBoxplots, "2017-10-30-Protein-Areas-for-Boxplots.csv")
