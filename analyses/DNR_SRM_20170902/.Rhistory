8+5
1:250
print("hello world!")
x <- 1:5
x
y <- c(6, 7, 8, 9, 10)
y
a  <-  b <- c <- 3
x + y
rm(list = ls())
install.packages("ggplot2")
require("ggplot")
require("ggplot2")
trends.txt  <- read.table("~/Downloads/R/GoogleTrends.txt", header = TRUE, sep = "\t")
View(trends.txt)
trends.csv  <- read.csv("~Downloads/R/GoogleTrends.csv", header = TRUE)
trends.csv  <- read.csv("~/Downloads/R/GoogleTrends.csv", header = TRUE)
View(trends.csv)
View(trends.csv)
str(trends.csv)
log(x = 10, base = 10)
log(10)
library("ggplot2", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
library("RColorBrewer", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
#--Question 2a
#--Question 2a
#--Question 2a
#--Question 2a
seq?
?seq
seq(from -1 to 1, length.out = 100)
seq(from -1, to 1, length.out = 100)
seq(from -1, to 1, length.out=100)
seq(from -1 to 1, length.out=100)
seq(from -1, to 1, length.out=100)
seq(-1, 1, length.out=100)
x <-- seq(-1, 1, length.out=100)
exp(x/2)
y <-- exp(x/2)
y[y > 1]
y > 1
y[y > 1]
rep("Small", "Medium", "Large", each = 5)
size.nonfac <-- c("Small", "Small", "Small", "Small", "Small", "Medium", "Medium", "Medium","Medium", "Medium", "Large", "Large", "Large", "Large", "Large")
x <- seq(-1, 1, length.out=100)
y <- exp(x/2)
y[y > 1]
which(y > 1)
length(y > 1)
y > 1
sum(y > 1)
size.nonfac <- c("Small", "Small", "Small", "Small", "Small", "Medium", "Medium", "Medium","Medium", "Medium", "Large", "Large", "Large", "Large", "Large")
size <- factor(size.nonfac)
unknown.nonfac <- c("Unknown", "Unknown")
unknown <- factor(unknown.nonfac)
rbind(size, unknwon)
rbind(size, unknown)
size.nonfac <-rep(1:3, each = 5)
size <- factor(size.nonfac, labels=c("Small", "Medium", "Large")
size <- factor(size.nonfac, labels=c("Small", "Medium", "Large"))
size <- factor(size, labels = c("Small", "Medium", "Large"))
unknown.nonfac <- rep(1, each = 2)
size <- factor(size.nonfac, labels = c("Small", "Medium", "Large"))
unknown <- factor(unknown.nonfac, labels = c("Unknown"))
rbind(size, unknown)
head(size)
str(size)
c(size, unknown)
unknown.nonfac <- rep(4, each = 2)
unknown <- factor(unknown.nonfac, labels = c("Unknown"))
c(size, unknown)
c(size.nonfac, unknown.nonfac)
size <- factor(size.nonfac, labels = c("Small", "Medium", "Large"))
observedSize.nonfac <- c(size.nonfac, unknown.nonfac)
observedSize <- factor(observedSize.nonfac, labels = c("Small", "Medium", "Large", "Unknwon"))
str(observedSize)
observedSize.nonfac <- c(size.nonfac, unknown.nonfac)
str(observedSize.nonfac)
observedSize.nonfac
observedSize
unknown.nonfac <- rep(4, each = 2)
observedSize.nonfac <- c(size.nonfac, unknown.nonfac)
observedSize <- factor(observedSize.nonfac, labels = c("Small", "Medium", "Large", "Unknwon"))
observedSize
read.table(file = "fishPassage.csv", header = T, sep = ",", skip = 0, na.strings = NA)
x <- seq(-1, 1, length.out=100) #create sequence with length of 100 values
y <- exp(x/2)
sum(y > 1) #add values together that are "TRUE" for y > 1
size.nonfac <-rep(1:3, each = 5) #create vector
size <- factor(size.nonfac, labels = c("Small", "Medium", "Large")) #exchange numbers for small, medium and large
size #view final vector with labelled factors
unknown.nonfac <- rep(4, each = 2) #create vector with new values
observedSize.nonfac <- c(size.nonfac, unknown.nonfac) #combine both vectors with unlabelled factors
observedSize <- factor(observedSize.nonfac, labels = c("Small", "Medium", "Large", "Unknwon")) #label factors
observedSize #view final vector with labelled factors
fishPassage <- read.csv(file = "fishPassage.csv", header = T, sep = ",", na.strings = "NA")
str(bonnevilleDam.data) #confirm dataframe structure
bonnevilleDam.data <- fishPassage[fishPassage$Dam == "BON",] #create new dataframe for just BON data
fishPassage <- read.csv(file = "fishPassage.csv", header = T, sep = ",", na.strings = "NA")
read.csv(file = "ScrapData.csv", header = TRUE)
install.packages("HH")
library(HH)
?HH
case(cholesterolModel)
cholesterolData <- read.csv(file = "homework_2.csv") #Import data
cholesterolModel <- lm(cholesterol ~ calcium, data = cholesterolData)
proteinAreas <- read.csv("2017-06-10-protein-areas-only-error-checked.csv", na.strings = "#N/A") #Specify Skyline's special way of designating N/A values
dir.create("../Downloads/2017-Geoduck-SRM-raw/")
dir.create("../Downloads/2017-Geoduck-SRM-raw/")
?dir.create
dir.create(path = "../Downloads/2017-Geoduck-SRM-raw/")
dir.create("../Guest/Downloads/2017-Geoduck-SRM-raw")
dir.create("./Downloads/2017-Geoduck-SRM-raw")
getwd()
histologyData <- read.csv("Documents/project-oyster-oa/analyses/Manchester_Gonad_Histology/2018-02-27-Histology-Classification-Analyses.R")
histologyData <- read.csv("Documents/project-oyster-oa/data/Manchester/2018-02-27-Gigas-Histology-Classification.csv")
head(histologyData)
histologyData$Mature <- rep(0, nrow(histology$Mature))
histologyData$Mature <- rep(0, nrow(histologDatay$Mature))
histologyData$Mature <- rep(0, nrow(histologData$Mature))
histologyData$Mature <- rep(0, nrow(histologyData$Mature))
histologyData$Mature <- rep(0, length(histologyData$Mature))
histologyData$Mature <- rep(0, nrow(histologyData))
histologyData$Mature[which(histologyData$Stage>=mature.stage)]<-rep(1, length(which(histologyData$Stage>=mature.stage)))
mature.stage <- 3
histologyData$Mature[which(histologyData$Stage>=mature.stage)]<-rep(1, length(which(histologyData$Stage>=mature.stage)))
histologyData
View(histologyData)
View(histologyData)
histologyData$Treatment <- c(rep("Ambient", times = 20), rep("Low", times = 10), rep("Ambient", times = 10))
mature.glm <- glm(Mature ~ Treatment * Pre.or.Post.OA, data = histologyData, family = binomial)
summary(mature.glm)
mature.glm <- glm(Mature ~ Treatment + Pre.or.Post.OA, data = histologyData, family = binomial)
summary(mature.glm)
getwd()
getwd()
getwd()
setwd("Documents/project-oyster-oa/analyses/DNR_SRM_20170902")
getwd()
averagePeptideData <- read.csv("2017-10-10-Troubleshooting/2017-11-05-Integrated-Dataset/2018-02-15-DNR-Paper-Figure/2018-02-16-Average-Peptide-Data-by-Site.csv", header = TRUE) #Import average peptide dataset
head(averagePeptideData) #Confirm import
averagePeptideData <- averagePeptideData[,-1] #Remove first column
head(averagePeptideData) #Confirm column deletion
averagePeptideData$logTransformedAbundance <- (log(averagePeptideData$averageNormalizedAbundance) + 1) #Log(x+1) transform dataset
allheatmapData <- data.frame("peptide" = averagePeptideData$peptide,
"logTransformedAbundance" = averagePeptideData$logTransformedAbundance,
"site" = averagePeptideData$site) #Subset data needed for heatmap of all peptides
head(allheatmapData) #Confirm subset
allheatmapDataPivoted <- dcast(data = allheatmapData, peptide ~ site, value.var = "logTransformedAbundance") #Cast table (transform from long to wide)
head(allheatmapDataPivoted) #Confirm cast
rownames(allheatmapDataPivoted) <- allheatmapDataPivoted$peptide #Assign peptide as rowname
library(pheatmap) #Load package
library(reshape2) #Load package
library(RColorBrewer) #Load package
averagePeptideData$logTransformedAbundance <- (log(averagePeptideData$averageNormalizedAbundance) + 1) #Log(x+1) transform dataset
allheatmapData <- data.frame("peptide" = averagePeptideData$peptide,
"logTransformedAbundance" = averagePeptideData$logTransformedAbundance,
"site" = averagePeptideData$site) #Subset data needed for heatmap of all peptides
head(allheatmapData) #Confirm subset
allheatmapDataPivoted <- dcast(data = allheatmapData, peptide ~ site, value.var = "logTransformedAbundance") #Cast table (transform from long to wide)
head(allheatmapDataPivoted) #Confirm cast
rownames(allheatmapDataPivoted) <- allheatmapDataPivoted$peptide #Assign peptide as rowname
allheatmapDataPivoted <- allheatmapDataPivoted[,-1] #Remove peptide column
head(allheatmapDataPivoted) #Confirm changes
heatmapPRGn <- RColorBrewer::brewer.pal(11, "PRGn") #Save purple-green color palette
peptideCommonNames <- read.csv("2017-10-10-Troubleshooting/2017-11-05-Integrated-Dataset/2018-02-15-DNR-Paper-Figure/2018-02-27-Protein-Peptide-CommonName.csv", header = TRUE) #Import information with peptide common names
head(peptideCommonNames) #Confirm import
peptideCommonNames <- read.csv("2017-10-10-Troubleshooting/2017-11-05-Integrated-Dataset/2018-02-15-DNR-Paper-Figure/2018-02-27-Protein-Peptide-CommonName.csv", header = TRUE) #Import information with peptide common names
head(peptideCommonNames) #Confirm import
peptideCommonNames <- read.csv("2017-10-10-Troubleshooting/2017-11-05-Integrated-Dataset/2018-02-15-DNR-Paper-Figure/2018-02-27-Protein-Peptide-CommonName.csv", header = TRUE) #Import information with peptide common names
head(peptideCommonNames) #Confirm import
peptideCommonNames$namePeptide <- paste(peptideCommonNames$CommonName, peptideCommonNames$Peptide) #Combine columns
head(peptideCommonNames) #Confirm change
rownames(allheatmapDataPivoted) <- peptideCommonNames$namePeptide #Assign the name and peptide information as rownames for heatmap data
head(allheatmapDataPivoted) #Confirm changes
pheatmap(allheatmapDataPivoted, cluster_rows = FALSE, cluster_cols = TRUE, treeheight_col = 10, clustering_distance_rows = "euclidean", clustering_distance_cols = "euclidean", clustering_method = "average", show_rownames = TRUE, show_colnames = TRUE, legend = TRUE, color = heatmapPRGn, fontsize_col = 12, fontsize_row = 12, main = "Average Peptide Abundance Across Sites")
jpeg("2017-10-10-Troubleshooting/2017-11-05-Integrated-Dataset/2018-02-15-DNR-Paper-Figure/2018-02-27-Average-Peptide-Abundance-Across-Sites-NamePeptide-Heatmap.jpeg", width = 1000, height = 1000)
pheatmap(allheatmapDataPivoted, cluster_rows = FALSE, cluster_cols = TRUE, treeheight_col = 10, clustering_distance_rows = "euclidean", clustering_distance_cols = "euclidean", clustering_method = "average", show_rownames = TRUE, show_colnames = TRUE, legend = TRUE, color = heatmapPRGn, fontsize_col = 12, fontsize_row = 12, main = "Average Peptide Abundance Across Sites")
dev.off() #Turn off plotting device
