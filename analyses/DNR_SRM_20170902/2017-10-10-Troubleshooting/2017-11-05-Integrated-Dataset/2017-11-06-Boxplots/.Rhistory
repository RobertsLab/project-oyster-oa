getwd()
setwd("../../..") #Set working directory to the master SRM folder
getwd()
SRMDataNMDSAveraged <- read.csv("2017-10-10-Troubleshooting/2017-11-05-Integrated-Dataset/2017-11-05-Averaged-Areas-Pivoted-Corrected.csv", header = TRUE) #Import modified dataset. This dataset has rownames as the first column, column names as sample IDs. Area data is averaged and corrected (no NAs)
rownames(SRMDataNMDSAveragedCorrected) <- SRMDataNMDSAveragedCorrected[,1]
SRMDataNMDSAveragedCorrected <- SRMDataNMDSAveragedCorrected[,-1] #Remove first column of rownames
View(SRMDataNMDSAveraged)
SRMDataNMDSAveragedCorrected <- read.csv("2017-10-10-Troubleshooting/2017-11-05-Integrated-Dataset/2017-11-05-Averaged-Areas-Pivoted-Corrected.csv", header = TRUE) #Import modified dataset. This dataset has rownames as the first column, column names as sample IDs. Area data is averaged and corrected (no NAs)
rownames(SRMDataNMDSAveragedCorrected) <- SRMDataNMDSAveragedCorrected[,1]
SRMDataNMDSAveragedCorrected <- SRMDataNMDSAveragedCorrected[,-1] #Remove first column of rownames
head(SRMDataNMDSAveragedCorrected) #Confirm import.
SRMDataNMDSAveragedCorrectedTransposed <- data.frame(t(SRMDataNMDSAveragedCorrected)) #Transpose the data
SRMDataNMDSAveragedCorrectedTransposed$Sample.Number <- rownames(SRMDataNMDSAveragedCorrectedTransposed) #Save rownames as a new column
head(SRMDataNMDSAveragedCorrectedTransposed) #Confirm changes
biologicalReplicates <- read.csv("2017-10-10-Troubleshooting/2017-10-24-Coefficient-of-Variation/2017-10-25-Biological-Replicate-Information-SampleID-Only.csv", na.strings = "N/A") #Import site and eelgrass condition information (i.e. biological replicate information)
head(biologicalReplicates) #Confirm import
colnames(biologicalReplicates) <- c("Sample.Number", "Site", "Eelgrass.Condition")
rownames(biologicalReplicates) <- biologicalReplicates$Sample.Number #Set sample number as row names
head(biologicalReplicates) #Confirm changes
biologicalReplicates$Site <- factor(biologicalReplicates$Site) #Remove 0 as a factor
biologicalReplicates$Eelgrass.Condition <- factor(biologicalReplicates$Eelgrass.Condition) #Remove 0 as a factor
str(biologicalReplicates) #Confirm factor reset
boxplotData <- merge(x = biologicalReplicates, y = SRMDataNMDSAveragedCorrectedTransposed, by = "Sample.Number") #Merge together
head(boxplotData) #Confirm merge
rownames(boxplotData) <- boxplotData$Sample.Number #Set sample number as row names
boxplotData <- boxplotData[-1] #Remove Sample.Number column
head(boxplotData) #Confirm changes
boxplotFilenames <- data.frame(protein = colnames(boxplotData),
modifier = rep("Eelgrass", length(boxplotData))) #Make filename sheet
boxplotFilenames <- data.frame(protein = colnames(boxplotData),
modifier = rep(".jpeg", length(boxplotData))) #Make filename sheet
boxplotFilenames$siteFilenames <- paste(boxplotFilenames$protein, boxplotFilenames$modifier) #Make a new column for the site only filenames
head(boxplotFilenames) #Confirm changes
setwd("2017-10-10-Troubleshooting/2017-11-05-Integrated-Dataset/2017-11-06-Boxplots/")
getwd()
nTransitions <- (length(boxplotData)) #The number of columns in the dataframe. The first 2 columns are Site and Eelgrass.Condition
for(i in 3:nTransitions) { #For all of my columns with transition IDs
fileName <- boxplotFilenames$siteFilenames[i] #Set the file name choices as the first column
jpeg(filename = fileName, width = 1000, height = 1000) #Save using set file name
boxplot(boxplotData[,i] ~ boxplotData$Site, xlab = "Sites", ylab = "Abundance") #Create the boxplot
stripchart(boxplotData[,i] ~ boxplotData$Site, vertical = TRUE, method = "jitter", add = TRUE, pch = 20, col = 'blue') #Add each data point
title(fileName)
dev.off() #Close file
}
getwd()
setwd("../../..") #Set working directory to the master SRM folder
getwd()
SRMDataNMDSAveragedCorrected <- read.csv("2017-10-10-Troubleshooting/2017-11-05-Integrated-Dataset/2017-11-05-Averaged-Areas-Pivoted-Corrected.csv", header = TRUE) #Import modified dataset. This dataset has rownames as the first column, column names as sample IDs. Area data is averaged and corrected (no NAs)
rownames(SRMDataNMDSAveragedCorrected) <- SRMDataNMDSAveragedCorrected[,1]
SRMDataNMDSAveragedCorrected <- SRMDataNMDSAveragedCorrected[,-1] #Remove first column of rownames
head(SRMDataNMDSAveragedCorrected) #Confirm import.
SRMDataNMDSAveragedCorrectedTransposed <- data.frame(t(SRMDataNMDSAveragedCorrected)) #Transpose the data
SRMDataNMDSAveragedCorrectedTransposed$Sample.Number <- rownames(SRMDataNMDSAveragedCorrectedTransposed) #Save rownames as a new column
head(SRMDataNMDSAveragedCorrectedTransposed) #Confirm changes
biologicalReplicates <- read.csv("2017-10-10-Troubleshooting/2017-10-24-Coefficient-of-Variation/2017-10-25-Biological-Replicate-Information-SampleID-Only.csv", na.strings = "N/A") #Import site and eelgrass condition information (i.e. biological replicate information)
head(biologicalReplicates) #Confirm import
colnames(biologicalReplicates) <- c("Sample.Number", "Site", "Eelgrass.Condition")
rownames(biologicalReplicates) <- biologicalReplicates$Sample.Number #Set sample number as row names
head(biologicalReplicates) #Confirm changes
biologicalReplicates$Site <- factor(biologicalReplicates$Site) #Remove 0 as a factor
biologicalReplicates$Eelgrass.Condition <- factor(biologicalReplicates$Eelgrass.Condition) #Remove 0 as a factor
str(biologicalReplicates) #Confirm factor reset
boxplotData <- merge(x = biologicalReplicates, y = SRMDataNMDSAveragedCorrectedTransposed, by = "Sample.Number") #Merge together
head(boxplotData) #Confirm merge
rownames(boxplotData) <- boxplotData$Sample.Number #Set sample number as row names
boxplotData <- boxplotData[-1] #Remove Sample.Number column
head(boxplotData) #Confirm changes
?aov
aov(boxplotData[,1]~boxplotData$Site)
aov(boxplotData[,1] ~ boxplotData$Site)
aov(boxplotData$CHOYP_ACAA2.1.1.m.30666.ELGLNNDITNMNGGAIALGHPLAASGTR ~ boxplotData$Site)
aov(boxplotData[,1] ~ boxplotData$Site)
aov(boxplotData[,3] ~ boxplotData$Site)
summary(aov(boxplotData[,3] ~ boxplotData$Site))
summary(aov(boxplotData[,3] ~ boxplotData$Site))[1]
summary(aov(boxplotData[,3] ~ boxplotData$Site))[2]
summary(aov(boxplotData[,3] ~ boxplotData$Site))[3]
temp <- aov(boxplotData[,3] ~ boxplotData$Site
summary(temp)
temp <- aov(boxplotData[,3] ~ boxplotData$Site)
summary(temp)
summary(temp)[1]
summary(temp)[2]
summary(temp)[6]
summary(temp)$df
summary(temp)[[1]][["Pr(>F)"]]
summary(temp)[[1]][["Pr(>F)"]][[1]]
fileName <- boxplotFilenames$siteFilenames[3] #Set the file name choices as the first column
boxplotFilenames <- data.frame(protein = colnames(boxplotData),
modifier = rep(".jpeg", length(boxplotData))) #Make filename sheet
boxplotFilenames$siteFilenames <- paste(boxplotFilenames$protein, boxplotFilenames$modifier) #Make a new column for the site only filenames
head(boxplotFilenames) #Confirm changes
fileName <- boxplotFilenames$siteFilenames[3] #Set the file name choices as the first column
boxplot(boxplotData[,3] ~ boxplotData$Site, xlab = "Sites", ylab = "Abundance") #Create the boxplot
stripchart(boxplotData[,3] ~ boxplotData$Site, vertical = TRUE, method = "jitter", add = TRUE, pch = 20, col = 'blue') #Add each data point
temp <- aov(boxplotData[,3] ~ boxplotData$Site) #Perform an ANOVA to test for significant differences between sites
title(fileName)
legend("topleft", bty = "n", legend = paste("ANOVA p-value =", format(summary(temp)[[1]][["Pr(>F)"]][[1]], digits=4))) #Plot p-value from ANOVA
getwd()
SRMDataNMDSAveragedCorrected <- read.csv("2017-10-10-Troubleshooting/2017-11-05-Integrated-Dataset/2017-11-05-Averaged-Areas-Pivoted-Corrected.csv", header = TRUE) #Import modified dataset. This dataset has rownames as the first column, column names as sample IDs. Area data is averaged and corrected (no NAs)
rownames(SRMDataNMDSAveragedCorrected) <- SRMDataNMDSAveragedCorrected[,1]
SRMDataNMDSAveragedCorrected <- SRMDataNMDSAveragedCorrected[,-1] #Remove first column of rownames
head(SRMDataNMDSAveragedCorrected) #Confirm import.
SRMDataNMDSAveragedCorrectedTransposed <- data.frame(t(SRMDataNMDSAveragedCorrected)) #Transpose the data
SRMDataNMDSAveragedCorrectedTransposed$Sample.Number <- rownames(SRMDataNMDSAveragedCorrectedTransposed) #Save rownames as a new column
head(SRMDataNMDSAveragedCorrectedTransposed) #Confirm changes
biologicalReplicates <- read.csv("2017-10-10-Troubleshooting/2017-10-24-Coefficient-of-Variation/2017-10-25-Biological-Replicate-Information-SampleID-Only.csv", na.strings = "N/A") #Import site and eelgrass condition information (i.e. biological replicate information)
head(biologicalReplicates) #Confirm import
colnames(biologicalReplicates) <- c("Sample.Number", "Site", "Eelgrass.Condition")
rownames(biologicalReplicates) <- biologicalReplicates$Sample.Number #Set sample number as row names
head(biologicalReplicates) #Confirm changes
biologicalReplicates$Site <- factor(biologicalReplicates$Site) #Remove 0 as a factor
biologicalReplicates$Eelgrass.Condition <- factor(biologicalReplicates$Eelgrass.Condition) #Remove 0 as a factor
str(biologicalReplicates) #Confirm factor reset
boxplotData <- merge(x = biologicalReplicates, y = SRMDataNMDSAveragedCorrectedTransposed, by = "Sample.Number") #Merge together
head(boxplotData) #Confirm merge
rownames(boxplotData) <- boxplotData$Sample.Number #Set sample number as row names
boxplotData <- boxplotData[-1] #Remove Sample.Number column
head(boxplotData) #Confirm changes
boxplotFilenames <- data.frame(protein = colnames(boxplotData),
modifier = rep(".jpeg", length(boxplotData))) #Make filename sheet
boxplotFilenames$siteFilenames <- paste(boxplotFilenames$protein, boxplotFilenames$modifier) #Make a new column for the site only filenames
head(boxplotFilenames) #Confirm changes
setwd("2017-10-10-Troubleshooting/2017-11-05-Integrated-Dataset/2017-11-06-Boxplots/")
getwd()
nTransitions <- (length(boxplotData)) #The number of columns in the dataframe. The first 2 columns are Site and Eelgrass.Condition
for(i in 3:nTransitions) { #For all of my columns with transition IDs
fileName <- boxplotFilenames$siteFilenames[i] #Set the file name choices as the first column
jpeg(filename = fileName, width = 1000, height = 1000) #Save using set file name
boxplot(boxplotData[,i] ~ boxplotData$Site, xlab = "Sites", ylab = "Abundance") #Create the boxplot
stripchart(boxplotData[,i] ~ boxplotData$Site, vertical = TRUE, method = "jitter", add = TRUE, pch = 20, col = 'blue') #Add each data point
siteANOVA <- aov(boxplotData[,i] ~ boxplotData$Site) #Perform an ANOVA to test for significant differences between sites
legend("topleft", bty = "n", legend = paste("ANOVA p-value =", format(summary(siteANOVA)[[1]][["Pr(>F)"]][[1]], digits=4))) #Plot p-value from ANOVA
title(fileName)
dev.off() #Close file
}
nPeptides <- (length(boxplotData)) #The number of columns in the dataframe. The first 2 columns are Site and Eelgrass.Condition
for(i in 3:nPeptides) { #For all of my columns with peptide IDs
fileName <- boxplotFilenames$siteFilenames[i] #Set the file name choices as the first column
jpeg(filename = fileName, width = 1000, height = 1000) #Save using set file name
boxplot(boxplotData[,i] ~ boxplotData$Site, xlab = "Sites", ylab = "Abundance") #Create the boxplot
stripchart(boxplotData[,i] ~ boxplotData$Site, vertical = TRUE, method = "jitter", add = TRUE, pch = 20, col = 'blue') #Add each data point
siteANOVA <- aov(boxplotData[,i] ~ boxplotData$Site) #Perform an ANOVA to test for significant differences between sites
legend("topleft", bty = "n", legend = paste("ANOVA p-value =", format(summary(siteANOVA)[[1]][["Pr(>F)"]][[1]], digits=4))) #Plot p-value from ANOVA
title(fileName)
dev.off() #Close file
}
temp <- aov(boxplotData[,3] ~ boxplotData$Site) #Perform an ANOVA to test for significant differences between sites
summary(temp)[[1]][["Pr(>F)"]][[1]]
TukeyHSD(temp)
?TukeyHSD
temp2 <- TukeyHSD(temp)
summary(temp2)
temp2
temp2[,4]
temp2[,4]
temp2$`boxplotData$Site`
temp2$`boxplotData$Site`[,4]
fileName <- boxplotFilenames$siteFilenames[3] #Set the file name choices as the first column
boxplot(boxplotData[,3] ~ boxplotData$Site, xlab = "Sites", ylab = "Abundance") #Create the boxplot
stripchart(boxplotData[,3] ~ boxplotData$Site, vertical = TRUE, method = "jitter", add = TRUE, pch = 20, col = 'blue') #Add each data point
temp <- aov(boxplotData[,3] ~ boxplotData$Site) #Perform an ANOVA to test for significant differences between sites
legend("topleft", bty = "n", legend = paste("ANOVA p-value =", format(summary(temp)[[1]][["Pr(>F)"]][[1]], digits=4))) #Plot p-value from ANOVA
temp2 <- TukeyHSD(temp) #Perform Tukey Honest Significant Difference post-hoc test to determine where ANOVA significance is coming from
legend("bottomleft", bty = "n", legend = paste("Tukey HSD =", format(temp2$`boxplotData$Site`[,4], digits=4))) #Plot p-values from Tukey
fileName <- boxplotFilenames$siteFilenames[3] #Set the file name choices as the first column
boxplot(boxplotData[,3] ~ boxplotData$Site, xlab = "Sites", ylab = "Abundance") #Create the boxplot
stripchart(boxplotData[,3] ~ boxplotData$Site, vertical = TRUE, method = "jitter", add = TRUE, pch = 20, col = 'blue') #Add each data point
temp <- aov(boxplotData[,3] ~ boxplotData$Site) #Perform an ANOVA to test for significant differences between sites
summary(temp)[[1]][["Pr(>F)"]][[1]] #Plot p-value from ANOVA
temp2 <- TukeyHSD(temp) #Perform Tukey Honest Significant Difference post-hoc test to determine where ANOVA significance is coming from
temp2$`boxplotData$Site`[,4]
View(boxplotData)
tempdata <- data.frame(Protein.Peptide = colnames(boxplotData),
ANOVA.pvalue = rep(x = 0, times = length(boxplotData)),
FB-CI = rep(x = 0, times = length(boxplotData)),
PG-CI = rep(x = 0, times = length(boxplotData)),
SK-CI = rep(x = 0, times = length(boxplotData)),
WB-CI = rep(x = 0, times = length(boxplotData)),
PG-FB = rep(x = 0, times = length(boxplotData)),
SK=FB = rep(x = 0, times = length(boxplotData)),
WB-FB = rep(x = 0, times = length(boxplotData)),
SK-PG = rep(x = 0, times = length(boxplotData)),
WB-PG = rep(x = 0, times = length(boxplotData)),
WB-SK = rep(x = 0, times = length(boxplotData)))
tempdata <- data.frame("Protein.Peptide" = colnames(boxplotData),
"ANOVA.pvalue" = rep(x = 0, times = length(boxplotData)),
"FB-CI" = rep(x = 0, times = length(boxplotData)),
"PG-CI" = rep(x = 0, times = length(boxplotData)),
"SK-CI" = rep(x = 0, times = length(boxplotData)),
"WB-CI" = rep(x = 0, times = length(boxplotData)),
"PG-FB" = rep(x = 0, times = length(boxplotData)),
"SK-FB" = rep(x = 0, times = length(boxplotData)),
"WB-FB" = rep(x = 0, times = length(boxplotData)),
"SK-PG" = rep(x = 0, times = length(boxplotData)),
"WB-PG" = rep(x = 0, times = length(boxplotData)),
"WB-SK" = rep(x = 0, times = length(boxplotData)))
View(tempdata)
siteANOVATukeyResults <- data.frame("Protein.Peptide" = colnames(boxplotData),
"ANOVA.pvalue" = rep(x = 0, times = length(boxplotData)),
"FB-CI" = rep(x = 0, times = length(boxplotData)),
"PG-CI" = rep(x = 0, times = length(boxplotData)),
"SK-CI" = rep(x = 0, times = length(boxplotData)),
"WB-CI" = rep(x = 0, times = length(boxplotData)),
"PG-FB" = rep(x = 0, times = length(boxplotData)),
"SK-FB" = rep(x = 0, times = length(boxplotData)),
"WB-FB" = rep(x = 0, times = length(boxplotData)),
"SK-PG" = rep(x = 0, times = length(boxplotData)),
"WB-PG" = rep(x = 0, times = length(boxplotData)),
"WB-SK" = rep(x = 0, times = length(boxplotData))) #Create a dataframe to hold all results
siteANOVATukeyResults <- siteANOVATukeyResults[-c(1:2),] #Remove the first two rows, since they are not peptides
head(siteANOVATukeyResults) #Confirm changes
siteANOVATukeyResults[1, 3:12] <- aov(boxplotData[,3] ~ boxplotData$Site) #Perform an ANOVA to test for significant differences between sites
temp <- aov(boxplotData[,3] ~ boxplotData$Site)
siteANOVATukeyResults[1, 2] <- summary(temp)[[1]][["Pr(>F)"]][[1]] #Perform an ANOVA to test for significant differences between sites
siteANOVATukeyResults
nPeptides <- (length(boxplotData)) #The number of columns in the dataframe. The first 2 columns are Site and Eelgrass.Condition
for(i in 3:nPeptides) { #For all of my columns with peptide IDs
siteANOVA <- aov(boxplotData[,i] ~ boxplotData$Site) #Perform an ANOVA to test for significant differences between sites
siteANOVATukeyResults[(i-2), 2] <- summary(temp)[[1]][["Pr(>F)"]][[1]] #Paste ANOVA p-value in table
} #Add all ANOVA p-values to the table
head(siteANOVATukeyResults)
View(boxplotFilenames)
View(siteANOVATukeyResults)
for(i in 3:nPeptides) { #For all of my columns with peptide IDs
siteANOVA <- aov(boxplotData[,i] ~ boxplotData$Site) #Perform an ANOVA to test for significant differences between sites
siteANOVATukeyResults[(i-2), 2] <- summary(siteANOVA)[[1]][["Pr(>F)"]][[1]] #Paste ANOVA p-value in table
} #Add all ANOVA p-values to the table
head(siteANOVATukeyResults)
temp2 <- TukeyHSD(temp) #Perform Tukey Honest Significant Difference post-hoc test to determine where ANOVA significance is coming from
temp2$`boxplotData$Site`[,4]
siteANOVATukeyResults[1,3:12] temp2$`boxplotData$Site`[,4]
siteANOVATukeyResults[1,3:12] <- temp2$`boxplotData$Site`[,4]
siteANOVATukeyResults
for(i in 3:nPeptides) { #For all of my columns with peptide IDs
siteANOVA <- aov(boxplotData[,i] ~ boxplotData$Site) #Perform an ANOVA to test for significant differences between sites
siteANOVATukeyResults[(i-2), 2] <- summary(siteANOVA)[[1]][["Pr(>F)"]][[1]] #Paste ANOVA p-value in table
siteTukeyHSD <- TukeyHSD(siteANOVA) #Perform Tukey Honest Significant Difference post-hoc test to determine where ANOVA significance is coming from
siteANOVATukeyResults[(i-2),3:12] <- siteTukeyHSD$`boxplotData$Site`[,4] #Paste Tukey results into table
} #Add all ANOVA and Tukey HSD p-values to the table
head(siteANOVATukeyResults)
getwd()
write.csv(siteANOVATukeyResults, "2017-11-06-OneWayANOVA-TukeyHSD-by-Site-pValues.csv", header = TRUE) #Wrote out table for future analyses
write.csv(siteANOVATukeyResults, "2017-11-06-OneWayANOVA-TukeyHSD-by-Site-pValues.csv") #Wrote out table for future analyses
getwd()
setwd("../../..") #Set working directory to the master SRM folder
getwd()
SRMDataNMDSAveragedCorrected <- read.csv("2017-10-10-Troubleshooting/2017-11-05-Integrated-Dataset/2017-11-05-Averaged-Areas-Pivoted-Corrected.csv", header = TRUE) #Import modified dataset. This dataset has rownames as the first column, column names as sample IDs. Area data is averaged and corrected (no NAs)
rownames(SRMDataNMDSAveragedCorrected) <- SRMDataNMDSAveragedCorrected[,1]
SRMDataNMDSAveragedCorrected <- SRMDataNMDSAveragedCorrected[,-1] #Remove first column of rownames
head(SRMDataNMDSAveragedCorrected) #Confirm import.
SRMDataNMDSAveragedCorrectedTransposed <- data.frame(t(SRMDataNMDSAveragedCorrected)) #Transpose the data
SRMDataNMDSAveragedCorrectedTransposed$Sample.Number <- rownames(SRMDataNMDSAveragedCorrectedTransposed) #Save rownames as a new column
head(SRMDataNMDSAveragedCorrectedTransposed) #Confirm changes
biologicalReplicates <- read.csv("2017-10-10-Troubleshooting/2017-10-24-Coefficient-of-Variation/2017-10-25-Biological-Replicate-Information-SampleID-Only.csv", na.strings = "N/A") #Import site and eelgrass condition information (i.e. biological replicate information)
head(biologicalReplicates) #Confirm import
colnames(biologicalReplicates) <- c("Sample.Number", "Site", "Eelgrass.Condition")
rownames(biologicalReplicates) <- biologicalReplicates$Sample.Number #Set sample number as row names
head(biologicalReplicates) #Confirm changes
biologicalReplicates$Site <- factor(biologicalReplicates$Site) #Remove 0 as a factor
biologicalReplicates$Eelgrass.Condition <- factor(biologicalReplicates$Eelgrass.Condition) #Remove 0 as a factor
str(biologicalReplicates) #Confirm factor reset
boxplotData <- merge(x = biologicalReplicates, y = SRMDataNMDSAveragedCorrectedTransposed, by = "Sample.Number") #Merge together
head(boxplotData) #Confirm merge
rownames(boxplotData) <- boxplotData$Sample.Number #Set sample number as row names
boxplotData <- boxplotData[-1] #Remove Sample.Number column
head(boxplotData) #Confirm changes
boxplotFilenames <- data.frame(protein = colnames(boxplotData),
modifier = rep(".jpeg", length(boxplotData))) #Make filename sheet
boxplotFilenames$siteFilenames <- paste(boxplotFilenames$protein, boxplotFilenames$modifier) #Make a new column for the site only filenames
head(boxplotFilenames) #Confirm changes
fileName <- boxplotFilenames$siteFilenames[3] #Set the file name choices as the first column
boxplot(boxplotData[,3] ~ boxplotData$Site, xlab = "Sites", ylab = "Abundance") #Create the boxplot
stripchart(boxplotData[,3] ~ boxplotData$Site, vertical = TRUE, method = "jitter", add = TRUE, pch = 20, col = 'blue') #Add each data point
siteANOVA <- aov(boxplotData[,3] ~ boxplotData$Site) #Perform an ANOVA to test for significant differences between sites
legend("topleft", bty = "n", legend = paste("ANOVA p-value =", format(summary(siteANOVA)[[1]][["Pr(>F)"]][[1]], digits=4))) #Plot p-value from ANOVA
title(fileName)
title(boxplotFilenames$protein)
title(boxplotFilenames$protein[3])
boxplot(boxplotData[,3] ~ boxplotData$Site, xlab = "Sites", ylab = "Abundance") #Create the boxplot
stripchart(boxplotData[,3] ~ boxplotData$Site, vertical = TRUE, method = "jitter", add = TRUE, pch = 20, col = 'blue') #Add each data point
siteANOVA <- aov(boxplotData[,3] ~ boxplotData$Site) #Perform an ANOVA to test for significant differences between sites
legend("topleft", bty = "n", legend = paste("ANOVA p-value =", format(summary(siteANOVA)[[1]][["Pr(>F)"]][[1]], digits=4))) #Plot p-value from ANOVA
title(boxplotFilenames$protein[3])
boxplot(boxplotData[,3] ~ boxplotData$Site, xlab = "Sites", ylab = "Abundance", cex = 12) #Create the boxplot
stripchart(boxplotData[,3] ~ boxplotData$Site, vertical = TRUE, method = "jitter", add = TRUE, pch = 20, col = 'blue') #Add each data point
siteANOVA <- aov(boxplotData[,3] ~ boxplotData$Site) #Perform an ANOVA to test for significant differences between sites
legend("topleft", bty = "n", legend = paste("ANOVA p-value =", format(summary(siteANOVA)[[1]][["Pr(>F)"]][[1]], digits=4))) #Plot p-value from ANOVA
title(boxplotFilenames$protein[3])
legend("topleft", bty = "n", legend = paste("ANOVA p-value =", format(summary(siteANOVA)[[1]][["Pr(>F)"]][[1]], digits=4)), cex = 5) #Plot p-value from ANOVA
legend("topleft", bty = "n", legend = paste("ANOVA p-value =", format(summary(siteANOVA)[[1]][["Pr(>F)"]][[1]], digits=4)), cex = 3) #Plot p-value from ANOVA
legend("topleft", bty = "n", legend = paste("ANOVA p-value =", format(summary(siteANOVA)[[1]][["Pr(>F)"]][[1]], digits=4)), cex = 1) #Plot p-value from ANOVA
boxplot(boxplotData[,3] ~ boxplotData$Site, xlab = "Sites", ylab = "Abundance", cex = 12) #Create the boxplot
stripchart(boxplotData[,3] ~ boxplotData$Site, vertical = TRUE, method = "jitter", add = TRUE, pch = 20, col = 'blue') #Add each data point
siteANOVA <- aov(boxplotData[,3] ~ boxplotData$Site) #Perform an ANOVA to test for significant differences between sites
legend("topleft", bty = "n", legend = paste("ANOVA p-value =", format(summary(siteANOVA)[[1]][["Pr(>F)"]][[1]], digits=4)), cex = 1) #Plot p-value from ANOVA
legend("topleft", bty = "n", legend = paste("ANOVA p-value =", format(summary(siteANOVA)[[1]][["Pr(>F)"]][[1]], digits=4)), cex = 1.5) #Plot p-value from ANOVA
legend("topleft", bty = "n", legend = paste("ANOVA p-value =", format(summary(siteANOVA)[[1]][["Pr(>F)"]][[1]], digits=4)), cex = 1.2) #Plot p-value from ANOVA
boxplot(boxplotData[,3] ~ boxplotData$Site, xlab = "Sites", ylab = "Abundance", cex = 12) #Create the boxplot
stripchart(boxplotData[,3] ~ boxplotData$Site, vertical = TRUE, method = "jitter", add = TRUE, pch = 20, col = 'blue') #Add each data point
siteANOVA <- aov(boxplotData[,3] ~ boxplotData$Site) #Perform an ANOVA to test for significant differences between sites
legend("topleft", bty = "n", legend = paste("ANOVA p-value =", format(summary(siteANOVA)[[1]][["Pr(>F)"]][[1]], digits=4)), cex = 1.2) #Plot p-value from ANOVA
legend("bottomright", bty = "n", legend = paste("ANOVA p-value =", format(summary(siteANOVA)[[1]][["Pr(>F)"]][[1]], digits=4)), cex = 1.2) #Plot p-value from ANOVA
legend("topleft", bty = "n", legend = paste("ANOVA p-value =", format(summary(siteANOVA)[[1]][["Pr(>F)"]][[1]], digits=4)), cex = 1.2) #Plot p-value from ANOVA
boxplot(boxplotData[,3] ~ boxplotData$Site, xlab = "Sites", ylab = "Abundance", cex.lab = 2, cex.axis = 1.5) #Create the boxplot
stripchart(boxplotData[,3] ~ boxplotData$Site, vertical = TRUE, method = "jitter", add = TRUE, pch = 20, col = 'blue') #Add each data point
siteANOVA <- aov(boxplotData[,3] ~ boxplotData$Site) #Perform an ANOVA to test for significant differences between sites
legend("topleft", bty = "n", legend = paste("ANOVA p-value =", format(summary(siteANOVA)[[1]][["Pr(>F)"]][[1]], digits=4)), cex = 1.2) #Plot p-value from ANOVA
title(boxplotFilenames$protein[3])
boxplot(boxplotData[,3] ~ boxplotData$Site, xlab = "Sites", ylab = "Abundance", cex.lab = 1.8, cex.axis = 1.5) #Create the boxplot
stripchart(boxplotData[,3] ~ boxplotData$Site, vertical = TRUE, method = "jitter", add = TRUE, pch = 20, col = 'blue') #Add each data point
siteANOVA <- aov(boxplotData[,3] ~ boxplotData$Site) #Perform an ANOVA to test for significant differences between sites
legend("topleft", bty = "n", legend = paste("ANOVA p-value =", format(summary(siteANOVA)[[1]][["Pr(>F)"]][[1]], digits=4)), cex = 1.2) #Plot p-value from ANOVA
getwd()
SRMDataNMDSAveragedCorrected <- read.csv("2017-10-10-Troubleshooting/2017-11-05-Integrated-Dataset/2017-11-05-Averaged-Areas-Pivoted-Corrected.csv", header = TRUE) #Import modified dataset. This dataset has rownames as the first column, column names as sample IDs. Area data is averaged and corrected (no NAs)
rownames(SRMDataNMDSAveragedCorrected) <- SRMDataNMDSAveragedCorrected[,1]
SRMDataNMDSAveragedCorrected <- SRMDataNMDSAveragedCorrected[,-1] #Remove first column of rownames
head(SRMDataNMDSAveragedCorrected) #Confirm import.
SRMDataNMDSAveragedCorrectedTransposed <- data.frame(t(SRMDataNMDSAveragedCorrected)) #Transpose the data
SRMDataNMDSAveragedCorrectedTransposed$Sample.Number <- rownames(SRMDataNMDSAveragedCorrectedTransposed) #Save rownames as a new column
head(SRMDataNMDSAveragedCorrectedTransposed) #Confirm changes
biologicalReplicates <- read.csv("2017-10-10-Troubleshooting/2017-10-24-Coefficient-of-Variation/2017-10-25-Biological-Replicate-Information-SampleID-Only.csv", na.strings = "N/A") #Import site and eelgrass condition information (i.e. biological replicate information)
head(biologicalReplicates) #Confirm import
colnames(biologicalReplicates) <- c("Sample.Number", "Site", "Eelgrass.Condition")
rownames(biologicalReplicates) <- biologicalReplicates$Sample.Number #Set sample number as row names
head(biologicalReplicates) #Confirm changes
biologicalReplicates$Site <- factor(biologicalReplicates$Site) #Remove 0 as a factor
biologicalReplicates$Eelgrass.Condition <- factor(biologicalReplicates$Eelgrass.Condition) #Remove 0 as a factor
str(biologicalReplicates) #Confirm factor reset
boxplotData <- merge(x = biologicalReplicates, y = SRMDataNMDSAveragedCorrectedTransposed, by = "Sample.Number") #Merge together
head(boxplotData) #Confirm merge
rownames(boxplotData) <- boxplotData$Sample.Number #Set sample number as row names
boxplotData <- boxplotData[-1] #Remove Sample.Number column
head(boxplotData) #Confirm changes
boxplotFilenames <- data.frame(protein = colnames(boxplotData),
modifier = rep(".jpeg", length(boxplotData))) #Make filename sheet
boxplotFilenames$siteFilenames <- paste(boxplotFilenames$protein, boxplotFilenames$modifier) #Make a new column for the site only filenames
head(boxplotFilenames) #Confirm changes
setwd("2017-10-10-Troubleshooting/2017-11-05-Integrated-Dataset/2017-11-06-Boxplots/")
getwd()
nPeptides <- (length(boxplotData)) #The number of columns in the dataframe. The first 2 columns are Site and Eelgrass.Condition
for(i in 3:nPeptides) { #For all of my columns with peptide IDs
fileName <- boxplotFilenames$siteFilenames[i] #Set the file name choices as the first column
jpeg(filename = fileName, width = 1000, height = 750) #Save using set file name
boxplot(boxplotData[,i] ~ boxplotData$Site, xlab = "Sites", ylab = "Abundance", cex.lab = 1.8, cex.axis = 1.5) #Create the boxplot
stripchart(boxplotData[,i] ~ boxplotData$Site, vertical = TRUE, method = "jitter", add = TRUE, pch = 20, col = 'blue') #Add each data point
siteANOVA <- aov(boxplotData[,i] ~ boxplotData$Site) #Perform an ANOVA to test for significant differences between sites
legend("topleft", bty = "n", legend = paste("ANOVA p-value =", format(summary(siteANOVA)[[1]][["Pr(>F)"]][[1]], digits=4))) #Plot p-value from ANOVA
title(boxplotFilenames$protein[i])
dev.off() #Close file
}
boxplot(boxplotData[,3] ~ boxplotData$Site, xlab = "Sites", ylab = "Abundance", cex.lab = 1.8, cex.axis = 1.5) #Create the boxplot
stripchart(boxplotData[,3] ~ boxplotData$Site, vertical = TRUE, method = "jitter", add = TRUE, pch = 20, col = 'blue') #Add each data point
siteANOVA <- aov(boxplotData[,3] ~ boxplotData$Site) #Perform an ANOVA to test for significant differences between sites
legend("topleft", bty = "n", legend = paste("ANOVA p-value =", format(summary(siteANOVA)[[1]][["Pr(>F)"]][[1]], digits=4)), cex = 1.2) #Plot p-value from ANOVA
title(boxplotFilenames$protein[3])
boxplot(boxplotData[,3] ~ boxplotData$Site, xlab = "Sites", ylab = "Abundance", cex.lab = 1.5, cex.axis = 1.5) #Create the boxplot
stripchart(boxplotData[,3] ~ boxplotData$Site, vertical = TRUE, method = "jitter", add = TRUE, pch = 20, col = 'blue') #Add each data point
siteANOVA <- aov(boxplotData[,3] ~ boxplotData$Site) #Perform an ANOVA to test for significant differences between sites
legend("topleft", bty = "n", legend = paste("ANOVA p-value =", format(summary(siteANOVA)[[1]][["Pr(>F)"]][[1]], digits=4)), cex = 1.2) #Plot p-value from ANOVA
title(boxplotFilenames$protein[3])
boxplot(boxplotData[,3] ~ boxplotData$Site, xlab = "Sites", ylab = "", cex.lab = 1.5, cex.axis = 1.5) #Create the boxplot
stripchart(boxplotData[,3] ~ boxplotData$Site, vertical = TRUE, method = "jitter", add = TRUE, pch = 20, col = 'blue') #Add each data point
siteANOVA <- aov(boxplotData[,3] ~ boxplotData$Site) #Perform an ANOVA to test for significant differences between sites
legend("topleft", bty = "n", legend = paste("ANOVA p-value =", format(summary(siteANOVA)[[1]][["Pr(>F)"]][[1]], digits=4)), cex = 1.2) #Plot p-value from ANOVA
title(ylab = "Abundance", line = 0, cex.lab = 2)
boxplot(boxplotData[,3] ~ boxplotData$Site, xlab = "Sites", ylab = "", cex.lab = 1.5, cex.axis = 1.5) #Create the boxplot
stripchart(boxplotData[,3] ~ boxplotData$Site, vertical = TRUE, method = "jitter", add = TRUE, pch = 20, col = 'blue') #Add each data point
siteANOVA <- aov(boxplotData[,3] ~ boxplotData$Site) #Perform an ANOVA to test for significant differences between sites
legend("topleft", bty = "n", legend = paste("ANOVA p-value =", format(summary(siteANOVA)[[1]][["Pr(>F)"]][[1]], digits=4)), cex = 1.2) #Plot p-value from ANOVA
title(ylab = "Abundance", line = 2, cex.lab = 2)
boxplot(boxplotData[,3] ~ boxplotData$Site, xlab = "Sites", ylab = "", cex.lab = 1.5, cex.axis = 1.5) #Create the boxplot
stripchart(boxplotData[,3] ~ boxplotData$Site, vertical = TRUE, method = "jitter", add = TRUE, pch = 20, col = 'blue') #Add each data point
title(ylab = "Abundance", line = 3, cex.lab = 2)
title(ylab = "Abundance", line = 2.5, cex.lab = 2)
boxplot(boxplotData[,3] ~ boxplotData$Site, xlab = "Sites", ylab = "", cex.lab = 1.5, cex.axis = 1.5) #Create the boxplot
title(ylab = "Abundance", line = 2.5, cex.lab = 2)
boxplot(boxplotData[,3] ~ boxplotData$Site, xlab = "Sites", ylab = "", cex.lab = 1.5, cex.axis = 1.5) #Create the boxplot
title(ylab = "Abundance", line = 2.3, cex.lab = 2)
getwd()
setwd("../../..") #Set working directory to the master SRM folder
getwd()
SRMDataNMDSAveragedCorrected <- read.csv("2017-10-10-Troubleshooting/2017-11-05-Integrated-Dataset/2017-11-05-Averaged-Areas-Pivoted-Corrected.csv", header = TRUE) #Import modified dataset. This dataset has rownames as the first column, column names as sample IDs. Area data is averaged and corrected (no NAs)
rownames(SRMDataNMDSAveragedCorrected) <- SRMDataNMDSAveragedCorrected[,1]
SRMDataNMDSAveragedCorrected <- SRMDataNMDSAveragedCorrected[,-1] #Remove first column of rownames
head(SRMDataNMDSAveragedCorrected) #Confirm import.
SRMDataNMDSAveragedCorrectedTransposed <- data.frame(t(SRMDataNMDSAveragedCorrected)) #Transpose the data
SRMDataNMDSAveragedCorrectedTransposed$Sample.Number <- rownames(SRMDataNMDSAveragedCorrectedTransposed) #Save rownames as a new column
head(SRMDataNMDSAveragedCorrectedTransposed) #Confirm changes
biologicalReplicates <- read.csv("2017-10-10-Troubleshooting/2017-10-24-Coefficient-of-Variation/2017-10-25-Biological-Replicate-Information-SampleID-Only.csv", na.strings = "N/A") #Import site and eelgrass condition information (i.e. biological replicate information)
head(biologicalReplicates) #Confirm import
colnames(biologicalReplicates) <- c("Sample.Number", "Site", "Eelgrass.Condition")
rownames(biologicalReplicates) <- biologicalReplicates$Sample.Number #Set sample number as row names
head(biologicalReplicates) #Confirm changes
biologicalReplicates$Site <- factor(biologicalReplicates$Site) #Remove 0 as a factor
biologicalReplicates$Eelgrass.Condition <- factor(biologicalReplicates$Eelgrass.Condition) #Remove 0 as a factor
str(biologicalReplicates) #Confirm factor reset
boxplotData <- merge(x = biologicalReplicates, y = SRMDataNMDSAveragedCorrectedTransposed, by = "Sample.Number") #Merge together
head(boxplotData) #Confirm merge
rownames(boxplotData) <- boxplotData$Sample.Number #Set sample number as row names
boxplotData <- boxplotData[-1] #Remove Sample.Number column
head(boxplotData) #Confirm changes
boxplotFilenames <- data.frame(protein = colnames(boxplotData),
modifier = rep(".jpeg", length(boxplotData))) #Make filename sheet
boxplotFilenames$siteFilenames <- paste(boxplotFilenames$protein, boxplotFilenames$modifier) #Make a new column for the site only filenames
setwd("2017-10-10-Troubleshooting/2017-11-05-Integrated-Dataset/2017-11-06-Boxplots/")
getwd()
nPeptides <- (length(boxplotData)) #The number of columns in the dataframe. The first 2 columns are Site and Eelgrass.Condition
for(i in 3:nPeptides) { #For all of my columns with peptide IDs
fileName <- boxplotFilenames$siteFilenames[i] #Set the file name choices as the first column
jpeg(filename = fileName, width = 1000, height = 750) #Save using set file name
boxplot(boxplotData[,i] ~ boxplotData$Site, xlab = "Sites", ylab = "Abundance", cex.lab = 2, cex.axis = 1.5) #Create the boxplot
title(ylab = "Abundance", line = 2.3, cex.lab = 2) #Add the y-axis label
stripchart(boxplotData[,i] ~ boxplotData$Site, vertical = TRUE, method = "jitter", add = TRUE, pch = 20, col = 'blue') #Add each data point
siteANOVA <- aov(boxplotData[,i] ~ boxplotData$Site) #Perform an ANOVA to test for significant differences between sites
legend("topleft", bty = "n", legend = paste("ANOVA p-value =", format(summary(siteANOVA)[[1]][["Pr(>F)"]][[1]], digits=4))) #Plot p-value from ANOVA
title(boxplotFilenames$protein[i])
dev.off() #Close file
}
for(i in 3:nPeptides) { #For all of my columns with peptide IDs
fileName <- boxplotFilenames$siteFilenames[i] #Set the file name choices as the first column
jpeg(filename = fileName, width = 1000, height = 750) #Save using set file name
boxplot(boxplotData[,i] ~ boxplotData$Site, xlab = "Sites", ylab = "", cex.lab = 2, cex.axis = 1.5) #Create the boxplot
title(ylab = "Abundance", line = 2.3, cex.lab = 2) #Add the y-axis label
stripchart(boxplotData[,i] ~ boxplotData$Site, vertical = TRUE, method = "jitter", add = TRUE, pch = 20, col = 'blue') #Add each data point
siteANOVA <- aov(boxplotData[,i] ~ boxplotData$Site) #Perform an ANOVA to test for significant differences between sites
legend("topleft", bty = "n", legend = paste("ANOVA p-value =", format(summary(siteANOVA)[[1]][["Pr(>F)"]][[1]], digits=4))) #Plot p-value from ANOVA
title(boxplotFilenames$protein[i])
dev.off() #Close file
}
getwd()
setwd("../../..") #Set working directory to the master SRM folder
getwd()
SRMDataNMDSAveragedCorrected <- read.csv("2017-10-10-Troubleshooting/2017-11-05-Integrated-Dataset/2017-11-05-Averaged-Areas-Pivoted-Corrected.csv", header = TRUE) #Import modified dataset. This dataset has rownames as the first column, column names as sample IDs. Area data is averaged and corrected (no NAs)
rownames(SRMDataNMDSAveragedCorrected) <- SRMDataNMDSAveragedCorrected[,1]
SRMDataNMDSAveragedCorrected <- SRMDataNMDSAveragedCorrected[,-1] #Remove first column of rownames
head(SRMDataNMDSAveragedCorrected) #Confirm import.
SRMDataNMDSAveragedCorrectedTransposed <- data.frame(t(SRMDataNMDSAveragedCorrected)) #Transpose the data
SRMDataNMDSAveragedCorrectedTransposed$Sample.Number <- rownames(SRMDataNMDSAveragedCorrectedTransposed) #Save rownames as a new column
head(SRMDataNMDSAveragedCorrectedTransposed) #Confirm changes
biologicalReplicates <- read.csv("2017-10-10-Troubleshooting/2017-10-24-Coefficient-of-Variation/2017-10-25-Biological-Replicate-Information-SampleID-Only.csv", na.strings = "N/A") #Import site and eelgrass condition information (i.e. biological replicate information)
head(biologicalReplicates) #Confirm import
colnames(biologicalReplicates) <- c("Sample.Number", "Site", "Eelgrass.Condition")
rownames(biologicalReplicates) <- biologicalReplicates$Sample.Number #Set sample number as row names
head(biologicalReplicates) #Confirm changes
biologicalReplicates$Site <- factor(biologicalReplicates$Site) #Remove 0 as a factor
biologicalReplicates$Eelgrass.Condition <- factor(biologicalReplicates$Eelgrass.Condition) #Remove 0 as a factor
str(biologicalReplicates) #Confirm factor reset
boxplotData <- merge(x = biologicalReplicates, y = SRMDataNMDSAveragedCorrectedTransposed, by = "Sample.Number") #Merge together
head(boxplotData) #Confirm merge
rownames(boxplotData) <- boxplotData$Sample.Number #Set sample number as row names
boxplotData <- boxplotData[-1] #Remove Sample.Number column
head(boxplotData) #Confirm changes
boxplotFilenames <- data.frame(protein = colnames(boxplotData),
modifier = rep(".jpeg", length(boxplotData))) #Make filename sheet
boxplotFilenames$siteFilenames <- paste(boxplotFilenames$protein, boxplotFilenames$modifier) #Make a new column for the site only filenames
head(boxplotFilenames) #Confirm changes
setwd("2017-10-10-Troubleshooting/2017-11-05-Integrated-Dataset/2017-11-06-Boxplots/")
getwd()
nPeptides <- (length(boxplotData)) #The number of columns in the dataframe. The first 2 columns are Site and Eelgrass.Condition
getwd()
siteANOVATukeyResults <- data.frame("Protein.Peptide" = colnames(boxplotData),
"ANOVA.pvalue" = rep(x = 0, times = length(boxplotData)),
"FB-CI" = rep(x = 0, times = length(boxplotData)),
"PG-CI" = rep(x = 0, times = length(boxplotData)),
"SK-CI" = rep(x = 0, times = length(boxplotData)),
"WB-CI" = rep(x = 0, times = length(boxplotData)),
"PG-FB" = rep(x = 0, times = length(boxplotData)),
"SK-FB" = rep(x = 0, times = length(boxplotData)),
"WB-FB" = rep(x = 0, times = length(boxplotData)),
"SK-PG" = rep(x = 0, times = length(boxplotData)),
"WB-PG" = rep(x = 0, times = length(boxplotData)),
"WB-SK" = rep(x = 0, times = length(boxplotData))) #Create a dataframe to hold all results
siteANOVATukeyResults <- siteANOVATukeyResults[-c(1:2),] #Remove the first two rows, since they are not peptides
head(siteANOVATukeyResults) #Confirm changes
for(i in 3:nPeptides) { #For all of my columns with peptide IDs
siteANOVA <- aov(boxplotData[,i] ~ boxplotData$Site) #Perform an ANOVA to test for significant differences between sites
siteANOVATukeyResults[(i-2), 2] <- summary(siteANOVA)[[1]][["Pr(>F)"]][[1]] #Paste ANOVA p-value in table
siteTukeyHSD <- TukeyHSD(siteANOVA) #Perform Tukey Honest Significant Difference post-hoc test to determine where ANOVA significance is coming from
siteANOVATukeyResults[(i-2),3:12] <- siteTukeyHSD$`boxplotData$Site`[,4] #Paste Tukey results into table
} #Add all ANOVA and Tukey HSD p-values to the table
head(siteANOVATukeyResults) #Confirm that tests were completed
?pwr
??pwr
install.packages("pwr")
library(pwr) #Load package
pwr.anova.test(k = 5, n = 7, sig.level = 0.05)
pwr.anova.test(k = 5, n = 7, sig.level = 0.05, power = NULL)
pwr.anova.test(k = 5, n = 7, f = 0.1, sig.level = 0.05, power = NULL) #Small effect
pwr.anova.test(k = 5, n = 7, f = 0.25, sig.level = 0.05, power = NULL) #Power = 0.06537487
pwr.anova.test(k = 5, n = 7, f = 0.4, sig.level = 0.05, power = NULL) #Power = 0.06537487
pwr.anova.test(k = 5, n = 7.5, f = 0.1, sig.level = 0.05, power = NULL) #Power = 0.06537487
pwr.anova.test(k = 5, n = 8, f = 0.1, sig.level = 0.05, power = NULL) #Power = 0.06537487
pwr.anova.test(k = 5, n = 7, f = 0.4, sig.level = 0.05, power = NULL)[5] #Power = 0.381159
pwr.anova.test(k = 5, n = 7, f = 0.1, sig.level = 0.05, power = NULL)[5] #Power = 0.06537487
pwr.anova.test(k = 5, n = 7, f = 0.25, sig.level = 0.05, power = NULL)[5] #Power = 0.163053
pwr.anova.test(k = 5, n = 10, f = 0.4, sig.level = 0.05, power = NULL)[5] #Power = 0.381159
pwr.anova.test(k = 5, n = 10, f = 0.4, sig.level = 0.05, power = NULL)[5] #Power = 0.381159
pwr.anova.test(k = 5, n = 7, f = NULL, sig.level = 0.05, power = 1)[3] #f = 0.06537487
install.packages("pwr") #Install the power calculation package
library(pwr) #Load package
pwr.anova.test(k = 5, n = 7, f = NULL, sig.level = 0.05, power = 1)[3] #f = 0.06537487
pwr.anova.test(k = 5, n = 7, f = NULL, sig.level = 0.05, power = 0.95)[3] #f = 0.163053
pwr.anova.test(k = 5, n = 7, f = NULL, sig.level = 0.05, power = 0.90)[3] #f = 0.381159
pwr.anova.test(k = 5, n = 7, f = NULL, sig.level = 0.05, power = 0.85)[3] #f = 0.163053
pwr.anova.test(k = 5, n = 7, f = NULL, sig.level = 0.05, power = 0.80)[3] #f = 0.381159
