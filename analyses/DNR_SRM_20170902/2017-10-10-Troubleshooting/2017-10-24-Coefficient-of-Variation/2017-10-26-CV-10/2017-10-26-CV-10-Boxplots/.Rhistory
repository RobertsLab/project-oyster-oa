SRMAveragedAreas <- SRMModifiedAreasAdjusted #Dupliate dataframe
SRMAveragedAreas$Average.Area <- ((SRMAveragedAreas$Replicate1 + SRMAveragedAreas$Replicate2)/2) #Average peak areas and save as a new column
SRMAveragedAreas <- SRMAveragedAreas[, -c(3:4)] #Remove replicate area columns
head(SRMAveragedAreas) #Confirm changes
#Reformat data
SRMAveragedAreasPivoted <- dcast(SRMAveragedAreas, Protein.Name ~ Sample) #Cast table!
head(SRMAveragedAreasPivoted) #Confirm table cast!
SRMAveragedAreasPivotedCorrected <- SRMAveragedAreasPivoted #Duplicate dataframe
SRMAveragedAreasPivotedCorrected[is.na(SRMAveragedAreasPivotedCorrected)] <- 0 #Replace NAs with 0s
head(SRMAveragedAreasPivotedCorrected) #Confirm there are no NAs
rownames(SRMAveragedAreasPivotedCorrected) <- SRMAveragedAreasPivotedCorrected$Protein.Name #Save protein name column as rownames
SRMAveragedAreasPivotedCorrected <- SRMAveragedAreasPivotedCorrected[, -1] #Remove Protein.Name column
head(SRMAveragedAreasPivotedCorrected) #Confirm changes
write.csv(SRMAveragedAreasPivotedCorrected, "2017-10-10-Troubleshooting/2017-10-24-Coefficient-of-Variation/2017-10-26-CV-15/2017-10-26-Averaged-Pivoted-Corrected-SRM-Data-after-CV15-and-Distance-Filtering.csv") #Wrote out to make subsequent analyses easier.
setwd("../../..") #Set working directory to the master SRM folder
getwd()
setwd("project-oyster-oa/analyses/DNR_SRM_20170902/")
getwd()
SRMDataNMDSAveragedCorrected <- read.csv("2017-10-10-Troubleshooting/2017-10-24-Coefficient-of-Variation/2017-10-26-CV-15/2017-10-26-Averaged-Pivoted-Corrected-SRM-Data-after-CV15-and-Distance-Filtering.csv", header = TRUE) #Import modified dataset. This dataset has rownames as the first column, column names as sample IDs. Area data is averaged and corrected (no NAs)
rownames(SRMDataNMDSAveragedCorrected) <- SRMDataNMDSAveragedCorrected[,1]
SRMDataNMDSAveragedCorrected <- SRMDataNMDSAveragedCorrected[,-1] #Remove first column of rownames
head(SRMDataNMDSAveragedCorrected) #Confirm import.
SRMDataNMDSAveragedCorrectedTransposed <- data.frame(t(SRMDataNMDSAveragedCorrected)) #Transpose the data
SRMDataNMDSAveragedCorrectedTransposed$Sample.Number <- rownames(SRMDataNMDSAveragedCorrectedTransposed) #Save rownames as a new column
head(SRMDataNMDSAveragedCorrectedTransposed) #Confirm changes
biologicalReplicates <- read.csv("2017-10-10-Troubleshooting/2017-10-24-Coefficient-of-Variation/2017-10-25-Biological-Replicate-Information-SampleID-Only.csv", na.strings = "N/A") #Import site and eelgrass condition information (i.e. biological replicate information)
head(biologicalReplicates) #Confirm import
colnames(biologicalReplicates) <- c("Sample.Number", "Site", "Eelgrass.Condition")
rownames(biologicalReplicates) <- biologicalReplicates$Sample.Number #Set sample number as row names
head(biologicalReplicates) #Confirm changes
biologicalReplicates$Site <- factor(biologicalReplicates$Site) #Remove 0 as a factor
biologicalReplicates$Eelgrass.Condition <- factor(biologicalReplicates$Eelgrass.Condition) #Remove 0 as a factor
str(biologicalReplicates) #Confirm factor reset
View(SRMDataNMDSAveragedCorrected)
SRMModifiedAreas <- read.csv("2017-10-10-Troubleshooting/2017-10-24-Coefficient-of-Variation/2017-10-24-Norm-modSR.csv", header = TRUE) #Import Steven's modified dataset
head(SRMModifiedAreas) #Confirm import
SRMModifiedAreas <- subset(SRMModifiedAreas, subset = SRMModifiedAreas$CoV <= 15) #Only keep rows with coefficient of variation ≤ 15
max(SRMModifiedAreas$CoV) <= 15 #Statement should be TRUE if maximum does not exceed 15
SRMModifiedAreas <- SRMModifiedAreas[,-c(1, 6)] #Remove unnecessary columns (first column and CoV column)
head(SRMModifiedAreas) #Confirm changes. Now I only have Protein.Name, Sample, Replicate1 and Replicate2 (peak areas from Skyline, which are a proxy for protein abundance)
SRMModifiedAreas <- read.csv("2017-10-10-Troubleshooting/2017-10-24-Coefficient-of-Variation/2017-10-24-Norm-modSR.csv", header = TRUE) #Import Steven's modified dataset
head(SRMModifiedAreas) #Confirm import
SRMModifiedAreas <- subset(SRMModifiedAreas, subset = SRMModifiedAreas$CoV <= 15) #Only keep rows with coefficient of variation ≤ 15
SRMModifiedAreas
max(SRMModifiedAreas$CoV) <= 15 #Statement should be TRUE if maximum does not exceed 15
SRMModifiedAreas <- SRMModifiedAreas[,-c(1, 6)] #Remove unnecessary columns (first column and CoV column)
head(SRMModifiedAreas) #Confirm changes. Now I only have Protein.Name, Sample, Replicate1 and Replicate2 (peak areas from Skyline, which are a proxy for protein abundance)
SRMModifiedAreasReplicate1 <- SRMModifiedAreas[, 1:3] #Duplicate dataframe, keeping only Replicate 1 information
SRMModifiedAreasReplicate1$Sample.Number <- paste(SRMModifiedAreasReplicate1$Sample, "-1") #Create a new column with sample and replicate number
SRMModifiedAreasReplicate1 <- SRMModifiedAreasReplicate1[, -2] #Remove Sample column
colnames(SRMModifiedAreasReplicate1) <- c("Protein.Name", "Area", "Sample") #Change column names
head(SRMModifiedAreasReplicate1) #Confirm changes
SRMModifiedAreasReplicate2 <- SRMModifiedAreas[, c(1, 2, 4)] #Duplicate dataframe, keeping only Replicate 2 information
SRMModifiedAreasReplicate2$Sample.Number <- paste(SRMModifiedAreasReplicate2$Sample, "-2") #Create a new column with sample and replicate number
SRMModifiedAreasReplicate2 <- SRMModifiedAreasReplicate2[, -2] #Remove Sample column
colnames(SRMModifiedAreasReplicate2) <- c("Protein.Name", "Area", "Sample") #Change column names
head(SRMModifiedAreasReplicate2) #Confirm changes
SRMModifiedAreasLong <- rbind(SRMModifiedAreasReplicate1, SRMModifiedAreasReplicate2) #Paste dataframes together
head(SRMModifiedAreasLong) #Confirm changes
tail(SRMModifiedAreasLong) #Confirm changes
transform(SRMModifiedAreasLong, Area = as.numeric(Area)) #Make sure Area is recognized as a numeric variable
is.numeric(SRMModifiedAreasLong$Area) #Confirm change
library(reshape2) #Install package to pivot table
SRMModifiedAreasPivoted <- dcast(SRMModifiedAreasLong, Protein.Name ~ Sample, value.var = "Area") #Cast table! Protein.Name remains as a column with Sample Number as column headers. Area column defined as values.
head(SRMModifiedAreasPivoted) #Confirm cast
rownames(SRMModifiedAreasPivoted) <- SRMModifiedAreasPivoted[, 1] #Save Protein.Name column as rownames
SRMModifiedAreasPivoted <- SRMModifiedAreasPivoted[, -1] #Remove Protein.Name column
head(SRMModifiedAreasPivoted) #Confirm changes
SRMModifiedAreasPivotedCorrected <- SRMModifiedAreasPivoted #Duplicate dataframe
SRMModifiedAreasPivotedCorrected[is.na(SRMModifiedAreasPivotedCorrected)] <- 0 #Replace NAs with 0s
head(SRMModifiedAreasPivotedCorrected) #Confirm there are no NAs
#### LOAD FUNCTIONS NEEDED FOR NMDS ####
#Load the source file for the biostats package
source("biostats.R") #Either load the source R script or copy paste
area.protID <- SRMModifiedAreasPivotedCorrected #Save all area data as a new dataframe
head(area.protID) #Confirm changes
area.t <- t(area.protID) #Transpose the file so that rows and columns are switched
head(area.t) #Confirm transposition
area.tra <- (area.t+1) #Add 1 to all values before transforming
area.tra <- data.trans(area.tra, method = 'log', plot = FALSE) #log(x+1) transformation
proc.nmds.norm.euclidean <- metaMDS(area.t, distance = 'euclidean', k = 2, trymax = 10000, autotransform = FALSE) #Make MDS dissimilarity matrix using euclidean distance. Julian confirmed th
NMDSCoordinates <- proc.nmds.norm.euclidean$points #Save NMDS coordinates of each point in a new dataframe
head(NMDSCoordinates) #Confirm dataframe creation
nSamples <- length(NMDSCoordinates)/2 #Calculate the number of samples
sampleDistances <- vector(length = nSamples) #Create an empty vector to store distance values
for(i in 1:nSamples) { #For rows in NMDSCoordinates
sampleDistances[i] <- sqrt((NMDSCoordinates[i,1]-NMDSCoordinates[i,2])^2 + (NMDSCoordinates[i+1,1]-NMDSCoordinates[i+1,2])^2) #Calculate distance between ordinations
print(sampleDistances[i]) #Print the distance value
}
sampleDistances #Confirm vector creation. This vector has all consecutive pairs, including those that are not paris of technical replicates. I need to retain just the odd numbered rows.
technicalReplicates <- rownames(NMDSCoordinates) #Save rownames as a new vector
technicalReplicates #Confirm vector creation
technicalReplicateDistances <- data.frame(Sample = technicalReplicates[seq(from = 1, to = nSamples, by = 2)],
Distance = sampleDistances[seq(from = 1, to = nSamples, by = 2)]) #Create a new dataframe with just odd numbered row distances (technical replicate pairs)
head(technicalReplicateDistances) #Confirm dataframe creation
tail(technicalReplicateDistances) #Confirm dataframe creation
histogram(technicalReplicateDistances$Distance) #Make a histogram of how many distance fall in bins. Looks like a conservative upper fence would be 0.2, which would allow me to remove samples with the highest ordination distances.
removeThese <- technicalReplicateDistances$Sample[technicalReplicateDistances$Distance >= 0.15] #Identify samples that need to be removed.
removeThese <- gsub(" -1", "", removeThese) #Remove " -1" from the end of each sample ID
removeThese #Confirm changes
removeThese <- technicalReplicateDistances$Sample[technicalReplicateDistances$Distance >= 0.20] #Identify samples that need to be removed.
removeThese <- gsub(" -1", "", removeThese) #Remove " -1" from the end of each sample ID
removeThese #Confirm changes
SRMModifiedAreasAdjusted <- SRMModifiedAreas[! SRMModifiedAreas$Sample %in% removeThese, ] #Duplicate original dataframe, but remove samples with large ordination distances saved in the vector removeThese
SRMModifiedAreasAdjustedReplicate1 <- SRMModifiedAreasAdjusted[, 1:3] #Duplicate dataframe, keeping only Replicate 1 information
SRMModifiedAreasAdjustedReplicate1$Sample.Number <- paste(SRMModifiedAreasAdjustedReplicate1$Sample, "-1") #Create a new column with sample and replicate number
SRMModifiedAreasAdjustedReplicate1 <- SRMModifiedAreasAdjustedReplicate1[, -2] #Remove Sample column
colnames(SRMModifiedAreasAdjustedReplicate1) <- c("Protein.Name", "Area", "Sample") #Change column names
head(SRMModifiedAreasAdjustedReplicate1) #Confirm changes
SRMModifiedAreasAdjustedReplicate2 <- SRMModifiedAreasAdjusted[, c(1, 2, 4)] #Duplicate dataframe, keeping only Replicate 2 information
SRMModifiedAreasAdjustedReplicate2$Sample.Number <- paste(SRMModifiedAreasAdjustedReplicate2$Sample, "-2") #Create a new column with sample and replicate number
SRMModifiedAreasAdjustedReplicate2 <- SRMModifiedAreasAdjustedReplicate2[, -2] #Remove Sample column
colnames(SRMModifiedAreasAdjustedReplicate2) <- c("Protein.Name", "Area", "Sample") #Change column names
head(SRMModifiedAreasAdjustedReplicate2) #Confirm changes
SRMModifiedAreasAdjustedLong <- rbind(SRMModifiedAreasAdjustedReplicate1, SRMModifiedAreasAdjustedReplicate2) #Paste dataframes together
head(SRMModifiedAreasAdjustedLong) #Confirm changes
tail(SRMModifiedAreasAdjustedLong) #Confirm changes
transform(SRMModifiedAreasAdjustedLong, Area = as.numeric(Area)) #Make sure Area is recognized as a numeric variable
is.numeric(SRMModifiedAreasAdjustedLong$Area) #Confirm change
SRMModifiedAreasAdjustedPivoted <- dcast(SRMModifiedAreasAdjustedLong, Protein.Name ~ Sample, value.var = "Area") #Cast table! Protein.Name remains as a column with Sample Number as column headers. Area column defined as values.
head(SRMModifiedAreasAdjustedPivoted) #Confirm cast
rownames(SRMModifiedAreasAdjustedPivoted) <- SRMModifiedAreasAdjustedPivoted[, 1] #Save Protein.Name column as rownames
SRMModifiedAreasAdjustedPivoted <- SRMModifiedAreasAdjustedPivoted[, -1] #Remove Protein.Name column
head(SRMModifiedAreasAdjustedPivoted) #Confirm changes
SRMModifiedAreasAdjustedPivotedCorrected <- SRMModifiedAreasAdjustedPivoted #Duplicate dataframe
SRMModifiedAreasAdjustedPivotedCorrected[is.na(SRMModifiedAreasAdjustedPivotedCorrected)] <- 0 #Replace NAs with 0s
head(SRMModifiedAreasAdjustedPivotedCorrected) #Confirm there are no NAs
SRMAveragedAreas <- SRMModifiedAreasAdjusted #Dupliate dataframe
SRMAveragedAreas$Average.Area <- ((SRMAveragedAreas$Replicate1 + SRMAveragedAreas$Replicate2)/2) #Average peak areas and save as a new column
SRMAveragedAreas <- SRMAveragedAreas[, -c(3:4)] #Remove replicate area columns
head(SRMAveragedAreas) #Confirm changes
SRMAveragedAreasPivoted <- dcast(SRMAveragedAreas, Protein.Name ~ Sample) #Cast table!
head(SRMAveragedAreasPivoted) #Confirm table cast!
getwd()
SRMDataNMDSAveragedCorrected <- read.csv("2017-10-10-Troubleshooting/2017-10-24-Coefficient-of-Variation/2017-10-26-CV-15/2017-10-26-Averaged-Pivoted-Corrected-SRM-Data-after-CV15-and-Distance-Filtering.csv", header = TRUE) #Import modified dataset. This dataset has rownames as the first column, column names as sample IDs. Area data is averaged and corrected (no NAs)
rownames(SRMDataNMDSAveragedCorrected) <- SRMDataNMDSAveragedCorrected[,1]
SRMDataNMDSAveragedCorrected <- SRMDataNMDSAveragedCorrected[,-1] #Remove first column of rownames
head(SRMDataNMDSAveragedCorrected) #Confirm import.
SRMDataNMDSAveragedCorrectedTransposed <- data.frame(t(SRMDataNMDSAveragedCorrected)) #Transpose the data
SRMDataNMDSAveragedCorrectedTransposed$Sample.Number <- rownames(SRMDataNMDSAveragedCorrectedTransposed) #Save rownames as a new column
head(SRMDataNMDSAveragedCorrectedTransposed) #Confirm changes
biologicalReplicates <- read.csv("2017-10-10-Troubleshooting/2017-10-24-Coefficient-of-Variation/2017-10-25-Biological-Replicate-Information-SampleID-Only.csv", na.strings = "N/A") #Import site and eelgrass condition information (i.e. biological replicate information)
head(biologicalReplicates) #Confirm import
colnames(biologicalReplicates) <- c("Sample.Number", "Site", "Eelgrass.Condition")
rownames(biologicalReplicates) <- biologicalReplicates$Sample.Number #Set sample number as row names
head(biologicalReplicates) #Confirm changes
biologicalReplicates$Site <- factor(biologicalReplicates$Site) #Remove 0 as a factor
biologicalReplicates$Eelgrass.Condition <- factor(biologicalReplicates$Eelgrass.Condition) #Remove 0 as a factor
str(biologicalReplicates) #Confirm factor reset
boxplotData <- merge(x = biologicalReplicates, y = SRMDataNMDSAveragedCorrectedTransposed, by = "Sample.Number") #Merge together
head(boxplotData) #Confirm merge
rownames(boxplotData) <- boxplotData$Sample.Number #Set sample number as row names
boxplotData <- boxplotData[-1] #Remove Sample.Number column
head(boxplotData) #Confirm changes
boxplotFilenames <- data.frame(protein = colnames(boxplotData),
modifier = rep("Eelgrass", length(boxplotData))) #Make filename sheet
boxplotFilenames$siteFilenames <- paste(boxplotFilenames$protein, ".jpeg") #Make a new column for the site only filenames
boxplotFilenames$eelgrassFilenames <-paste(boxplotFilenames$protein, boxplotFilenames$modifier, ".jpeg") #Mae a new column for the site and eelgrass filenames
head(boxplotFilenames) #Confirm changes
setwd("2017-10-10-Troubleshooting/2017-10-24-Coefficient-of-Variation/2017-10-26-CV-15/2017-10-26-CV-15-Boxplots/")
getwd()
nTransitions <- (length(boxplotData)) #The number of columns in the dataframe. The first 2 columns are Site and Eelgrass.Condition
for(i in 3:nTransitions) { #For all of my columns with transition IDs
fileName <- boxplotFilenames$siteFilenames[i] #Set the file name choices as the first column
jpeg(filename = fileName, width = 1000, height = 1000) #Save using set file name
boxplot(boxplotData[,i] ~ boxplotData$Site, xlab = "Sites", ylab = "Abundance") #Create the boxplot
dev.off() #Close file
}
for(i in 3:nTransitions) { #For all of my columns with transition IDs
fileName <- boxplotFilenames$eelgrassFilenames[i] #Set the file name choices as the third column
jpeg(filename = fileName, width = 1000, height = 1000) #Save using set file name
boxplot(boxplotData[,i] ~ boxplotData$Site + boxplotData$Eelgrass.Condition, xlab = "Sites", ylab = "Abundance", names = c("CI.Bare", "FB.Bare", "PG.Bare", "SK.Bare", "WB.Bare", "CI.Eelgrass", "FB.Eelgrass", "PG.Eelgrass", "SK.Eelgrass", "WB.Eelgrass")) #Create the boxplot
dev.off() #Close file
}
setwd("../../..") #Set working directory to the master SRM folder
getwd()
setwd("..")
getwd()
getwd() #Confirm changes
SRMModifiedAreas <- read.csv("2017-10-10-Troubleshooting/2017-10-24-Coefficient-of-Variation/2017-10-24-Norm-modSR.csv", header = TRUE) #Import Steven's modified dataset
head(SRMModifiedAreas) #Confirm import
SRMModifiedAreas <- subset(SRMModifiedAreas, subset = SRMModifiedAreas$CoV <= 10) #Only keep rows with coefficient of variation ≤ 10
max(SRMModifiedAreas$CoV) <= 10 #Statement should be TRUE if maximum does not exceed 15
SRMModifiedAreas <- SRMModifiedAreas[,-c(1, 6)] #Remove unnecessary columns (first column and CoV column)
head(SRMModifiedAreas) #Confirm changes. Now I only have Protein.Name, Sample, Replicate1 and Replicate2 (peak areas from Skyline, which are a proxy for protein abundance)
SRMModifiedAreasReplicate1 <- SRMModifiedAreas[, 1:3] #Duplicate dataframe, keeping only Replicate 1 information
SRMModifiedAreasReplicate1$Sample.Number <- paste(SRMModifiedAreasReplicate1$Sample, "-1") #Create a new column with sample and replicate number
SRMModifiedAreasReplicate1 <- SRMModifiedAreasReplicate1[, -2] #Remove Sample column
colnames(SRMModifiedAreasReplicate1) <- c("Protein.Name", "Area", "Sample") #Change column names
head(SRMModifiedAreasReplicate1) #Confirm changes
SRMModifiedAreasReplicate2 <- SRMModifiedAreas[, c(1, 2, 4)] #Duplicate dataframe, keeping only Replicate 2 information
SRMModifiedAreasReplicate2$Sample.Number <- paste(SRMModifiedAreasReplicate2$Sample, "-2") #Create a new column with sample and replicate number
SRMModifiedAreasReplicate2 <- SRMModifiedAreasReplicate2[, -2] #Remove Sample column
colnames(SRMModifiedAreasReplicate2) <- c("Protein.Name", "Area", "Sample") #Change column names
head(SRMModifiedAreasReplicate2) #Confirm changes
SRMModifiedAreasLong <- rbind(SRMModifiedAreasReplicate1, SRMModifiedAreasReplicate2) #Paste dataframes together
head(SRMModifiedAreasLong) #Confirm changes
tail(SRMModifiedAreasLong) #Confirm changes
transform(SRMModifiedAreasLong, Area = as.numeric(Area)) #Make sure Area is recognized as a numeric variable
is.numeric(SRMModifiedAreasLong$Area) #Confirm change
SRMModifiedAreasPivoted <- dcast(SRMModifiedAreasLong, Protein.Name ~ Sample, value.var = "Area") #Cast table! Protein.Name remains as a column with Sample Number as column headers. Area column defined as values.
head(SRMModifiedAreasPivoted) #Confirm cast
rownames(SRMModifiedAreasPivoted) <- SRMModifiedAreasPivoted[, 1] #Save Protein.Name column as rownames
SRMModifiedAreasPivoted <- SRMModifiedAreasPivoted[, -1] #Remove Protein.Name column
head(SRMModifiedAreasPivoted) #Confirm changes
SRMModifiedAreasPivotedCorrected <- SRMModifiedAreasPivoted #Duplicate dataframe
SRMModifiedAreasPivotedCorrected[is.na(SRMModifiedAreasPivotedCorrected)] <- 0 #Replace NAs with 0s
head(SRMModifiedAreasPivotedCorrected) #Confirm there are no NAs
source("biostats.R") #Either load the source R script or copy paste
area.protID <- SRMModifiedAreasPivotedCorrected #Save all area data as a new dataframe
head(area.protID) #Confirm changes
area.t <- t(area.protID) #Transpose the file so that rows and columns are switched
head(area.t) #Confirm transposition
area.tra <- (area.t+1) #Add 1 to all values before transforming
area.tra <- data.trans(area.tra, method = 'log', plot = FALSE) #log(x+1) transformation
proc.nmds.norm.euclidean <- metaMDS(area.t, distance = 'euclidean', k = 2, trymax = 10000, autotransform = FALSE) #Make MDS dissimilarity matrix using euclidean distance. Julian confirmed that I sho
NMDSCoordinates <- proc.nmds.norm.euclidean$points #Save NMDS coordinates of each point in a new dataframe
head(NMDSCoordinates) #Confirm dataframe creation
nSamples <- length(NMDSCoordinates)/2 #Calculate the number of samples
sampleDistances <- vector(length = nSamples) #Create an empty vector to store distance values
for(i in 1:nSamples) { #For rows in NMDSCoordinates
sampleDistances[i] <- sqrt((NMDSCoordinates[i,1]-NMDSCoordinates[i,2])^2 + (NMDSCoordinates[i+1,1]-NMDSCoordinates[i+1,2])^2) #Calculate distance between ordinations
print(sampleDistances[i]) #Print the distance value
}
sampleDistances #Confirm vector creation. This vector has all consecutive pairs, including those that are not paris of technical replicates. I need to retain just the odd numbered rows.
technicalReplicates <- rownames(NMDSCoordinates) #Save rownames as a new vector
technicalReplicates #Confirm vector creation
technicalReplicateDistances <- data.frame(Sample = technicalReplicates[seq(from = 1, to = nSamples, by = 2)],
Distance = sampleDistances[seq(from = 1, to = nSamples, by = 2)]) #Create a new dataframe with just odd numbered row distances (technical replicate pairs)
head(technicalReplicateDistances) #Confirm dataframe creation
tail(technicalReplicateDistances) #Confirm dataframe creation
histogram(technicalReplicateDistances$Distance) #Make a histogram of how many distance fall in bins. Looks like a conservative upper fence would be 0.2, which would allow me to remove samples with the highest ordination distances.
removeThese <- technicalReplicateDistances$Sample[technicalReplicateDistances$Distance >= 0.2] #Identify samples that need to be removed.
removeThese <- gsub(" -1", "", removeThese) #Remove " -1" from the end of each sample ID
removeThese #Confirm changes
SRMModifiedAreasAdjusted <- SRMModifiedAreas[! SRMModifiedAreas$Sample %in% removeThese, ] #Duplicate original dataframe, but remove samples with large ordination distances saved in the vector removeThese
SRMAveragedAreas <- SRMModifiedAreasAdjusted #Dupliate dataframe
SRMAveragedAreas$Average.Area <- ((SRMAveragedAreas$Replicate1 + SRMAveragedAreas$Replicate2)/2) #Average peak areas and save as a new column
SRMAveragedAreas <- SRMAveragedAreas[, -c(3:4)] #Remove replicate area columns
head(SRMAveragedAreas) #Confirm changes
SRMAveragedAreasPivoted <- dcast(SRMAveragedAreas, Protein.Name ~ Sample) #Cast table!
head(SRMAveragedAreasPivoted) #Confirm table cast!
SRMAveragedAreasPivotedCorrected <- SRMAveragedAreasPivoted #Duplicate dataframe
SRMAveragedAreasPivotedCorrected[is.na(SRMAveragedAreasPivotedCorrected)] <- 0 #Replace NAs with 0s
head(SRMAveragedAreasPivotedCorrected) #Confirm there are no NAs
rownames(SRMAveragedAreasPivotedCorrected) <- SRMAveragedAreasPivotedCorrected$Protein.Name #Save protein name column as rownames
SRMAveragedAreasPivotedCorrected <- SRMAveragedAreasPivotedCorrected[, -1] #Remove Protein.Name column
head(SRMAveragedAreasPivotedCorrected) #Confirm changes
write.csv(SRMAveragedAreasPivotedCorrected, "2017-10-10-Troubleshooting/2017-10-24-Coefficient-of-Variation/2017-10-26-CV-10/2017-10-26-Averaged-Pivoted-Corrected-SRM-Data-after-CV10-and-Distance-Filtering.csv") #Wrote out to make subsequent analyses easier.
getwd()
SRMDataNMDSAveragedCorrected <- read.csv("2017-10-10-Troubleshooting/2017-10-24-Coefficient-of-Variation/2017-10-26-CV-15/2017-10-26-Averaged-Pivoted-Corrected-SRM-Data-after-CV15-and-Distance-Filtering.csv", header = TRUE) #Import modified dataset. This dataset has rownames as the first column, column names as sample IDs. Area data is averaged and corrected (no NAs)
rownames(SRMDataNMDSAveragedCorrected) <- SRMDataNMDSAveragedCorrected[,1]
SRMDataNMDSAveragedCorrected <- SRMDataNMDSAveragedCorrected[,-1] #Remove first column of rownames
head(SRMDataNMDSAveragedCorrected) #Confirm import.
SRMDataNMDSAveragedCorrected <- read.csv("2017-10-10-Troubleshooting/2017-10-24-Coefficient-of-Variation/2017-10-26-CV-10/2017-10-26-Averaged-Pivoted-Corrected-SRM-Data-after-CV10-and-Distance-Filtering.csv", header = TRUE) #Import modified dataset. This dataset has rownames as the first column, column names as sample IDs. Area data is averaged and corrected (no NAs)
rownames(SRMDataNMDSAveragedCorrected) <- SRMDataNMDSAveragedCorrected[,1]
SRMDataNMDSAveragedCorrected <- SRMDataNMDSAveragedCorrected[,-1] #Remove first column of rownames
head(SRMDataNMDSAveragedCorrected) #Confirm import.
SRMDataNMDSAveragedCorrectedTransposed <- data.frame(t(SRMDataNMDSAveragedCorrected)) #Transpose the data
SRMDataNMDSAveragedCorrectedTransposed$Sample.Number <- rownames(SRMDataNMDSAveragedCorrectedTransposed) #Save rownames as a new column
head(SRMDataNMDSAveragedCorrectedTransposed) #Confirm changes
biologicalReplicates <- read.csv("2017-10-10-Troubleshooting/2017-10-24-Coefficient-of-Variation/2017-10-25-Biological-Replicate-Information-SampleID-Only.csv", na.strings = "N/A") #Import site and eelgrass condition information (i.e. biological replicate information)
head(biologicalReplicates) #Confirm import
colnames(biologicalReplicates) <- c("Sample.Number", "Site", "Eelgrass.Condition")
rownames(biologicalReplicates) <- biologicalReplicates$Sample.Number #Set sample number as row names
head(biologicalReplicates) #Confirm changes
biologicalReplicates$Site <- factor(biologicalReplicates$Site) #Remove 0 as a factor
biologicalReplicates$Eelgrass.Condition <- factor(biologicalReplicates$Eelgrass.Condition) #Remove 0 as a factor
str(biologicalReplicates) #Confirm factor reset
boxplotData <- merge(x = biologicalReplicates, y = SRMDataNMDSAveragedCorrectedTransposed, by = "Sample.Number") #Merge together
head(boxplotData) #Confirm merge
rownames(boxplotData) <- boxplotData$Sample.Number #Set sample number as row names
boxplotData <- boxplotData[-1] #Remove Sample.Number column
head(boxplotData) #Confirm changes
boxplotFilenames <- data.frame(protein = colnames(boxplotData),
modifier = rep("Eelgrass", length(boxplotData))) #Make filename sheet
boxplotFilenames$siteFilenames <- paste(boxplotFilenames$protein, ".jpeg") #Make a new column for the site only filenames
boxplotFilenames$eelgrassFilenames <-paste(boxplotFilenames$protein, boxplotFilenames$modifier, ".jpeg") #Mae a new column for the site and eelgrass filenames
head(boxplotFilenames) #Confirm changes
setwd("2017-10-10-Troubleshooting/2017-10-24-Coefficient-of-Variation/2017-10-26-CV-10/2017-10-26-CV-10-Boxplots/")
getwd()
nTransitions <- (length(boxplotData)) #The number of columns in the dataframe. The first 2 columns are Site and Eelgrass.Condition
for(i in 3:nTransitions) { #For all of my columns with transition IDs
fileName <- boxplotFilenames$siteFilenames[i] #Set the file name choices as the first column
jpeg(filename = fileName, width = 1000, height = 1000) #Save using set file name
boxplot(boxplotData[,i] ~ boxplotData$Site, xlab = "Sites", ylab = "Abundance") #Create the boxplot
dev.off() #Close file
}
for(i in 3:nTransitions) { #For all of my columns with transition IDs
fileName <- boxplotFilenames$eelgrassFilenames[i] #Set the file name choices as the third column
jpeg(filename = fileName, width = 1000, height = 1000) #Save using set file name
boxplot(boxplotData[,i] ~ boxplotData$Site + boxplotData$Eelgrass.Condition, xlab = "Sites", ylab = "Abundance", names = c("CI.Bare", "FB.Bare", "PG.Bare", "SK.Bare", "WB.Bare", "CI.Eelgrass", "FB.Eelgrass", "PG.Eelgrass", "SK.Eelgrass", "WB.Eelgrass")) #Create the boxplot
dev.off() #Close file
}
getwd()
setwd("../../..") #Set working directory to the master SRM folder
getwd()
setwd("..")
getwd()
SRMDataNMDSAveragedCorrected <- read.csv("2017-10-10-Troubleshooting/2017-10-24-Coefficient-of-Variation/2017-10-26-Averaged-Pivoted-Corrected-SRM-Data-after-CV20-and-Distance-Filtering.csv", header = TRUE) #Import modified dataset. This dataset has rownames as the first column, column names as sample IDs. Area data is averaged and corrected (no NAs)
rownames(SRMDataNMDSAveragedCorrected) <- SRMDataNMDSAveragedCorrected[,1]
SRMDataNMDSAveragedCorrected <- SRMDataNMDSAveragedCorrected[,-1] #Remove first column of rownames
head(SRMDataNMDSAveragedCorrected) #Confirm import.
SRMDataNMDSAveragedCorrectedTransposed <- data.frame(t(SRMDataNMDSAveragedCorrected)) #Transpose the data
SRMDataNMDSAveragedCorrectedTransposed$Sample.Number <- rownames(SRMDataNMDSAveragedCorrectedTransposed) #Save rownames as a new column
head(SRMDataNMDSAveragedCorrectedTransposed) #Confirm changes
biologicalReplicates <- read.csv("2017-10-10-Troubleshooting/2017-10-24-Coefficient-of-Variation/2017-10-25-Biological-Replicate-Information-SampleID-Only.csv", na.strings = "N/A") #Import site and eelgrass condition information (i.e. biological replicate information)
head(biologicalReplicates) #Confirm import
colnames(biologicalReplicates) <- c("Sample.Number", "Site", "Eelgrass.Condition")
rownames(biologicalReplicates) <- biologicalReplicates$Sample.Number #Set sample number as row names
head(biologicalReplicates) #Confirm changes
biologicalReplicates$Site <- factor(biologicalReplicates$Site) #Remove 0 as a factor
biologicalReplicates$Eelgrass.Condition <- factor(biologicalReplicates$Eelgrass.Condition) #Remove 0 as a factor
str(biologicalReplicates) #Confirm factor reset
boxplotData <- merge(x = biologicalReplicates, y = SRMDataNMDSAveragedCorrectedTransposed, by = "Sample.Number") #Merge together
head(boxplotData) #Confirm merge
rownames(boxplotData) <- boxplotData$Sample.Number #Set sample number as row names
boxplotData <- boxplotData[-1] #Remove Sample.Number column
head(boxplotData) #Confirm changes
boxplotFilenames <- data.frame(protein = colnames(boxplotData),
modifier = rep("Eelgrass", length(boxplotData))) #Make filename sheet
boxplotFilenames$siteFilenames <- paste(boxplotFilenames$protein, ".jpeg") #Make a new column for the site only filenames
boxplotFilenames$eelgrassFilenames <-paste(boxplotFilenames$protein, boxplotFilenames$modifier, ".jpeg") #Mae a new column for the site and eelgrass filenames
head(boxplotFilenames) #Confirm changes
setwd("2017-10-10-Troubleshooting/2017-10-24-Coefficient-of-Variation/2017-10-26-CV-20-Boxplots/")
getwd()
nTransitions <- (length(boxplotData)) #The number of columns in the dataframe. The first 2 columns are Site and Eelgrass.Condition
for(i in 3:nTransitions) { #For all of my columns with transition IDs
fileName <- boxplotFilenames$siteFilenames[i] #Set the file name choices as the first column
jpeg(filename = fileName, width = 1000, height = 1000) #Save using set file name
boxplot(boxplotData[,i] ~ boxplotData$Site, xlab = "Sites", ylab = "Abundance") #Create the boxplot
main(fileName)
dev.off() #Close file
}
?main
??main
for(i in 3:nTransitions) { #For all of my columns with transition IDs
fileName <- boxplotFilenames$siteFilenames[i] #Set the file name choices as the first column
jpeg(filename = fileName, width = 1000, height = 1000) #Save using set file name
boxplot(boxplotData[,i] ~ boxplotData$Site, xlab = "Sites", ylab = "Abundance") #Create the boxplot
title(fileName)
dev.off() #Close file
}
for(i in 3:nTransitions) { #For all of my columns with transition IDs
fileName <- boxplotFilenames$eelgrassFilenames[i] #Set the file name choices as the third column
jpeg(filename = fileName, width = 1000, height = 1000) #Save using set file name
boxplot(boxplotData[,i] ~ boxplotData$Site + boxplotData$Eelgrass.Condition, xlab = "Sites", ylab = "Abundance", names = c("CI.Bare", "FB.Bare", "PG.Bare", "SK.Bare", "WB.Bare", "CI.Eelgrass", "FB.Eelgrass", "PG.Eelgrass", "SK.Eelgrass", "WB.Eelgrass")) #Create the boxplot
title(fileName)
dev.off() #Close file
}
setwd("../../../..") #Set working directory to the master SRM folder
getwd()
setwd(".")
getwd()
setwd("..")
getwd()
setwd("analyses/DNR_SRM_20170902/")
getwd()
SRMDataNMDSAveragedCorrected <- read.csv("2017-10-10-Troubleshooting/2017-10-24-Coefficient-of-Variation/2017-10-26-CV-15/2017-10-26-Averaged-Pivoted-Corrected-SRM-Data-after-CV15-and-Distance-Filtering.csv", header = TRUE) #Import modified dataset. This dataset has rownames as the first column, column names as sample IDs. Area data is averaged and corrected (no NAs)
#In this script, I'll depict normalized protein area across samples as bar charts after filtering transitions with a coefficient of variation > 15 and technical replicates with ordination distances > 0.20.
#### SET WORKING DIRECTORY ####
setwd("../../../..") #Set working directory to the master SRM folder
getwd()
#### IMPORT DATA ####
SRMDataNMDSAveragedCorrected <- read.csv("2017-10-10-Troubleshooting/2017-10-24-Coefficient-of-Variation/2017-10-26-CV-15/2017-10-26-Averaged-Pivoted-Corrected-SRM-Data-after-CV15-and-Distance-Filtering.csv", header = TRUE) #Import modified dataset. This dataset has rownames as the first column, column names as sample IDs. Area data is averaged and corrected (no NAs)
rownames(SRMDataNMDSAveragedCorrected) <- SRMDataNMDSAveragedCorrected[,1]
SRMDataNMDSAveragedCorrected <- SRMDataNMDSAveragedCorrected[,-1] #Remove first column of rownames
head(SRMDataNMDSAveragedCorrected) #Confirm import.
#### REFORMAT DATA ####
SRMDataNMDSAveragedCorrectedTransposed <- data.frame(t(SRMDataNMDSAveragedCorrected)) #Transpose the data
SRMDataNMDSAveragedCorrectedTransposed$Sample.Number <- rownames(SRMDataNMDSAveragedCorrectedTransposed) #Save rownames as a new column
head(SRMDataNMDSAveragedCorrectedTransposed) #Confirm changes
biologicalReplicates <- read.csv("2017-10-10-Troubleshooting/2017-10-24-Coefficient-of-Variation/2017-10-25-Biological-Replicate-Information-SampleID-Only.csv", na.strings = "N/A") #Import site and eelgrass condition information (i.e. biological replicate information)
head(biologicalReplicates) #Confirm import
colnames(biologicalReplicates) <- c("Sample.Number", "Site", "Eelgrass.Condition")
rownames(biologicalReplicates) <- biologicalReplicates$Sample.Number #Set sample number as row names
head(biologicalReplicates) #Confirm changes
biologicalReplicates$Site <- factor(biologicalReplicates$Site) #Remove 0 as a factor
biologicalReplicates$Eelgrass.Condition <- factor(biologicalReplicates$Eelgrass.Condition) #Remove 0 as a factor
str(biologicalReplicates) #Confirm factor reset
boxplotData <- merge(x = biologicalReplicates, y = SRMDataNMDSAveragedCorrectedTransposed, by = "Sample.Number") #Merge together
head(boxplotData) #Confirm merge
rownames(boxplotData) <- boxplotData$Sample.Number #Set sample number as row names
boxplotData <- boxplotData[-1] #Remove Sample.Number column
head(boxplotData) #Confirm changes
#### ASSIGN FILENAMES ####
boxplotFilenames <- data.frame(protein = colnames(boxplotData),
modifier = rep("Eelgrass", length(boxplotData))) #Make filename sheet
boxplotFilenames$siteFilenames <- paste(boxplotFilenames$protein, ".jpeg") #Make a new column for the site only filenames
boxplotFilenames$eelgrassFilenames <-paste(boxplotFilenames$protein, boxplotFilenames$modifier, ".jpeg") #Mae a new column for the site and eelgrass filenames
head(boxplotFilenames) #Confirm changes
#### CHANGE WORKING DIRECTORY ####
setwd("2017-10-10-Troubleshooting/2017-10-24-Coefficient-of-Variation/2017-10-26-CV-15/2017-10-26-CV-15-Boxplots/")
getwd()
#### MAKE BOXPLOTS JUST BASED ON SITES ####
nTransitions <- (length(boxplotData)) #The number of columns in the dataframe. The first 2 columns are Site and Eelgrass.Condition
for(i in 3:nTransitions) { #For all of my columns with transition IDs
fileName <- boxplotFilenames$siteFilenames[i] #Set the file name choices as the first column
jpeg(filename = fileName, width = 1000, height = 1000) #Save using set file name
boxplot(boxplotData[,i] ~ boxplotData$Site, xlab = "Sites", ylab = "Abundance") #Create the boxplot
title(fileName)
dev.off() #Close file
}
#### MAKE BOXPLOTS BASED ON SITES AND EELGRASS CONDITIONS ####
for(i in 3:nTransitions) { #For all of my columns with transition IDs
fileName <- boxplotFilenames$eelgrassFilenames[i] #Set the file name choices as the third column
jpeg(filename = fileName, width = 1000, height = 1000) #Save using set file name
boxplot(boxplotData[,i] ~ boxplotData$Site + boxplotData$Eelgrass.Condition, xlab = "Sites", ylab = "Abundance", names = c("CI.Bare", "FB.Bare", "PG.Bare", "SK.Bare", "WB.Bare", "CI.Eelgrass", "FB.Eelgrass", "PG.Eelgrass", "SK.Eelgrass", "WB.Eelgrass")) #Create the boxplot
title(fileName)
dev.off() #Close file
}
getwd()
setwd("Documents/project-oyster-oa/analyses/DNR_SRM_20170902/")
#### IMPORT DATA ####
SRMDataNMDSAveragedCorrected <- read.csv("2017-10-10-Troubleshooting/2017-10-24-Coefficient-of-Variation/2017-10-26-CV-15/2017-10-26-Averaged-Pivoted-Corrected-SRM-Data-after-CV15-and-Distance-Filtering.csv", header = TRUE) #Import modified dataset. This dataset has rownames as the first column, column names as sample IDs. Area data is averaged and corrected (no NAs)
rownames(SRMDataNMDSAveragedCorrected) <- SRMDataNMDSAveragedCorrected[,1]
SRMDataNMDSAveragedCorrected <- SRMDataNMDSAveragedCorrected[,-1] #Remove first column of rownames
head(SRMDataNMDSAveragedCorrected) #Confirm import.
#### REFORMAT DATA ####
SRMDataNMDSAveragedCorrectedTransposed <- data.frame(t(SRMDataNMDSAveragedCorrected)) #Transpose the data
SRMDataNMDSAveragedCorrectedTransposed$Sample.Number <- rownames(SRMDataNMDSAveragedCorrectedTransposed) #Save rownames as a new column
head(SRMDataNMDSAveragedCorrectedTransposed) #Confirm changes
biologicalReplicates <- read.csv("2017-10-10-Troubleshooting/2017-10-24-Coefficient-of-Variation/2017-10-25-Biological-Replicate-Information-SampleID-Only.csv", na.strings = "N/A") #Import site and eelgrass condition information (i.e. biological replicate information)
head(biologicalReplicates) #Confirm import
colnames(biologicalReplicates) <- c("Sample.Number", "Site", "Eelgrass.Condition")
rownames(biologicalReplicates) <- biologicalReplicates$Sample.Number #Set sample number as row names
head(biologicalReplicates) #Confirm changes
biologicalReplicates$Site <- factor(biologicalReplicates$Site) #Remove 0 as a factor
biologicalReplicates$Eelgrass.Condition <- factor(biologicalReplicates$Eelgrass.Condition) #Remove 0 as a factor
str(biologicalReplicates) #Confirm factor reset
boxplotData <- merge(x = biologicalReplicates, y = SRMDataNMDSAveragedCorrectedTransposed, by = "Sample.Number") #Merge together
head(boxplotData) #Confirm merge
rownames(boxplotData) <- boxplotData$Sample.Number #Set sample number as row names
boxplotData <- boxplotData[-1] #Remove Sample.Number column
head(boxplotData) #Confirm changes
#### ASSIGN FILENAMES ####
boxplotFilenames <- data.frame(protein = colnames(boxplotData),
modifier = rep("Eelgrass", length(boxplotData))) #Make filename sheet
boxplotFilenames$siteFilenames <- paste(boxplotFilenames$protein, ".jpeg") #Make a new column for the site only filenames
boxplotFilenames$eelgrassFilenames <-paste(boxplotFilenames$protein, boxplotFilenames$modifier, ".jpeg") #Mae a new column for the site and eelgrass filenames
head(boxplotFilenames) #Confirm changes
#### CHANGE WORKING DIRECTORY ####
setwd("2017-10-10-Troubleshooting/2017-10-24-Coefficient-of-Variation/2017-10-26-CV-15/2017-10-26-CV-15-Boxplots/")
getwd()
#### MAKE BOXPLOTS JUST BASED ON SITES ####
nTransitions <- (length(boxplotData)) #The number of columns in the dataframe. The first 2 columns are Site and Eelgrass.Condition
for(i in 3:nTransitions) { #For all of my columns with transition IDs
fileName <- boxplotFilenames$siteFilenames[i] #Set the file name choices as the first column
jpeg(filename = fileName, width = 1000, height = 1000) #Save using set file name
boxplot(boxplotData[,i] ~ boxplotData$Site, xlab = "Sites", ylab = "Abundance") #Create the boxplot
title(fileName)
dev.off() #Close file
}
#### MAKE BOXPLOTS BASED ON SITES AND EELGRASS CONDITIONS ####
for(i in 3:nTransitions) { #For all of my columns with transition IDs
fileName <- boxplotFilenames$eelgrassFilenames[i] #Set the file name choices as the third column
jpeg(filename = fileName, width = 1000, height = 1000) #Save using set file name
boxplot(boxplotData[,i] ~ boxplotData$Site + boxplotData$Eelgrass.Condition, xlab = "Sites", ylab = "Abundance", names = c("CI.Bare", "FB.Bare", "PG.Bare", "SK.Bare", "WB.Bare", "CI.Eelgrass", "FB.Eelgrass", "PG.Eelgrass", "SK.Eelgrass", "WB.Eelgrass")) #Create the boxplot
title(fileName)
dev.off() #Close file
}
getwd()
setwd("../../../..") #Set working directory to the master SRM folder
getwd()
#### IMPORT DATA ####
SRMDataNMDSAveragedCorrected <- read.csv("2017-10-10-Troubleshooting/2017-10-24-Coefficient-of-Variation/2017-10-26-CV-10/2017-10-26-Averaged-Pivoted-Corrected-SRM-Data-after-CV10-and-Distance-Filtering.csv", header = TRUE) #Import modified dataset. This dataset has rownames as the first column, column names as sample IDs. Area data is averaged and corrected (no NAs)
rownames(SRMDataNMDSAveragedCorrected) <- SRMDataNMDSAveragedCorrected[,1]
SRMDataNMDSAveragedCorrected <- SRMDataNMDSAveragedCorrected[,-1] #Remove first column of rownames
head(SRMDataNMDSAveragedCorrected) #Confirm import.
#### REFORMAT DATA ####
SRMDataNMDSAveragedCorrectedTransposed <- data.frame(t(SRMDataNMDSAveragedCorrected)) #Transpose the data
SRMDataNMDSAveragedCorrectedTransposed$Sample.Number <- rownames(SRMDataNMDSAveragedCorrectedTransposed) #Save rownames as a new column
head(SRMDataNMDSAveragedCorrectedTransposed) #Confirm changes
biologicalReplicates <- read.csv("2017-10-10-Troubleshooting/2017-10-24-Coefficient-of-Variation/2017-10-25-Biological-Replicate-Information-SampleID-Only.csv", na.strings = "N/A") #Import site and eelgrass condition information (i.e. biological replicate information)
head(biologicalReplicates) #Confirm import
colnames(biologicalReplicates) <- c("Sample.Number", "Site", "Eelgrass.Condition")
rownames(biologicalReplicates) <- biologicalReplicates$Sample.Number #Set sample number as row names
head(biologicalReplicates) #Confirm changes
biologicalReplicates$Site <- factor(biologicalReplicates$Site) #Remove 0 as a factor
biologicalReplicates$Eelgrass.Condition <- factor(biologicalReplicates$Eelgrass.Condition) #Remove 0 as a factor
str(biologicalReplicates) #Confirm factor reset
boxplotData <- merge(x = biologicalReplicates, y = SRMDataNMDSAveragedCorrectedTransposed, by = "Sample.Number") #Merge together
head(boxplotData) #Confirm merge
rownames(boxplotData) <- boxplotData$Sample.Number #Set sample number as row names
boxplotData <- boxplotData[-1] #Remove Sample.Number column
head(boxplotData) #Confirm changes
#### ASSIGN FILENAMES ####
boxplotFilenames <- data.frame(protein = colnames(boxplotData),
modifier = rep("Eelgrass", length(boxplotData))) #Make filename sheet
boxplotFilenames$siteFilenames <- paste(boxplotFilenames$protein, ".jpeg") #Make a new column for the site only filenames
boxplotFilenames$eelgrassFilenames <-paste(boxplotFilenames$protein, boxplotFilenames$modifier, ".jpeg") #Mae a new column for the site and eelgrass filenames
head(boxplotFilenames) #Confirm changes
#### CHANGE WORKING DIRECTORY ####
setwd("2017-10-10-Troubleshooting/2017-10-24-Coefficient-of-Variation/2017-10-26-CV-10/2017-10-26-CV-10-Boxplots/")
getwd()
#### MAKE BOXPLOTS JUST BASED ON SITES ####
nTransitions <- (length(boxplotData)) #The number of columns in the dataframe. The first 2 columns are Site and Eelgrass.Condition
for(i in 3:nTransitions) { #For all of my columns with transition IDs
fileName <- boxplotFilenames$siteFilenames[i] #Set the file name choices as the first column
jpeg(filename = fileName, width = 1000, height = 1000) #Save using set file name
boxplot(boxplotData[,i] ~ boxplotData$Site, xlab = "Sites", ylab = "Abundance") #Create the boxplot
title(fileName)
dev.off() #Close file
}
#### MAKE BOXPLOTS BASED ON SITES AND EELGRASS CONDITIONS ####
for(i in 3:nTransitions) { #For all of my columns with transition IDs
fileName <- boxplotFilenames$eelgrassFilenames[i] #Set the file name choices as the third column
jpeg(filename = fileName, width = 1000, height = 1000) #Save using set file name
boxplot(boxplotData[,i] ~ boxplotData$Site + boxplotData$Eelgrass.Condition, xlab = "Sites", ylab = "Abundance", names = c("CI.Bare", "FB.Bare", "PG.Bare", "SK.Bare", "WB.Bare", "CI.Eelgrass", "FB.Eelgrass", "PG.Eelgrass", "SK.Eelgrass", "WB.Eelgrass")) #Create the boxplot
title(fileName)
dev.off() #Close file
}
