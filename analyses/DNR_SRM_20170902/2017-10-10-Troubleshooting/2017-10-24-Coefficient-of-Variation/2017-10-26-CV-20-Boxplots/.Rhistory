8+5
1:250
print("hello world!")
x <- 1:5
x
y <- c(6, 7, 8, 9, 10)
y
a  <-  b <- c <- 3
x + y
rm(list = ls())
install.packages("ggplot2")
require("ggplot")
require("ggplot2")
trends.txt  <- read.table("~/Downloads/R/GoogleTrends.txt", header = TRUE, sep = "\t")
View(trends.txt)
trends.csv  <- read.csv("~Downloads/R/GoogleTrends.csv", header = TRUE)
trends.csv  <- read.csv("~/Downloads/R/GoogleTrends.csv", header = TRUE)
View(trends.csv)
View(trends.csv)
str(trends.csv)
log(x = 10, base = 10)
log(10)
library("ggplot2", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
library("RColorBrewer", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
#--Question 2a
#--Question 2a
#--Question 2a
#--Question 2a
seq?
?seq
seq(from -1 to 1, length.out = 100)
seq(from -1, to 1, length.out = 100)
seq(from -1, to 1, length.out=100)
seq(from -1 to 1, length.out=100)
seq(from -1, to 1, length.out=100)
seq(-1, 1, length.out=100)
x <-- seq(-1, 1, length.out=100)
exp(x/2)
y <-- exp(x/2)
y[y > 1]
y > 1
y[y > 1]
rep("Small", "Medium", "Large", each = 5)
size.nonfac <-- c("Small", "Small", "Small", "Small", "Small", "Medium", "Medium", "Medium","Medium", "Medium", "Large", "Large", "Large", "Large", "Large")
x <- seq(-1, 1, length.out=100)
y <- exp(x/2)
y[y > 1]
which(y > 1)
length(y > 1)
y > 1
sum(y > 1)
size.nonfac <- c("Small", "Small", "Small", "Small", "Small", "Medium", "Medium", "Medium","Medium", "Medium", "Large", "Large", "Large", "Large", "Large")
size <- factor(size.nonfac)
unknown.nonfac <- c("Unknown", "Unknown")
unknown <- factor(unknown.nonfac)
rbind(size, unknwon)
rbind(size, unknown)
size.nonfac <-rep(1:3, each = 5)
size <- factor(size.nonfac, labels=c("Small", "Medium", "Large")
size <- factor(size.nonfac, labels=c("Small", "Medium", "Large"))
size <- factor(size, labels = c("Small", "Medium", "Large"))
unknown.nonfac <- rep(1, each = 2)
size <- factor(size.nonfac, labels = c("Small", "Medium", "Large"))
unknown <- factor(unknown.nonfac, labels = c("Unknown"))
rbind(size, unknown)
head(size)
str(size)
c(size, unknown)
unknown.nonfac <- rep(4, each = 2)
unknown <- factor(unknown.nonfac, labels = c("Unknown"))
c(size, unknown)
c(size.nonfac, unknown.nonfac)
size <- factor(size.nonfac, labels = c("Small", "Medium", "Large"))
observedSize.nonfac <- c(size.nonfac, unknown.nonfac)
observedSize <- factor(observedSize.nonfac, labels = c("Small", "Medium", "Large", "Unknwon"))
str(observedSize)
observedSize.nonfac <- c(size.nonfac, unknown.nonfac)
str(observedSize.nonfac)
observedSize.nonfac
observedSize
unknown.nonfac <- rep(4, each = 2)
observedSize.nonfac <- c(size.nonfac, unknown.nonfac)
observedSize <- factor(observedSize.nonfac, labels = c("Small", "Medium", "Large", "Unknwon"))
observedSize
read.table(file = "fishPassage.csv", header = T, sep = ",", skip = 0, na.strings = NA)
x <- seq(-1, 1, length.out=100) #create sequence with length of 100 values
y <- exp(x/2)
sum(y > 1) #add values together that are "TRUE" for y > 1
size.nonfac <-rep(1:3, each = 5) #create vector
size <- factor(size.nonfac, labels = c("Small", "Medium", "Large")) #exchange numbers for small, medium and large
size #view final vector with labelled factors
unknown.nonfac <- rep(4, each = 2) #create vector with new values
observedSize.nonfac <- c(size.nonfac, unknown.nonfac) #combine both vectors with unlabelled factors
observedSize <- factor(observedSize.nonfac, labels = c("Small", "Medium", "Large", "Unknwon")) #label factors
observedSize #view final vector with labelled factors
fishPassage <- read.csv(file = "fishPassage.csv", header = T, sep = ",", na.strings = "NA")
str(bonnevilleDam.data) #confirm dataframe structure
bonnevilleDam.data <- fishPassage[fishPassage$Dam == "BON",] #create new dataframe for just BON data
fishPassage <- read.csv(file = "fishPassage.csv", header = T, sep = ",", na.strings = "NA")
read.csv(file = "ScrapData.csv", header = TRUE)
install.packages("HH")
library(HH)
?HH
case(cholesterolModel)
cholesterolData <- read.csv(file = "homework_2.csv") #Import data
cholesterolModel <- lm(cholesterol ~ calcium, data = cholesterolData)
proteinAreas <- read.csv("2017-06-10-protein-areas-only-error-checked.csv", na.strings = "#N/A") #Specify Skyline's special way of designating N/A values
dir.create("../Downloads/2017-Geoduck-SRM-raw/")
dir.create("../Downloads/2017-Geoduck-SRM-raw/")
?dir.create
dir.create(path = "../Downloads/2017-Geoduck-SRM-raw/")
dir.create("../Guest/Downloads/2017-Geoduck-SRM-raw")
dir.create("./Downloads/2017-Geoduck-SRM-raw")
getwd()
setwd("Documents/project-oyster-oa/analyses/DNR_SRM_20170902/")
SRMDataNMDSAveragedCorrected <- read.csv("2017-10-10-Troubleshooting/2017-10-24-Coefficient-of-Variation/2017-10-30-Protein-Areas-for-Boxplots.csv", header = TRUE) #Import modified dataset. This dataset has rownames as the first column, column names as sample IDs. Area data is averaged and corrected (no NAs)
rownames(SRMDataNMDSAveragedCorrected) <- SRMDataNMDSAveragedCorrected[,1]
SRMDataNMDSAveragedCorrected <- SRMDataNMDSAveragedCorrected[,-1] #Remove first column of rownames
head(SRMDataNMDSAveragedCorrected) #Confirm import.
SRMDataNMDSAveragedCorrectedTransposed <- data.frame(t(SRMDataNMDSAveragedCorrected)) #Transpose the data
SRMDataNMDSAveragedCorrectedTransposed$Sample.Number <- rownames(SRMDataNMDSAveragedCorrectedTransposed) #Save rownames as a new column
head(SRMDataNMDSAveragedCorrectedTransposed) #Confirm changes
biologicalReplicates <- read.csv("2017-10-10-Troubleshooting/2017-10-24-Coefficient-of-Variation/2017-10-25-Biological-Replicate-Information-SampleID-Only.csv", na.strings = "N/A") #Import site and eelgrass condition information (i.e. biological replicate information)
head(biologicalReplicates) #Confirm import
colnames(biologicalReplicates) <- c("Sample.Number", "Site", "Eelgrass.Condition")
rownames(biologicalReplicates) <- biologicalReplicates$Sample.Number #Set sample number as row names
head(biologicalReplicates) #Confirm changes
biologicalReplicates$Site <- factor(biologicalReplicates$Site) #Remove 0 as a factor
biologicalReplicates$Eelgrass.Condition <- factor(biologicalReplicates$Eelgrass.Condition) #Remove 0 as a factor
str(biologicalReplicates) #Confirm factor reset
boxplotData <- merge(x = biologicalReplicates, y = SRMDataNMDSAveragedCorrectedTransposed, by = "Sample.Number") #Merge together
head(boxplotData) #Confirm merge
rownames(boxplotData) <- boxplotData$Sample.Number #Set sample number as row names
boxplotData <- boxplotData[-1] #Remove Sample.Number column
head(boxplotData) #Confirm changes
boxplotFilenames <- data.frame(protein = colnames(boxplotData),
modifier = rep("Eelgrass", length(boxplotData))) #Make filename sheet
boxplotFilenames$siteFilenames <- paste(boxplotFilenames$protein, ".jpeg") #Make a new column for the site only filenames
boxplotFilenames$eelgrassFilenames <-paste(boxplotFilenames$protein, boxplotFilenames$modifier, ".jpeg") #Mae a new column for the site and eelgrass filenames
head(boxplotFilenames) #Confirm changes
setwd("2017-10-10-Troubleshooting/2017-10-24-Coefficient-of-Variation/2017-10-26-CV-20-Boxplots/")
getwd()
nTransitions <- (length(boxplotData)) #The number of columns in the dataframe. The first 2 columns are Site and Eelgrass.Condition
for(i in 3:nTransitions) { #For all of my columns with transition IDs
fileName <- boxplotFilenames$siteFilenames[i] #Set the file name choices as the first column
jpeg(filename = fileName, width = 1000, height = 1000) #Save using set file name
boxplot(boxplotData[,i] ~ boxplotData$Site, xlab = "Sites", ylab = "Abundance") #Create the boxplot
title(fileName)
dev.off() #Close file
}
for(i in 3:nTransitions) { #For all of my columns with transition IDs
fileName <- boxplotFilenames$eelgrassFilenames[i] #Set the file name choices as the third column
jpeg(filename = fileName, width = 1000, height = 1000) #Save using set file name
boxplot(boxplotData[,i] ~ boxplotData$Site + boxplotData$Eelgrass.Condition, xlab = "Sites", ylab = "Abundance", names = c("CI.Bare", "FB.Bare", "PG.Bare", "SK.Bare", "WB.Bare", "CI.Eelgrass", "FB.Eelgrass", "PG.Eelgrass", "SK.Eelgrass", "WB.Eelgrass")) #Create the boxplot
title(fileName)
dev.off() #Close file
}
fileName <- boxplotFilenames$siteFilenames[3] #Set the file name choices as the first column
boxplot(boxplotData[,3] ~ boxplotData$Site, lwd = 2, xlab = "Sites", ylab = "Abundance") #Create the boxplot
title(fileName)
stripchart(boxplotData[,3] ~ boxplotData$Site, vertical = TRUE, method = "jitter", add = TRUE, pch = 20, col = 'blue')
boxplot(boxplotData[,3] ~ boxplotData$Site, lwd = 2, xlab = "Sites", ylab = "Abundance") #Create the boxplot
fileName <- boxplotFilenames$siteFilenames[3] #Set the file name choices as the first column
boxplot(boxplotData[,3] ~ boxplotData$Site, lwd = 2, xlab = "Sites", ylab = "Abundance") #Create the boxplot
stripchart(boxplotData[,3] ~ boxplotData$Site, vertical = TRUE, method = "jitter", add = TRUE, pch = 20, col = 'blue') #Add each datapoint
title(fileName)
nTransitions <- (length(boxplotData)) #The number of columns in the dataframe. The first 2 columns are Site and Eelgrass.Condition
for(i in 3:nTransitions) { #For all of my columns with transition IDs
fileName <- boxplotFilenames$siteFilenames[i] #Set the file name choices as the first column
jpeg(filename = fileName, width = 1000, height = 1000) #Save using set file name
boxplot(boxplotData[,i] ~ boxplotData$Site, xlab = "Sites", ylab = "Abundance") #Create the boxplot
stripchart(boxplotData[,i] ~ boxplotData$Site, vertical = TRUE, method = "jitter", add = TRUE, pch = 20, col = 'blue') #Add each data point
title(fileName)
dev.off() #Close file
}
fileName <- boxplotFilenames$eelgrassFilenames[3] #Set the file name choices as the third column
boxplot(boxplotData[,3] ~ boxplotData$Site + boxplotData$Eelgrass.Condition, xlab = "Sites", ylab = "Abundance", names = c("CI.Bare", "FB.Bare", "PG.Bare", "SK.Bare", "WB.Bare", "CI.Eelgrass", "FB.Eelgrass", "PG.Eelgrass", "SK.Eelgrass", "WB.Eelgrass")) #Create the boxplot
stripchart(boxplotData[,3] ~ boxplotData$Site, vertical = TRUE, method = "jitter", add = TRUE, pch = 20, col = 'blue') #Add each data point
fileName <- boxplotFilenames$eelgrassFilenames[3] #Set the file name choices as the third column
boxplot(boxplotData[,3] ~ boxplotData$Site + boxplotData$Eelgrass.Condition, xlab = "Sites", ylab = "Abundance", names = c("CI.Bare", "FB.Bare", "PG.Bare", "SK.Bare", "WB.Bare", "CI.Eelgrass", "FB.Eelgrass", "PG.Eelgrass", "SK.Eelgrass", "WB.Eelgrass")) #Create the boxplot
stripchart(boxplotData[,3] ~ boxplotData$Site + boxplotData$Eelgrass.Condition, vertical = TRUE, method = "jitter", add = TRUE, pch = 20, col = 'blue') #Add each data point
title(fileName)
for(i in 3:nTransitions) { #For all of my columns with transition IDs
fileName <- boxplotFilenames$eelgrassFilenames[i] #Set the file name choices as the third column
jpeg(filename = fileName, width = 1000, height = 1000) #Save using set file name
boxplot(boxplotData[,i] ~ boxplotData$Site + boxplotData$Eelgrass.Condition, xlab = "Sites", ylab = "Abundance", names = c("CI.Bare", "FB.Bare", "PG.Bare", "SK.Bare", "WB.Bare", "CI.Eelgrass", "FB.Eelgrass", "PG.Eelgrass", "SK.Eelgrass", "WB.Eelgrass")) #Create the boxplot
stripchart(boxplotData[,i] ~ boxplotData$Site + boxplotData$Eelgrass.Condition, vertical = TRUE, method = "jitter", add = TRUE, pch = 20, col = 'blue') #Add each data point
title(fileName)
dev.off() #Close file
}
